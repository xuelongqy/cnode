<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>argTest.js</files>
      <compile-flags>-maic:0 -maxInterpretCount:0</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ArrayView.js</files>
      <baseline>ArrayView.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicBranching.js</files>
      <baseline>BasicBranching.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicBranching.js</files>
      <baseline>BasicBranchingLinkFail.baseline</baseline>
      <compile-flags>-testtrace:asmjs -forceAsmJsLinkFail</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>

  <test>
    <default>
      <files>basicComparisonDouble.js</files>
      <baseline>basicComparisonDouble.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicComparisonInt.js</files>
      <baseline>basicComparisonInt.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicComparisonUInt.js</files>
      <baseline>basicComparisonUInt.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicLooping.js</files>
      <baseline>BasicLooping.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicMath.js</files>
      <baseline>basicMath.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>basicMathIntSpecific.js</files>
      <baseline>basicMathIntSpecific.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicMathUnary.js</files>
      <baseline>basicMathUnary.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicSwitch.js</files>
      <baseline>BasicSwitch.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>CompositionMathUnary.js</files>
      <baseline>CompositionMathUnary.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>FunctionCalls.js</files>
      <baseline>FunctionCalls.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>FunctionCalls.js</files>
      <baseline>FunctionCalls.baseline</baseline>
      <compile-flags>-ForceStaticInterpreterThunk -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>functiontablecalls.js</files>
      <baseline>functiontablecalls.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>MathBuiltinsCall.js</files>
      <baseline>MathBuiltinsCall.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>MathBuiltinsCall.js</files>
      <baseline>MathBuiltinsCall.baseline</baseline>
      <compile-flags>-testtrace:asmjs -maic:1 -sse:3</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ModuleVarRead.js</files>
      <baseline>ModuleVarRead.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ModuleVarWrite.js</files>
      <baseline>ModuleVarWrite.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ReadArrayView.js</files>
      <baseline>ReadArrayView.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ReadFixOffset.js</files>
      <baseline>ReadFixOffset.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>relink.js</files>
      <baseline>relink.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>relink.js</files>
      <baseline>relink.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>relink.js</files>
      <baseline>relink.baseline</baseline>
      <compile-flags>-forceserialized -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>relink.js</files>
      <baseline>relink.baseline</baseline>
      <compile-flags>-forceserialized -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>WriteArrayView.js</files>
      <baseline>WriteArrayView.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>WriteFixOffset.js</files>
      <baseline>WriteFixOffset.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ArrayView.js</files>
      <baseline>ArrayView.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicBranching.js</files>
      <baseline>BasicBranching.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicComparisonDouble.js</files>
      <baseline>basicComparisonDouble.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicComparisonInt.js</files>
      <baseline>basicComparisonInt.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicComparisonUInt.js</files>
      <baseline>basicComparisonUInt.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicLooping.js</files>
      <baseline>BasicLooping.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicMath.js</files>
      <baseline>basicMath.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicMathIntSpecific.js</files>
      <baseline>basicMathIntSpecific.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicMathUnary.js</files>
      <baseline>basicMathUnary.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicSwitch.js</files>
      <baseline>BasicSwitch.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>CompositionMathUnary.js</files>
      <baseline>CompositionMathUnary.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>FunctionCalls.js</files>
      <baseline>FunctionCalls.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>functiontablecalls.js</files>
      <baseline>functiontablecalls.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>MathBuiltinsCall.js</files>
      <baseline>MathBuiltinsCall.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ModuleVarRead.js</files>
      <baseline>ModuleVarRead.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ModuleVarWrite.js</files>
      <baseline>ModuleVarWrite.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ReadArrayView.js</files>
      <baseline>ReadArrayView.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ReadFixOffset.js</files>
      <baseline>ReadFixOffset.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>WriteArrayView.js</files>
      <baseline>WriteArrayView.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>WriteFixOffset.js</files>
      <baseline>WriteFixOffset.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ArrayView.js</files>
      <baseline>ArrayView.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicBranching.js</files>
      <baseline>BasicBranching.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicComparisonDouble.js</files>
      <baseline>basicComparisonDouble.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>basicComparisonInt.js</files>
      <baseline>basicComparisonInt.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>basicComparisonUInt.js</files>
      <baseline>basicComparisonUInt.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicLooping.js</files>
      <baseline>BasicLooping.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>basicMath.js</files>
      <baseline>basicMath.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>basicMathIntSpecific.js</files>
      <baseline>basicMathIntSpecific.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>basicMathUnary.js</files>
      <baseline>basicMathUnary.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BasicSwitch.js</files>
      <baseline>BasicSwitch.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>CompositionMathUnary.js</files>
      <baseline>CompositionMathUnary.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>FunctionCalls.js</files>
      <baseline>FunctionCalls.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>functiontablecalls.js</files>
      <baseline>functiontablecalls.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>MathBuiltinsCall.js</files>
      <baseline>MathBuiltinsCall.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ModuleVarRead.js</files>
      <baseline>ModuleVarRead.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ModuleVarWrite.js</files>
      <baseline>ModuleVarWrite.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ReadArrayView.js</files>
      <baseline>ReadArrayView.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ReadFixOffset.js</files>
      <baseline>ReadFixOffset.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>WriteArrayView.js</files>
      <baseline>WriteArrayView.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>WriteFixOffset.js</files>
      <baseline>WriteFixOffset.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>functiontablebug.js</files>
      <baseline>functiontablebug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>nanbug.js</files>
      <baseline>nanbug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>nanbug.js</files>
      <baseline>nanbug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>switchbug.js</files>
      <baseline>switchbug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>fgpeepsbug.js</files>
      <baseline>fgpeepsbug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>cseBug.js</files>
      <baseline>cseBug.baseline</baseline>
      <compile-flags>-testtrace:asmjs -off:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>evalbug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>symBug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>brbool.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>constTest.js</files>
      <baseline>constTest.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>constTest.js</files>
      <baseline>constTest.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>constTest.js</files>
      <baseline>constTest.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ffibug.js</files>
      <baseline>ffibug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ternaryfloat.js</files>
      <baseline>ternaryfloat.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>minintbug.js</files>
      <baseline>minintbug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>floatmod.js</files>
      <baseline>floatmod.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>floatmod.js</files>
      <baseline>floatmod.baseline</baseline>
      <compile-flags>-forceserialized -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>invalidIntLiteral.js</files>
      <baseline>invalidIntLiteral.baseline</baseline>
      <compile-flags>-testtrace:asmjs -force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>fstpbug.js</files>
      <baseline>fstpbug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>break2.js</files>
      <baseline>break2.baseline</baseline>
      <compile-flags>-testtrace:asmjs -bgjit- -lic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>break3.js</files>
      <baseline>break3.baseline</baseline>
      <compile-flags>-testtrace:asmjs -bgjit- -lic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>return1.js</files>
      <baseline>return1.baseline</baseline>
      <compile-flags>-off:deferparse -testtrace:asmjs -bgjit- -lic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>return2.js</files>
      <baseline>return2.baseline</baseline>
      <compile-flags>-off:deferparse -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>return3.js</files>
      <baseline>return3.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>returndouble.js</files>
      <baseline>returndouble.baseline</baseline>
      <compile-flags>-testtrace:asmjs -bgjit- -lic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>break1.js</files>
      <baseline>break1.baseline</baseline>
      <compile-flags>-testtrace:asmjs -bgjit- -lic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>JitToLoopBody.js</files>
      <baseline>JitToLoopBody.baseline</baseline>
      <compile-flags>-testtrace:asmjs -bgjit- -lic:1 -maic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>LoopBodyToJit.js</files>
      <baseline>LoopBodyToJit.baseline</baseline>
      <compile-flags>-testtrace:asmjs -bgjit- -lic:1 -maic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>breakfloat1.js</files>
      <baseline>breakfloat1.baseline</baseline>
      <compile-flags>-testtrace:asmjs -bgjit- -lic:1 </compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>returnFloat.js</files>
      <baseline>returnFloat.baseline</baseline>
      <compile-flags>-testtrace:asmjs -bgjit- -lic:1 </compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>unitybug.js</files>
      <baseline>unitybug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>unitybug.js</files>
      <baseline>unitybug.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>unitybug.js</files>
      <baseline>unitybug.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>argoutcapturebug.js</files>
      <baseline>argoutcapturebug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ReadAV1.js</files>
      <baseline>ReadAV1.baseline</baseline>
      <compile-flags>-testtrace:asmjs -off:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>clz32.js</files>
      <baseline>clz32.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>clz32.js</files>
      <baseline>clz32.baseline</baseline>
      <compile-flags>-testtrace:asmjs -nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>clz32.js</files>
      <baseline>clz32.baseline</baseline>
      <tags>exclude_x64</tags>
      <!-- After removing -simdjs this test fail with -on:asmjsjittemplate. Investigate and enable
      <compile-flags>-testtrace:asmjs -oopjit- -on:asmjsjittemplate -off:fulljit</compile-flags>
      -->
      <compile-flags>-testtrace:asmjs -oopjit- -off:fulljit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>negZero.js</files>
      <baseline>negZero.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>shadowingBug.js</files>
      <baseline>shadowingBug.baseline</baseline>
      <compile-flags>-forcedeferparse -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>blockLabelBug.js</files>
      <baseline>blockLabelBug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>switchJumpTable.js</files>
      <baseline>switchJumpTable.baseline</baseline>
      <compile-flags>-testtrace:asmjs -maic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>switchBinaryTraverse.js</files>
      <baseline>switchBinaryTraverse.baseline</baseline>
      <compile-flags>-testtrace:asmjs -maic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>lowererdivbug.js</files>
      <baseline>lowererdivbug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>qmarkbug.js</files>
      <baseline>qmarkbug.baseline</baseline>
      <compile-flags>-forcedeferparse -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>uint.js</files>
      <baseline>uint.baseline</baseline>
      <compile-flags>-maic:1 -off:deferparse -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>unsigned.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>asmjscctx.js</files>
      <baseline>asmjscctx.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>constloads.js</files>
      <baseline>constloads.baseline</baseline>
      <compile-flags>-testtrace:asmjs -maic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>vardeclnorhs.js</files>
      <baseline>vardeclnorhs.baseline</baseline>
      <compile-flags>-testtrace:asmjs -maic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug12239366.js</files>
      <compile-flags>-lic:1 -bgjit-</compile-flags>
      <tags>exclude_drt</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug16253406.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>badFunctionType.js</files>
      <baseline>badFunctionType.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
      <tags>exclude_sanitize_address</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bugGH2270.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>lotsOfLocals.js</files>
      <tags>exclude_debug,exclude_razzle</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug9883547.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>constFoldTests.js</files>
      <compile-flags>-asmjs -maic:0</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>lotsOfLocals.js</files>
      <tags>exclude_debug</tags>
    </default>
  </test>
  <test>
    <default>
      <files>params.js</files>
      <baseline>params.baseline</baseline>
      <compile-flags>-testtrace:asmjs -args 14000 -endargs -EnableFatalErrorOnOOM-</compile-flags>
      <!-- todo:: On unix platforms there is more stack available,
           so we need to find the right limit to test in order to not timeout -->
      <tags>exclude_dynapogo,exclude_mac</tags>
    </default>
  </test>
  <test>
    <default>
      <files>nested.js</files>
      <baseline>nested.baseline</baseline>
      <compile-flags>-forcedeferparse -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>constbrbug.js</files>
      <baseline>constbrbug.baseline</baseline>
      <compile-flags>-testtrace:asmjs -maic:0</compile-flags>
      <tags>exclude_drt</tags>
    </default>
  </test>
  <test>
    <default>
      <files>lambda.js</files>
      <baseline>lambda.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
      <tags>exclude_drt</tags>
    </default>
  </test>
  <test>
    <default>
      <files>badFunctionType.js</files>
      <baseline>badFunctionType.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
      <tags>exclude_drt,exclude_sanitize_address</tags>
    </default>
  </test>
  <test>
    <default>
      <files>badFunctionType.js</files>
      <baseline>badFunctionType.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
      <tags>exclude_drt,exclude_sanitize_address</tags>
    </default>
  </test>
  <test>
    <default>
      <files>exports.js</files>
      <baseline>exports.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
      <tags>exclude_drt</tags>
    </default>
  </test>
  <test>
    <default>
      <files>trackdeferredonreparse.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>regress_hascalls.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>argassignbug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>manyargs.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>maybecallbug.js</files>
      <baseline>maybecallbug.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>divByConstants.js</files>
      <baseline>divByConstants.baseline</baseline>
      <compile-flags>-testtrace:asmjs -maic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>divByConstants_Unsigned.js</files>
      <baseline>divByConstants.baseline</baseline>
      <compile-flags>-testtrace:asmjs -maic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug16252562.js</files>
      <baseline>bug16252562.baseline</baseline>
      <compile-flags>-testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>emit_recursive.js</files>
    </default>
  </test>
</regress-exe>
