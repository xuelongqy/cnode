<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>DateCtr.js</files>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <tags>exclude_jenkins</tags>
    </default>
  </test>
  <test>
    <default>
      <files>DateGetSet.js</files>
      <baseline>DateGetSet.baseline</baseline>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <!-- XPLAT doesn't provide expected DST info for year 35816 -->
      <tags>exclude_jenkins,exclude_xplat</tags>
    </default>
  </test>
  <test>
    <default>
      <files>DateParse.js</files>
      <baseline>DateParse_es5.baseline</baseline>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <tags>exclude_jenkins</tags>
    </default>
  </test>
  <test>
    <default>
      <files>DateParse2.js</files>
      <baseline>DateParse2.v5.baseline</baseline>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <!-- xplat DST info for BC years don't mach to ones for Windows. Internally trying to match them is very expensive -->
      <tags>exclude_jenkins,exclude_xplat</tags>
    </default>
  </test>
  <test>
    <default>
      <files>DateParse3.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>toISO_3.js</files>
      <baseline>toISO_3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>dateutc.js</files>
      <baseline>dateutc.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>DateUTC-DateGMT-same.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>MillisecondTruncationCheckAfterCopyConstructor.js</files>
      <baseline>MillisecondTruncationCheckAfterCopyConstructor.es6.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>Conversions.js</files>
      <baseline>Conversions.win8.baseline</baseline>
      <compile-flags>-Intl-</compile-flags>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <tags>exclude_win7,exclude_winBlue,exclude_snap,exclude_jenkins,exclude_xplat</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Conversions.js</files>
      <baseline>Conversions.baseline</baseline>
      <compile-flags>-Intl-</compile-flags>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <tags>exclude_win7,exclude_win8,exclude_snap,exclude_jenkins,exclude_xplat</tags>
    </default>
  </test>
  <test>
    <default>
      <files>date_cache_bug.js</files>
      <baseline>date_cache_bug.baseline</baseline>
      <timeout>120</timeout> <!-- ARM64 take more than 60 -->
    </default>
  </test>
  <test>
    <default>
      <files>formatting_xplat.js</files>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <tags>exclude_jenkins,exclude_windows</tags>
    </default>
  </test>
  <test>
    <default>
      <files>formatting.js</files>
      <baseline>formatting.baseline</baseline>
      <compile-flags>-ForceOldDateAPI</compile-flags>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <!-- on DST pass Win OldDateAPI jumps back to 01:00 after 01:59 -->
      <!-- todo: Do not force OLDDateAPI ? -->
      <tags>exclude_jenkins,exclude_xplat</tags>
    </default>
    <condition order="1" type="include">
      <os>win8</os>
      <override>
        <baseline>formatting.win8.baseline</baseline>
      </override>
    </condition>
  </test>
  <test>
    <default>
      <files>marshalbug.js</files>
      <!-- only to catch debug build assertions -->
      <compile-flags>-nonative -intl-</compile-flags>
      <baseline/>
      <tags>exclude_test,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>xplatInterval.js</files>
      <tags>Slow,exclude_windows</tags>
    </default>
  </test>
  <test>
    <default>
      <files>MilitaryTimeZone.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>TwoDigitYears.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>toStringAndToUTCStringYearPadding.js</files>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <!-- xplat tz info for BC != Windows tz info for BC -->
      <tags>exclude_jenkins,exclude_xplat</tags>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>parseToStringResults.js</files>
      <!-- xplat tz info for BC != Windows tz info for BC -->
      <tags>exclude_xplat</tags>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>parseToUTCStringAndToISOStringResults.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>parseValidISO.js</files>
      <baseline>parseValidISO.baseline</baseline>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <!-- xplat tz info for BC != Windows tz info for BC -->
      <tags>exclude_jenkins,exclude_xplat</tags>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>parseInvalidISO.js</files>
      <baseline>parseInvalidISO.baseline</baseline>
      <!-- test is timezone-sensitive; remove exclude_jenkins after fix (Microsoft/ChakraCore#319) -->
      <!-- OSX doesn't provide expected DST for minus years -->
      <tags>exclude_jenkins,exclude_xplat</tags>
    </default>
  </test>
</regress-exe>
