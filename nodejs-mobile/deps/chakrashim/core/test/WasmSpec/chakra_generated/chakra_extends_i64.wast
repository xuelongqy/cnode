;;-------------------------------------------------------------------------------------------------------
;; Copyright (C) Microsoft. All rights reserved.
;; Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
;;-------------------------------------------------------------------------------------------------------
;;AUTO-GENERATED do not modify

(module
  (func (export "extend8_s0") (result i64) (i64.extend8_s (i64.const 0)))
  (func (export "extend8_s1") (result i64) (i64.extend8_s (i64.const 0x7f)))
  (func (export "extend8_s2") (result i64) (i64.extend8_s (i64.const 0x80)))
  (func (export "extend8_s3") (result i64) (i64.extend8_s (i64.const 0xff)))
  (func (export "extend8_s4") (result i64) (i64.extend8_s (i64.const 0x01234567_89abcd_00)))
  (func (export "extend8_s5") (result i64) (i64.extend8_s (i64.const 0xfedcba98_765432_80)))
  (func (export "extend8_s6") (result i64) (i64.extend8_s (i64.const -1)))
  (func (export "extend16_s7") (result i64) (i64.extend16_s (i64.const 0)))
  (func (export "extend16_s8") (result i64) (i64.extend16_s (i64.const 0x7fff)))
  (func (export "extend16_s9") (result i64) (i64.extend16_s (i64.const 0x8000)))
  (func (export "extend16_s10") (result i64) (i64.extend16_s (i64.const 0xffff)))
  (func (export "extend16_s11") (result i64) (i64.extend16_s (i64.const 0x12345678_9abc_0000)))
  (func (export "extend16_s12") (result i64) (i64.extend16_s (i64.const 0xfedcba98_7654_8000)))
  (func (export "extend16_s13") (result i64) (i64.extend16_s (i64.const -1)))
  (func (export "extend32_s14") (result i64) (i64.extend32_s (i64.const 0)))
  (func (export "extend32_s15") (result i64) (i64.extend32_s (i64.const 0x7fff)))
  (func (export "extend32_s16") (result i64) (i64.extend32_s (i64.const 0x8000)))
  (func (export "extend32_s17") (result i64) (i64.extend32_s (i64.const 0xffff)))
  (func (export "extend32_s18") (result i64) (i64.extend32_s (i64.const 0x7fffffff)))
  (func (export "extend32_s19") (result i64) (i64.extend32_s (i64.const 0x80000000)))
  (func (export "extend32_s20") (result i64) (i64.extend32_s (i64.const 0xffffffff)))
  (func (export "extend32_s21") (result i64) (i64.extend32_s (i64.const 0x01234567_00000000)))
  (func (export "extend32_s22") (result i64) (i64.extend32_s (i64.const 0xfedcba98_80000000)))
  (func (export "extend32_s23") (result i64) (i64.extend32_s (i64.const -1)))
)

(assert_return (invoke "extend8_s0") (i64.const 0))
(assert_return (invoke "extend8_s1") (i64.const 127))
(assert_return (invoke "extend8_s2") (i64.const -128))
(assert_return (invoke "extend8_s3") (i64.const -1))
(assert_return (invoke "extend8_s4") (i64.const 0))
(assert_return (invoke "extend8_s5") (i64.const -0x80))
(assert_return (invoke "extend8_s6") (i64.const -1))
(assert_return (invoke "extend16_s7") (i64.const 0))
(assert_return (invoke "extend16_s8") (i64.const 32767))
(assert_return (invoke "extend16_s9") (i64.const -32768))
(assert_return (invoke "extend16_s10") (i64.const -1))
(assert_return (invoke "extend16_s11") (i64.const 0))
(assert_return (invoke "extend16_s12") (i64.const -0x8000))
(assert_return (invoke "extend16_s13") (i64.const -1))
(assert_return (invoke "extend32_s14") (i64.const 0))
(assert_return (invoke "extend32_s15") (i64.const 32767))
(assert_return (invoke "extend32_s16") (i64.const 32768))
(assert_return (invoke "extend32_s17") (i64.const 65535))
(assert_return (invoke "extend32_s18") (i64.const 0x7fffffff))
(assert_return (invoke "extend32_s19") (i64.const -0x80000000))
(assert_return (invoke "extend32_s20") (i64.const -1))
(assert_return (invoke "extend32_s21") (i64.const 0))
(assert_return (invoke "extend32_s22") (i64.const -0x80000000))
(assert_return (invoke "extend32_s23") (i64.const -1))