var performance = performance || {};
performance.now = function() {
    return performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow || Date.now
}();

function Benchmark(a, c, b, d, e, f, g, h, l) {
    this.name = a;
    this.doWarmup = c;
    this.doDeterministic = b;
    this.deterministicIterations = d;
    this.run = e;
    this.Setup = f ? f : function() {};
    this.TearDown = g ? g : function() {};
    this.rmsResult = h ? h : null;
    this.minIterations = l ? l : 32
}

function BenchmarkResult(a, c, b) {
    this.benchmark = a;
    this.time = c;
    this.latency = b
}
BenchmarkResult.prototype.valueOf = function() {
    return this.time
};

function BenchmarkSuite(a, c, b) {
    this.name = a;
    this.reference = c;
    this.benchmarks = b;
    BenchmarkSuite.suites.push(this)
}
BenchmarkSuite.suites = [];
BenchmarkSuite.version = "9";
BenchmarkSuite.config = {
    doWarmup: void 0,
    doDeterministic: void 0
};
alert = function(a) {
    throw "Alert called with argument: " + a;
};
BenchmarkSuite.ResetRNG = function() {
    Math.random = function() {
        var a = 49734321;
        return function() {
            a = a + 2127912214 + (a << 12) & 4294967295;
            a = (a ^ 3345072700 ^ a >>> 19) & 4294967295;
            a = a + 374761393 + (a << 5) & 4294967295;
            a = (a + 3550635116 ^ a << 9) & 4294967295;
            a = a + 4251993797 + (a << 3) & 4294967295;
            a = (a ^ 3042594569 ^ a >>> 16) & 4294967295;
            return (a & 268435455) / 268435456
        }
    }()
};
BenchmarkSuite.RunSuites = function(a, c) {
    function b() {
        for (; d || g < f;) {
            if (d) d = d();
            else {
                var h = e[g++];
                a.NotifyStart && a.NotifyStart(h.name); - 1 < c.indexOf(h.name) ? h.NotifySkipped(a) : d = h.RunStep(a)
            }
            if (d && "undefined" != typeof window && window.setTimeout) {
                window.setTimeout(b, 25);
                return
            }
        }
        a.NotifyScore && (h = BenchmarkSuite.GeometricMean(BenchmarkSuite.scores), h = BenchmarkSuite.FormatScore(100 * h), a.NotifyScore(h))
    }
    c = "undefined" === typeof c ? [] : c;
    var d = null,
        e = BenchmarkSuite.suites,
        f = e.length;
    BenchmarkSuite.scores = [];
    var g =
        0;
    b()
};
BenchmarkSuite.CountBenchmarks = function() {
    for (var a = 0, c = BenchmarkSuite.suites, b = 0; b < c.length; b++) a += c[b].benchmarks.length;
    return a
};
BenchmarkSuite.GeometricMean = function(a) {
    for (var c = 0, b = 0; b < a.length; b++) c += Math.log(a[b]);
    return Math.pow(Math.E, c / a.length)
};
BenchmarkSuite.GeometricMeanTime = function(a) {
    for (var c = 0, b = 0; b < a.length; b++) c += Math.log(a[b].time);
    return Math.pow(Math.E, c / a.length)
};
BenchmarkSuite.GeometricMeanLatency = function(a) {
    for (var c = 0, b = !1, d = 0; d < a.length; d++) 0 != a[d].latency && (c += Math.log(a[d].latency), b = !0);
    return b ? Math.pow(Math.E, c / a.length) : 0
};
BenchmarkSuite.FormatScore = function(a) {
    return 100 < a ? a.toFixed(0) : a.toPrecision(3)
};
BenchmarkSuite.prototype.NotifyStep = function(a) {
    this.results.push(a);
    this.runner.NotifyStep && this.runner.NotifyStep(a.benchmark.name)
};
BenchmarkSuite.prototype.NotifyResult = function() {
    var a = BenchmarkSuite.GeometricMeanTime(this.results),
        a = this.reference[0] / a;
    BenchmarkSuite.scores.push(a);
    this.runner.NotifyResult && (a = BenchmarkSuite.FormatScore(100 * a), this.runner.NotifyResult(this.name, a));
    2 == this.reference.length && (a = BenchmarkSuite.GeometricMeanLatency(this.results), 0 != a && (a = this.reference[1] / a, BenchmarkSuite.scores.push(a), this.runner.NotifyResult && (a = BenchmarkSuite.FormatScore(100 * a), this.runner.NotifyResult(this.name + "Latency",
        a))))
};
BenchmarkSuite.prototype.NotifySkipped = function(a) {
    BenchmarkSuite.scores.push(1);
    a.NotifyResult && a.NotifyResult(this.name, "Skipped")
};
BenchmarkSuite.prototype.NotifyError = function(a) {
    this.runner.NotifyError && this.runner.NotifyError(this.name, a);
    this.runner.NotifyStep && this.runner.NotifyStep(this.name)
};
BenchmarkSuite.prototype.RunSingleBenchmark = function(a, c) {
    function b(b) {
        for (var c = 0, d = new Date, f = 0; e ? f < a.deterministicIterations : 1E3 > c; f++) a.run(), c = new Date - d;
        null != b && (b.runs += f, b.elapsed += c)
    }
    var d = BenchmarkSuite.config,
        e = void 0 !== d.doDeterministic ? d.doDeterministic : a.doDeterministic;
    (void 0 !== d.doWarmup ? d.doWarmup : a.doWarmup) || null != c || (c = {
        runs: 0,
        elapsed: 0
    });
    if (null == c) return b(null), {
        runs: 0,
        elapsed: 0
    };
    b(c);
    if (c.runs < a.minIterations) return c;
    var d = 1E3 * c.elapsed / c.runs,
        f = null != a.rmsResult ? a.rmsResult() :
        0;
    this.NotifyStep(new BenchmarkResult(a, d, f));
    return null
};
BenchmarkSuite.prototype.RunStep = function(a) {
    function c() {
        if (f < e) {
            try {
                g.benchmarks[f].Setup()
            } catch (a) {
                return g.NotifyError(a), null
            }
            return b
        }
        g.NotifyResult();
        return null
    }

    function b() {
        try {
            h = g.RunSingleBenchmark(g.benchmarks[f], h)
        } catch (a) {
            return g.NotifyError(a), null
        }
        return null == h ? d : b()
    }

    function d() {
        try {
            g.benchmarks[f++].TearDown()
        } catch (a) {
            return g.NotifyError(a), null
        }
        return c
    }
    BenchmarkSuite.ResetRNG();
    this.results = [];
    this.runner = a;
    var e = this.benchmarks.length,
        f = 0,
        g = this,
        h;
    return c()
};
var GameboyBenchmark = new BenchmarkSuite("Gameboy", [26288412], [new Benchmark("Gameboy", !1, !1, 20, runGameboy, setupGameboy, tearDownGameboy, null, 4)]),
    decoded_gameboy_rom = null;

function setupGameboy() {
    if ("undefined" == typeof Uint8Array || "undefined" == typeof Int8Array || "undefined" == typeof Float32Array || "undefined" == typeof Int32Array) throw "TypedArrayUnsupported";
    decoded_gameboy_rom = base64_decode(gameboy_rom);
    rom = null
}

function runGameboy() {
    start(new GameBoyCanvas, decoded_gameboy_rom);
    gameboy.instructions = 0;
    for (gameboy.totalInstructions = 25E4; gameboy.instructions <= gameboy.totalInstructions;) gameboy.run(), GameBoyAudioNode.run();
    resetGlobalVariables()
}

function tearDownGameboy() {
    expectedGameboyStateStr = decoded_gameboy_rom = null
}
var expectedGameboyStateStr = '{"registerA":160,"registerB":255,"registerC":255,"registerE":11,"registersHL":51600,"programCounter":24309,"stackPointer":49706,"sumROM":10171578,"sumMemory":3435856,"sumMBCRam":234598,"sumVRam":0}',
    GameBoyWindow = {};

function GameBoyContext() {
    this.createBuffer = function() {
        return new Buffer
    };
    this.createImageData = function(a, c) {
        var b = {};
        b.data = new Uint8Array(a * c * 4);
        return b
    };
    this.putImageData = function(a, c, b) {
        for (c = 0; c < a.data.length; c++);
    };
    this.drawImage = function() {}
}

function GameBoyCanvas() {
    this.getContext = function() {
        return new GameBoyContext
    };
    this.width = 160;
    this.height = 144;
    this.style = {
        visibility: "visibile"
    }
}

function cout(a, c) {}

function clear_terminal() {}
var GameBoyAudioNode = {
    bufferSize: 0,
    onaudioprocess: null,
    connect: function() {},
    run: function() {
        this.onaudioprocess({
            outputBuffer: this.outputBuffer
        })
    }
};

function GameBoyAudioContext() {
    this.createBufferSource = function() {
        return {
            noteOn: function() {},
            connect: function() {}
        }
    };
    this.sampleRate = 48E3;
    this.destination = {};
    this.createBuffer = function(a, c, b) {
        return {
            gain: 1,
            numberOfChannels: 1,
            length: 1,
            duration: 2.0833333110203966E-5,
            sampleRate: 48E3
        }
    };
    this.createJavaScriptNode = function(a, c, b) {
        GameBoyAudioNode.bufferSize = a;
        GameBoyAudioNode.outputBuffer = {
            getChannelData: function(a) {
                return this.channelData[a]
            },
            channelData: []
        };
        for (c = 0; c < b; c++) GameBoyAudioNode.outputBuffer.channelData[c] =
            new Float32Array(a);
        return GameBoyAudioNode
    }
}
var mock_date_time_counter = 0;

function new_Date() {
    return {
        getTime: function() {
            return mock_date_time_counter += 16
        }
    }
}

function checkFinalState() {
    function a(a) {
        for (var c = 0, e = 0; e < a.length; e++) c += a[e];
        return c
    }
    var c = {
            registerA: gameboy.registerA,
            registerB: gameboy.registerB,
            registerC: gameboy.registerC,
            registerE: gameboy.registerE,
            registerF: gameboy.registerF,
            registersHL: gameboy.registersHL,
            programCounter: gameboy.programCounter,
            stackPointer: gameboy.stackPointer,
            sumROM: a(gameboy.fromTypedArray(gameboy.ROM)),
            sumMemory: a(gameboy.fromTypedArray(gameboy.memory)),
            sumMBCRam: a(gameboy.fromTypedArray(gameboy.MBCRam)),
            sumVRam: a(gameboy.fromTypedArray(gameboy.VRam))
        },
        c = JSON.stringify(c);
    "undefined" != typeof expectedGameboyStateStr ? c != expectedGameboyStateStr && alert("Incorrect final state of processor:\n actual   " + c + "\n expected " + expectedGameboyStateStr) : alert(c)
}

function resetGlobalVariables() {
    audioSource = audioNode = audioContextHandle = null;
    launchedContext = !1;
    audioContextSampleBuffer = [];
    resampled = [];
    webAudioMinBufferSize = 15E3;
    webAudioMaxBufferSize = 25E3;
    webAudioActualSampleRate = 44100;
    XAudioJSSampleRate = 0;
    webAudioMono = !1;
    XAudioJSVolume = 1;
    resampleControl = null;
    resampleBufferEnd = resampleBufferStart = audioBufferSize = 0;
    resampleBufferSize = 2;
    gbRunInterval = gameboy = null
}
var toBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".split(""),
    fromBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

function base64(a) {
    try {
        var c = GameBoyWindow.btoa(a)
    } catch (g) {
        var c = "",
            b = a.length;
        if (0 < b) {
            for (var d = [0, 0, 0], e = 0, f = b % 3; 0 < a.length % 3;) a[a.length] = " ";
            for (; e < b;) d = [a.charCodeAt(e++) & 255, a.charCodeAt(e++) & 255, a.charCodeAt(e++) & 255], c += toBase64[d[0] >> 2] + toBase64[(d[0] & 3) << 4 | d[1] >> 4] + toBase64[(d[1] & 15) << 2 | d[2] >> 6] + toBase64[d[2] & 63];
            0 < f && (c[c.length - 1] = "=", 2 == f ? (c[c.length - 2] = "=", c[c.length - 3] = toBase64[(d[0] & 3) << 4]) : c[c.length - 2] = toBase64[(d[1] & 15) << 2])
        }
    }
    return c
}

function base64_decode(a) {
    try {
        var c = GameBoyWindow.atob(a)
    } catch (f) {
        var c = "",
            b = a.length;
        if (3 < b && 0 == b % 4) {
            for (var d = [0, 0, 0, 0], e = 0; e < b;) d = [fromBase64.indexOf(a.charAt(e++)), fromBase64.indexOf(a.charAt(e++)), fromBase64.indexOf(a.charAt(e++)), fromBase64.indexOf(a.charAt(e++))], c += String.fromCharCode(d[0] << 2 | d[1] >> 4) + String.fromCharCode((d[1] & 15) << 4 | d[2] >> 2) + String.fromCharCode((d[2] & 3) << 6 | d[3]);
            64 <= d[3] && (--c.length, 64 <= d[2] && --c.length)
        }
    }
    return c
}

function to_little_endian_dword(a) {
    return to_little_endian_word(a) + String.fromCharCode(a >> 16 & 255, a >> 24 & 255)
}

function to_little_endian_word(a) {
    return to_byte(a) + String.fromCharCode(a >> 8 & 255)
}

function to_byte(a) {
    return String.fromCharCode(a & 255)
}

function arrayToBase64(a) {
    for (var c = "", b = a.length, d = 0; d < b; ++d) "number" == typeof a[d] && (c += String.fromCharCode(a[d]));
    return base64(c)
}

function base64ToArray(a) {
    a = base64_decode(a);
    for (var c = [], b = a.length, d = 0; d < b;) c.push(a.charCodeAt(d++) & 255);
    return c
}

function Resampler(a, c, b, d, e) {
    this.fromSampleRate = a;
    this.toSampleRate = c;
    this.channels = b | 0;
    this.outputBufferSize = d;
    this.noReturn = !!e;
    this.initialize()
}
Resampler.prototype.initialize = function() {
    if (0 < this.fromSampleRate && 0 < this.toSampleRate && 0 < this.channels) this.fromSampleRate == this.toSampleRate ? (this.resampler = this.bypassResampler, this.ratioWeight = 1) : (this.compileInterpolationFunction(), this.resampler = this.interpolate, this.ratioWeight = this.fromSampleRate / this.toSampleRate, this.tailExists = !1, this.lastWeight = 0, this.initializeBuffers());
    else throw Error("Invalid settings specified for the resampler.");
};
Resampler.prototype.compileInterpolationFunction = function() {
    for (var a = "var bufferLength = Math.min(buffer.length, this.outputBufferSize);  if ((bufferLength % " + this.channels + ") == 0) {    if (bufferLength > 0) {      var ratioWeight = this.ratioWeight;      var weight = 0;", c = 0; c < this.channels; ++c) a += "var output" + c + " = 0;";
    a += "var actualPosition = 0;      var amountToNext = 0;      var alreadyProcessedTail = !this.tailExists;      this.tailExists = false;      var outputBuffer = this.outputBuffer;      var outputOffset = 0;      var currentPosition = 0;      do {        if (alreadyProcessedTail) {          weight = ratioWeight;";
    for (c = 0; c < this.channels; ++c) a += "output" + c + " = 0;";
    a += "}        else {          weight = this.lastWeight;";
    for (c = 0; c < this.channels; ++c) a += "output" + c + " = this.lastOutput[" + c + "];";
    a += "alreadyProcessedTail = true;        }        while (weight > 0 && actualPosition < bufferLength) {          amountToNext = 1 + actualPosition - currentPosition;          if (weight >= amountToNext) {";
    for (c = 0; c < this.channels; ++c) a += "output" + c + " += buffer[actualPosition++] * amountToNext;";
    a += "currentPosition = actualPosition;            weight -= amountToNext;          }          else {";
    for (c = 0; c < this.channels; ++c) a += "output" + c + " += buffer[actualPosition" + (0 < c ? " + " + c : "") + "] * weight;";
    a += "currentPosition += weight;            weight = 0;            break;          }        }        if (weight == 0) {";
    for (c = 0; c < this.channels; ++c) a += "outputBuffer[outputOffset++] = output" + c + " / ratioWeight;";
    a += "}        else {          this.lastWeight = weight;";
    for (c = 0; c < this.channels; ++c) a += "this.lastOutput[" + c + "] = output" + c + ";";
    this.interpolate = Function("buffer", a + 'this.tailExists = true;          break;        }      } while (actualPosition < bufferLength);      return this.bufferSlice(outputOffset);    }    else {      return (this.noReturn) ? 0 : [];    }  }  else {    throw(new Error("Buffer was of incorrect sample length."));  }')
};
Resampler.prototype.bypassResampler = function(a) {
    return this.noReturn ? (this.outputBuffer = a, a.length) : a
};
Resampler.prototype.bufferSlice = function(a) {
    if (this.noReturn) return a;
    try {
        return this.outputBuffer.subarray(0, a)
    } catch (c) {
        try {
            return this.outputBuffer.length = a, this.outputBuffer
        } catch (b) {
            return this.outputBuffer.slice(0, a)
        }
    }
};
Resampler.prototype.initializeBuffers = function() {
    try {
        this.outputBuffer = new Float32Array(this.outputBufferSize), this.lastOutput = new Float32Array(this.channels)
    } catch (a) {
        this.outputBuffer = [], this.lastOutput = []
    }
};

function XAudioServer(a, c, b, d, e, f) {
    this.audioChannels = 2 == a ? 2 : 1;
    webAudioMono = 1 == this.audioChannels;
    XAudioJSSampleRate = 0 < c && 16777215 >= c ? c : 44100;
    webAudioMinBufferSize = b >= samplesPerCallback << 1 && b < d ? b & (webAudioMono ? 4294967295 : 4294967294) : samplesPerCallback << 1;
    webAudioMaxBufferSize = Math.floor(d) > webAudioMinBufferSize + this.audioChannels ? d & (webAudioMono ? 4294967295 : 4294967294) : b << 1;
    this.underRunCallback = "function" == typeof e ? e : function() {};
    XAudioJSVolume = 0 <= f && 1 >= f ? f : 1;
    this.audioType = -1;
    this.mozAudioTail = [];
    this.audioHandleFlash = this.audioHandleMoz = null;
    this.mozAudioFound = this.flashInitialized = !1;
    this.initializeAudio()
}
XAudioServer.prototype.MOZWriteAudio = function(a) {
    this.MOZWriteAudioNoCallback(a);
    this.MOZExecuteCallback()
};
XAudioServer.prototype.MOZWriteAudioNoCallback = function(a) {
    this.writeMozAudio(a)
};
XAudioServer.prototype.callbackBasedWriteAudio = function(a) {
    this.callbackBasedWriteAudioNoCallback(a);
    this.callbackBasedExecuteCallback()
};
XAudioServer.prototype.callbackBasedWriteAudioNoCallback = function(a) {
    for (var c = a.length, b = 0; b < c && audioBufferSize < webAudioMaxBufferSize;) audioContextSampleBuffer[audioBufferSize++] = a[b++]
};
XAudioServer.prototype.writeAudio = function(a) {
    0 == this.audioType ? this.MOZWriteAudio(a) : 1 == this.audioType ? this.callbackBasedWriteAudio(a) : 2 == this.audioType && (this.checkFlashInit() || launchedContext ? this.callbackBasedWriteAudio(a) : this.mozAudioFound && this.MOZWriteAudio(a))
};
XAudioServer.prototype.writeAudioNoCallback = function(a) {
    0 == this.audioType ? this.MOZWriteAudioNoCallback(a) : 1 == this.audioType ? this.callbackBasedWriteAudioNoCallback(a) : 2 == this.audioType && (this.checkFlashInit() || launchedContext ? this.callbackBasedWriteAudioNoCallback(a) : this.mozAudioFound && this.MOZWriteAudioNoCallback(a))
};
XAudioServer.prototype.remainingBuffer = function() {
    if (0 == this.audioType) return this.samplesAlreadyWritten - this.audioHandleMoz.mozCurrentSampleOffset();
    if (1 == this.audioType) return (resampledSamplesLeft() * resampleControl.ratioWeight >> this.audioChannels - 1 << this.audioChannels - 1) + audioBufferSize;
    if (2 == this.audioType) {
        if (this.checkFlashInit() || launchedContext) return (resampledSamplesLeft() * resampleControl.ratioWeight >> this.audioChannels - 1 << this.audioChannels - 1) + audioBufferSize;
        if (this.mozAudioFound) return this.samplesAlreadyWritten -
            this.audioHandleMoz.mozCurrentSampleOffset()
    }
    return 0
};
XAudioServer.prototype.MOZExecuteCallback = function() {
    var a = webAudioMinBufferSize - this.remainingBuffer();
    0 < a && this.writeMozAudio(this.underRunCallback(a))
};
XAudioServer.prototype.callbackBasedExecuteCallback = function() {
    var a = webAudioMinBufferSize - this.remainingBuffer();
    0 < a && this.callbackBasedWriteAudioNoCallback(this.underRunCallback(a))
};
XAudioServer.prototype.executeCallback = function() {
    0 == this.audioType ? this.MOZExecuteCallback() : 1 == this.audioType ? this.callbackBasedExecuteCallback() : 2 == this.audioType && (this.checkFlashInit() || launchedContext ? this.callbackBasedExecuteCallback() : this.mozAudioFound && this.MOZExecuteCallback())
};
XAudioServer.prototype.initializeAudio = function() {
    try {
        throw Error("Select initializeWebAudio case");
    } catch (a) {
        try {
            this.initializeWebAudio()
        } catch (c) {
            try {
                this.initializeFlashAudio()
            } catch (b) {
                throw Error("Browser does not support real time audio output.");
            }
        }
    }
};
XAudioServer.prototype.preInitializeMozAudio = function() {
    this.audioHandleMoz = new Audio;
    this.audioHandleMoz.mozSetup(this.audioChannels, XAudioJSSampleRate);
    this.samplesAlreadyWritten = 0;
    var a = 2 == this.audioChannels ? [0, 0] : [0],
        c = 0;
    if ("MacIntel" != navigator.platform && "MacPPC" != navigator.platform) {
        for (; 0 == this.audioHandleMoz.mozCurrentSampleOffset();) c += this.audioHandleMoz.mozWriteAudio(a);
        for (var b = c / this.audioChannels, d = 0; d < b; d++) this.samplesAlreadyWritten += this.audioHandleMoz.mozWriteAudio(a)
    }
    this.samplesAlreadyWritten +=
        c;
    webAudioMinBufferSize += this.samplesAlreadyWritten;
    this.mozAudioFound = !0
};
XAudioServer.prototype.initializeMozAudio = function() {
    this.writeMozAudio(getFloat32(webAudioMinBufferSize));
    this.audioType = 0
};
XAudioServer.prototype.initializeWebAudio = function() {
    if (launchedContext) resetCallbackAPIAudioBuffer(webAudioActualSampleRate, samplesPerCallback), this.audioType = 1;
    else throw Error("");
};
XAudioServer.prototype.initializeFlashAudio = function() {
    var a = document.getElementById("XAudioJS");
    if (null == a) {
        var c = this,
            a = document.createElement("div");
        a.setAttribute("style", "position: fixed; bottom: 0px; right: 0px; margin: 0px; padding: 0px; border: none; width: 8px; height: 8px; overflow: hidden; z-index: -1000; ");
        var b = document.createElement("div");
        b.setAttribute("style", "position: static; border: none; width: 0px; height: 0px; visibility: hidden; margin: 8px; padding: 0px;");
        b.setAttribute("id",
            "XAudioJS");
        a.appendChild(b);
        document.getElementsByTagName("body")[0].appendChild(a);
        swfobject.embedSWF("XAudioJS.swf", "XAudioJS", "8", "8", "9.0.0", "", {}, {
            allowscriptaccess: "always"
        }, {
            style: "position: static; visibility: hidden; margin: 8px; padding: 0px; border: none"
        }, function(a) {
            a.success ? c.audioHandleFlash = a.ref : c.audioType = 1
        })
    } else this.audioHandleFlash = a;
    this.audioType = 2
};
XAudioServer.prototype.changeVolume = function(a) {
    0 <= a && 1 >= a && (XAudioJSVolume = a, this.checkFlashInit() && this.audioHandleFlash.changeVolume(XAudioJSVolume), this.mozAudioFound && (this.audioHandleMoz.volume = XAudioJSVolume))
};
XAudioServer.prototype.writeMozAudio = function(a) {
    var c = this.mozAudioTail.length;
    if (0 < c) {
        var b = this.audioHandleMoz.mozWriteAudio(this.mozAudioTail);
        this.samplesAlreadyWritten += b;
        this.mozAudioTail.splice(0, b)
    }
    c = Math.min(a.length, webAudioMaxBufferSize - this.samplesAlreadyWritten + this.audioHandleMoz.mozCurrentSampleOffset());
    b = this.audioHandleMoz.mozWriteAudio(a);
    this.samplesAlreadyWritten += b;
    for (var d = 0; c > b; --c) this.mozAudioTail.push(a[d++])
};
XAudioServer.prototype.checkFlashInit = function() {
    !this.flashInitialized && this.audioHandleFlash && this.audioHandleFlash.initialize && (this.flashInitialized = !0, this.audioHandleFlash.initialize(this.audioChannels, XAudioJSVolume), resetCallbackAPIAudioBuffer(44100, samplesPerCallback));
    return this.flashInitialized
};

function getFloat32(a) {
    try {
        return new Float32Array(a)
    } catch (c) {
        return Array(a)
    }
}

function getFloat32Flat(a) {
    try {
        var c = new Float32Array(a)
    } catch (d) {
        var c = Array(a),
            b = 0;
        do c[b] = 0; while (++b < a)
    }
    return c
}
var samplesPerCallback = 2048,
    outputConvert = null;

function audioOutputFlashEvent() {
    resampleRefill();
    return outputConvert()
}

function generateFlashStereoString() {
    for (var a = "", c = "", b = 0; b < samplesPerCallback && resampleBufferStart != resampleBufferEnd; ++b) a += String.fromCharCode((16383 * Math.min(Math.max(resampled[resampleBufferStart++] + 1, 0), 2) | 0) + 12288), c += String.fromCharCode((16383 * Math.min(Math.max(resampled[resampleBufferStart++] + 1, 0), 2) | 0) + 12288), resampleBufferStart == resampleBufferSize && (resampleBufferStart = 0);
    return a + c
}

function generateFlashMonoString() {
    for (var a = "", c = 0; c < samplesPerCallback && resampleBufferStart != resampleBufferEnd; ++c) a += String.fromCharCode((16383 * Math.min(Math.max(resampled[resampleBufferStart++] + 1, 0), 2) | 0) + 12288), resampleBufferStart == resampleBufferSize && (resampleBufferStart = 0);
    return a
}
var audioContextHandle = null,
    audioNode = null,
    audioSource = null,
    launchedContext = !1,
    audioContextSampleBuffer = [],
    resampled = [],
    webAudioMinBufferSize = 15E3,
    webAudioMaxBufferSize = 25E3,
    webAudioActualSampleRate = 44100,
    XAudioJSSampleRate = 0,
    webAudioMono = !1,
    XAudioJSVolume = 1,
    resampleControl = null,
    audioBufferSize = 0,
    resampleBufferStart = 0,
    resampleBufferEnd = 0,
    resampleBufferSize = 2;

function audioOutputEvent(a) {
    var c = 0,
        b = a.outputBuffer.getChannelData(0);
    a = a.outputBuffer.getChannelData(1);
    resampleRefill();
    if (webAudioMono)
        for (; c < samplesPerCallback && resampleBufferStart != resampleBufferEnd;) a[c] = b[c] = resampled[resampleBufferStart++] * XAudioJSVolume, ++c, resampleBufferStart == resampleBufferSize && (resampleBufferStart = 0);
    else
        for (; c < samplesPerCallback && resampleBufferStart != resampleBufferEnd;) b[c] = resampled[resampleBufferStart++] * XAudioJSVolume, a[c++] = resampled[resampleBufferStart++] * XAudioJSVolume,
            resampleBufferStart == resampleBufferSize && (resampleBufferStart = 0);
    for (; c < samplesPerCallback;) a[c] = b[c] = 0, ++c
}

function resampleRefill() {
    if (0 < audioBufferSize) {
        for (var a = resampleControl.resampler(getBufferSamples()), c = resampleControl.outputBuffer, b = 0; b < a; ++b) resampled[resampleBufferEnd++] = c[b], resampleBufferEnd == resampleBufferSize && (resampleBufferEnd = 0), resampleBufferStart == resampleBufferEnd && (++resampleBufferStart, resampleBufferStart == resampleBufferSize && (resampleBufferStart = 0));
        audioBufferSize = 0
    }
}

function resampledSamplesLeft() {
    return (resampleBufferStart <= resampleBufferEnd ? 0 : resampleBufferSize) + resampleBufferEnd - resampleBufferStart
}

function getBufferSamples() {
    try {
        return audioContextSampleBuffer.subarray(0, audioBufferSize)
    } catch (a) {
        try {
            return audioContextSampleBuffer.length = audioBufferSize, audioContextSampleBuffer
        } catch (c) {
            return audioContextSampleBuffer.slice(0, audioBufferSize)
        }
    }
}

function resetCallbackAPIAudioBuffer(a, c) {
    audioContextSampleBuffer = getFloat32(webAudioMaxBufferSize);
    audioBufferSize = webAudioMaxBufferSize;
    resampleBufferEnd = resampleBufferStart = 0;
    resampleBufferSize = Math.max(webAudioMaxBufferSize * Math.ceil(XAudioJSSampleRate / a), samplesPerCallback) << 1;
    webAudioMono ? (resampled = getFloat32Flat(resampleBufferSize), resampleControl = new Resampler(XAudioJSSampleRate, a, 1, resampleBufferSize, !0), outputConvert = generateFlashMonoString) : (resampleBufferSize <<= 1, resampled = getFloat32Flat(resampleBufferSize),
        resampleControl = new Resampler(XAudioJSSampleRate, a, 2, resampleBufferSize, !0), outputConvert = generateFlashStereoString)
}
(function() {
    if (!launchedContext) {
        try {
            audioContextHandle = new GameBoyAudioContext
        } catch (a) {
            try {
                audioContextHandle = new AudioContext
            } catch (c) {
                return
            }
        }
        try {
            audioSource = audioContextHandle.createBufferSource(), audioSource.loop = !1, XAudioJSSampleRate = webAudioActualSampleRate = audioContextHandle.sampleRate, audioSource.buffer = audioContextHandle.createBuffer(1, 1, webAudioActualSampleRate), audioNode = audioContextHandle.createJavaScriptNode(samplesPerCallback, 1, 2), audioNode.onaudioprocess = audioOutputEvent, audioSource.connect(audioNode),
                audioNode.connect(audioContextHandle.destination), audioSource.noteOn(0)
        } catch (a) {
            return
        }
        launchedContext = !0
    }
})();

function Resize(a, c, b, d, e, f) {
    this.widthOriginal = Math.abs(parseInt(a) || 0);
    this.heightOriginal = Math.abs(parseInt(c) || 0);
    this.targetWidth = Math.abs(parseInt(b) || 0);
    this.targetHeight = Math.abs(parseInt(d) || 0);
    this.colorChannels = e ? 4 : 3;
    this.interpolationPass = !!f;
    this.targetWidthMultipliedByChannels = this.targetWidth * this.colorChannels;
    this.originalWidthMultipliedByChannels = this.widthOriginal * this.colorChannels;
    this.originalHeightMultipliedByChannels = this.heightOriginal * this.colorChannels;
    this.widthPassResultSize =
        this.targetWidthMultipliedByChannels * this.heightOriginal;
    this.finalResultSize = this.targetWidthMultipliedByChannels * this.targetHeight;
    this.initialize()
}
Resize.prototype.initialize = function() {
    if (0 < this.widthOriginal && 0 < this.heightOriginal && 0 < this.targetWidth && 0 < this.targetHeight) this.widthOriginal == this.targetWidth ? this.resizeWidth = this.bypassResizer : (this.ratioWeightWidthPass = this.widthOriginal / this.targetWidth, 1 > this.ratioWeightWidthPass && this.interpolationPass ? (this.initializeFirstPassBuffers(!0), this.resizeWidth = 4 == this.colorChannels ? this.resizeWidthInterpolatedRGBA : this.resizeWidthInterpolatedRGB) : (this.initializeFirstPassBuffers(!1), this.resizeWidth =
        4 == this.colorChannels ? this.resizeWidthRGBA : this.resizeWidthRGB)), this.heightOriginal == this.targetHeight ? this.resizeHeight = this.bypassResizer : (this.ratioWeightHeightPass = this.heightOriginal / this.targetHeight, 1 > this.ratioWeightHeightPass && this.interpolationPass ? (this.initializeSecondPassBuffers(!0), this.resizeHeight = this.resizeHeightInterpolated) : (this.initializeSecondPassBuffers(!1), this.resizeHeight = 4 == this.colorChannels ? this.resizeHeightRGBA : this.resizeHeightRGB));
    else throw Error("Invalid settings specified for the resizer.");
};
Resize.prototype.resizeWidthRGB = function(a) {
    var c = this.ratioWeightWidthPass,
        b, d, e = 0,
        f = 0,
        g, h, l = 0,
        m = this.originalWidthMultipliedByChannels - 2,
        q = this.targetWidthMultipliedByChannels - 2,
        p = this.outputWidthWorkBench,
        y = this.widthBuffer;
    do {
        for (g = 0; g < this.originalHeightMultipliedByChannels;) p[g++] = 0, p[g++] = 0, p[g++] = 0;
        b = c;
        do
            if (d = 1 + e - f, b >= d) {
                g = 0;
                for (h = e; g < this.originalHeightMultipliedByChannels; h += m) p[g++] += a[h++] * d, p[g++] += a[h++] * d, p[g++] += a[h] * d;
                f = e += 3;
                b -= d
            } else {
                g = 0;
                for (h = e; g < this.originalHeightMultipliedByChannels; h += m) p[g++] +=
                    a[h++] * b, p[g++] += a[h++] * b, p[g++] += a[h] * b;
                f += b;
                break
            }
        while (0 < b && e < this.originalWidthMultipliedByChannels);
        g = 0;
        for (h = l; g < this.originalHeightMultipliedByChannels; h += q) y[h++] = p[g++] / c, y[h++] = p[g++] / c, y[h] = p[g++] / c;
        l += 3
    } while (l < this.targetWidthMultipliedByChannels);
    return y
};
Resize.prototype.resizeWidthInterpolatedRGB = function(a) {
    for (var c = (this.widthOriginal - 1) / this.targetWidth, b = 0, d, e, f = this.widthBuffer, g = 0; g < this.targetWidthMultipliedByChannels; g += 3, b += c)
        for (secondWeight = b % 1, firstWeight = 1 - secondWeight, d = g, e = 3 * Math.floor(b); d < this.widthPassResultSize; e += this.originalWidthMultipliedByChannels, d += this.targetWidthMultipliedByChannels) f[d] = a[e] * firstWeight + a[e + 3] * secondWeight, f[d + 1] = a[e + 1] * firstWeight + a[e + 4] * secondWeight, f[d + 2] = a[e + 2] * firstWeight + a[e + 5] * secondWeight;
    return f
};
Resize.prototype.resizeWidthRGBA = function(a) {
    var c = this.ratioWeightWidthPass,
        b, d, e = 0,
        f = 0,
        g, h, l = 0,
        m = this.originalWidthMultipliedByChannels - 3,
        q = this.targetWidthMultipliedByChannels - 3,
        p = this.outputWidthWorkBench,
        y = this.widthBuffer;
    do {
        for (g = 0; g < this.originalHeightMultipliedByChannels;) p[g++] = 0, p[g++] = 0, p[g++] = 0, p[g++] = 0;
        b = c;
        do
            if (d = 1 + e - f, b >= d) {
                g = 0;
                for (h = e; g < this.originalHeightMultipliedByChannels; h += m) p[g++] += a[h++] * d, p[g++] += a[h++] * d, p[g++] += a[h++] * d, p[g++] += a[h] * d;
                f = e += 4;
                b -= d
            } else {
                g = 0;
                for (h = e; g < this.originalHeightMultipliedByChannels; h +=
                    m) p[g++] += a[h++] * b, p[g++] += a[h++] * b, p[g++] += a[h++] * b, p[g++] += a[h] * b;
                f += b;
                break
            }
        while (0 < b && e < this.originalWidthMultipliedByChannels);
        g = 0;
        for (h = l; g < this.originalHeightMultipliedByChannels; h += q) y[h++] = p[g++] / c, y[h++] = p[g++] / c, y[h++] = p[g++] / c, y[h] = p[g++] / c;
        l += 4
    } while (l < this.targetWidthMultipliedByChannels);
    return y
};
Resize.prototype.resizeWidthInterpolatedRGBA = function(a) {
    for (var c = (this.widthOriginal - 1) / this.targetWidth, b = 0, d, e, f = this.widthBuffer, g = 0; g < this.targetWidthMultipliedByChannels; g += 4, b += c)
        for (secondWeight = b % 1, firstWeight = 1 - secondWeight, d = g, e = 4 * Math.floor(b); d < this.widthPassResultSize; e += this.originalWidthMultipliedByChannels, d += this.targetWidthMultipliedByChannels) f[d] = a[e] * firstWeight + a[e + 4] * secondWeight, f[d + 1] = a[e + 1] * firstWeight + a[e + 5] * secondWeight, f[d + 2] = a[e + 2] * firstWeight + a[e + 6] * secondWeight, f[d +
            3] = a[e + 3] * firstWeight + a[e + 7] * secondWeight;
    return f
};
Resize.prototype.resizeHeightRGB = function(a) {
    var c = this.ratioWeightHeightPass,
        b, d, e = 0,
        f = 0,
        g, h = 0,
        l = this.outputHeightWorkBench,
        m = this.heightBuffer;
    do {
        for (g = 0; g < this.targetWidthMultipliedByChannels;) l[g++] = 0, l[g++] = 0, l[g++] = 0;
        b = c;
        do
            if (d = 1 + e - f, b >= d) {
                for (g = 0; g < this.targetWidthMultipliedByChannels;) l[g++] += a[e++] * d, l[g++] += a[e++] * d, l[g++] += a[e++] * d;
                f = e;
                b -= d
            } else {
                g = 0;
                for (d = e; g < this.targetWidthMultipliedByChannels;) l[g++] += a[d++] * b, l[g++] += a[d++] * b, l[g++] += a[d++] * b;
                f += b;
                break
            }
        while (0 < b && e < this.widthPassResultSize);
        for (g = 0; g < this.targetWidthMultipliedByChannels;) m[h++] = Math.round(l[g++] / c), m[h++] = Math.round(l[g++] / c), m[h++] = Math.round(l[g++] / c)
    } while (h < this.finalResultSize);
    return m
};
Resize.prototype.resizeHeightInterpolated = function(a) {
    var c = (this.heightOriginal - 1) / this.targetHeight,
        b = 0,
        d = 0,
        e, f, g, h = this.heightBuffer;
    do {
        secondWeight = b % 1;
        firstWeight = 1 - secondWeight;
        f = Math.floor(b) * this.targetWidthMultipliedByChannels;
        g = f + this.targetWidthMultipliedByChannels;
        for (e = 0; e < this.targetWidthMultipliedByChannels; ++e) h[d++] = a[f + e] * firstWeight + a[g + e] * secondWeight;
        b += c
    } while (d < this.finalResultSize);
    return h
};
Resize.prototype.resizeHeightRGBA = function(a) {
    var c = this.ratioWeightHeightPass,
        b, d, e = 0,
        f = 0,
        g, h = 0,
        l = this.outputHeightWorkBench,
        m = this.heightBuffer;
    do {
        for (g = 0; g < this.targetWidthMultipliedByChannels;) l[g++] = 0, l[g++] = 0, l[g++] = 0, l[g++] = 0;
        b = c;
        do
            if (d = 1 + e - f, b >= d) {
                for (g = 0; g < this.targetWidthMultipliedByChannels;) l[g++] += a[e++] * d, l[g++] += a[e++] * d, l[g++] += a[e++] * d, l[g++] += a[e++] * d;
                f = e;
                b -= d
            } else {
                g = 0;
                for (d = e; g < this.targetWidthMultipliedByChannels;) l[g++] += a[d++] * b, l[g++] += a[d++] * b, l[g++] += a[d++] * b, l[g++] += a[d++] *
                    b;
                f += b;
                break
            }
        while (0 < b && e < this.widthPassResultSize);
        for (g = 0; g < this.targetWidthMultipliedByChannels;) m[h++] = Math.round(l[g++] / c), m[h++] = Math.round(l[g++] / c), m[h++] = Math.round(l[g++] / c), m[h++] = Math.round(l[g++] / c)
    } while (h < this.finalResultSize);
    return m
};
Resize.prototype.resizeHeightInterpolatedRGBA = function(a) {
    for (var c = (this.heightOriginal - 1) / this.targetHeight, b = 0, d = 0, e = 0, f = this.heightBuffer; e < this.finalResultSize;) {
        secondWeight = b % 1;
        firstWeight = 1 - secondWeight;
        for (e = 4 * Math.floor(b); e < this.targetWidthMultipliedByChannels; e += 4) f[d++] = a[e] * firstWeight + a[e + 4] * secondWeight, f[d++] = a[e + 1] * firstWeight + a[e + 5] * secondWeight, f[d++] = a[e + 2] * firstWeight + a[e + 6] * secondWeight, f[d++] = a[e + 3] * firstWeight + a[e + 7] * secondWeight;
        b += c
    }
    return f
};
Resize.prototype.resize = function(a) {
    return this.resizeHeight(this.resizeWidth(a))
};
Resize.prototype.bypassResizer = function(a) {
    return a
};
Resize.prototype.initializeFirstPassBuffers = function(a) {
    this.widthBuffer = this.generateFloatBuffer(this.widthPassResultSize);
    a || (this.outputWidthWorkBench = this.generateFloatBuffer(this.originalHeightMultipliedByChannels))
};
Resize.prototype.initializeSecondPassBuffers = function(a) {
    this.heightBuffer = this.generateUint8Buffer(this.finalResultSize);
    a || (this.outputHeightWorkBench = this.generateFloatBuffer(this.targetWidthMultipliedByChannels))
};
Resize.prototype.generateFloatBuffer = function(a) {
    try {
        return new Float32Array(a)
    } catch (c) {
        return []
    }
};
Resize.prototype.generateUint8Buffer = function(a) {
    try {
        return this.checkForOperaMathBug(new Uint8Array(a))
    } catch (c) {
        return []
    }
};
Resize.prototype.checkForOperaMathBug = function(a) {
    a[0] = -1;
    a[0] >>= 0;
    return 255 != a[0] ? [] : a
};

function GameBoyCore(a, c) {
    this.canvas = a;
    this.drawContext = null;
    this.ROMImage = c;
    this.registerA = 1;
    this.FZero = !0;
    this.FSubtract = !1;
    this.FCarry = this.FHalfCarry = !0;
    this.registerB = 0;
    this.registerC = 19;
    this.registerD = 0;
    this.registerE = 216;
    this.registersHL = 333;
    this.stackPointer = 65534;
    this.programCounter = 256;
    this.remainingClocks = this.baseCPUCyclesPerIteration = this.CPUCyclesTotalRoundoff = this.CPUCyclesTotalCurrent = this.CPUCyclesTotalBase = this.CPUCyclesTotal = 0;
    this.inBootstrap = !0;
    this.skipPCIncrement = this.halt =
        this.usedGBCBootROM = this.usedBootROM = !1;
    this.stopEmulator = 3;
    this.IME = !0;
    this.interruptsEnabled = this.interruptsRequested = this.IRQLineMatched = 0;
    this.hdmaRunning = !1;
    this.doubleSpeedShifter = this.CPUTicks = 0;
    this.JoyPad = 255;
    this.CPUStopped = !1;
    this.memoryReader = [];
    this.memoryWriter = [];
    this.memoryHighReader = [];
    this.memoryHighWriter = [];
    this.ROM = [];
    this.memory = [];
    this.MBCRam = [];
    this.VRAM = [];
    this.GBCMemory = [];
    this.MBCRAMBanksEnabled = this.MBC1Mode = !1;
    this.currMBCRAMBank = 0;
    this.currMBCRAMBankPosition = -40960;
    this.cGBC = !1;
    this.gbcRamBank = 1;
    this.gbcRamBankPosition = -53248;
    this.gbcRamBankPositionECHO = -61440;
    this.RAMBanks = [0, 1, 2, 4, 16];
    this.cartridgeType = this.currentROMBank = this.ROMBank1offs = 0;
    this.gameCode = this.name = "";
    this.fromSaveState = !1;
    this.savedStateFileName = "";
    this.modeSTAT = this.STATTracker = 0;
    this.spriteCount = 252;
    this.LCDisOn = this.mode0TriggerSTAT = this.mode1TriggerSTAT = this.mode2TriggerSTAT = this.LYCMatchTriggerSTAT = !1;
    this.LINECONTROL = [];
    this.DISPLAYOFFCONTROL = [function(a) {}];
    this.LCDCONTROL = null;
    this.initializeLCDController();
    this.RTCisLatched = !1;
    this.RTCDays = this.RTCHours = this.RTCMinutes = this.RTCSeconds = this.latchedHDays = this.latchedLDays = this.latchedHours = this.latchedMinutes = this.latchedSeconds = 0;
    this.RTCHALT = this.RTCDayOverFlow = !1;
    this.lowY = this.highY = this.lowX = this.highX = 127;
    this.audioHandle = null;
    this.sampleSize = this.numSamplesTotal = 0;
    this.dutyLookup = [
        [!1, !1, !1, !1, !1, !1, !1, !0],
        [!0, !1, !1, !1, !1, !1, !1, !0],
        [!0, !1, !1, !1, !1, !0, !0, !0],
        [!1, !0, !0, !0, !0, !0, !0, !1]
    ];
    this.currentBuffer = [];
    this.bufferContainAmount = 0;
    this.noiseSampleTable =
        this.LSFR7Table = this.LSFR15Table = null;
    this.initializeAudioStartState();
    this.soundMasterEnabled = !1;
    this.channel3PCM = null;
    this.VinRightChannelMasterVolume = this.VinLeftChannelMasterVolume = 8;
    this.rightChannel4 = this.rightChannel3 = this.rightChannel2 = this.rightChannel1 = this.leftChannel4 = this.leftChannel3 = this.leftChannel2 = this.leftChannel1 = !1;
    this.mixerOutputCache = this.channel2currentSampleRightTrimary = this.channel2currentSampleLeftTrimary = this.channel1currentSampleRightTrimary = this.channel1currentSampleLeftTrimary =
        this.channel4currentSampleRightSecondary = this.channel4currentSampleLeftSecondary = this.channel3currentSampleRightSecondary = this.channel3currentSampleLeftSecondary = this.channel2currentSampleRightSecondary = this.channel2currentSampleLeftSecondary = this.channel1currentSampleRightSecondary = this.channel1currentSampleLeftSecondary = this.channel4currentSampleRight = this.channel4currentSampleLeft = this.channel3currentSampleRight = this.channel3currentSampleLeft = this.channel2currentSampleRight = this.channel2currentSampleLeft =
        this.channel1currentSampleRight = this.channel1currentSampleLeft = 0;
    this.initializeTiming();
    this.emulatorTicks = this.rollover = this.audioIndex = this.audioTicks = this.machineOut = 0;
    this.DIVTicks = 56;
    this.LCDTicks = 60;
    this.timerTicks = 0;
    this.TIMAEnabled = !1;
    this.TACClocker = 1024;
    this.IRQEnableDelay = this.serialShiftTimerAllocated = this.serialShiftTimer = this.serialTimer = 0;
    var b = new_Date();
    this.lastIteration = b.getTime();
    b = new_Date();
    this.firstIteration = b.getTime();
    this.haltPostClocks = this.totalLinesPassed = this.queuedScanLines =
        this.lastUnrenderedLine = this.actualScanLine = this.iterations = 0;
    this.cTIMER = this.cHuC1 = this.cHuC3 = this.cTAMA5 = this.cCamera = this.cRUMBLE = this.cMMMO1 = this.cSRAM = this.cMBC7 = this.cMBC5 = this.cMBC3 = this.cMBC2 = this.cMBC1 = !1;
    this.ROMBanks = [2, 4, 8, 16, 32, 64, 128, 256, 512];
    this.ROMBanks[82] = 72;
    this.ROMBanks[83] = 80;
    this.ROMBanks[84] = 96;
    this.backgroundY = this.backgroundX = this.currVRAMBank = this.numRAMBanks = 0;
    this.gfxSpriteShow = this.gfxWindowDisplay = !1;
    this.BGPriorityEnabled = this.bgEnabled = this.gfxSpriteNormalHeight = !0;
    this.gfxBackgroundCHRBankPosition = this.gfxWindowCHRBankPosition = 0;
    this.gfxBackgroundBankOffset = 128;
    this.drewBlank = this.windowX = this.windowY = 0;
    this.drewFrame = !1;
    this.midScanlineOffset = -1;
    this.currentX = this.pixelEnd = 0;
    this.tileCache = this.BGCHRCurrentBank = this.BGCHRBank2 = this.BGCHRBank1 = null;
    this.colors = [15728606, 11392916, 5411443, 1586242];
    this.cachedOBJPaletteConversion = this.cachedBGPaletteConversion = this.gbOBJColorizedPalette = this.gbBGColorizedPalette = this.gbcBGPalette = this.gbcOBJPalette = this.gbBGPalette =
        this.gbOBJPalette = this.gbcBGRawPalette = this.gbcOBJRawPalette = this.BGPalette = this.OBJPalette = null;
    this.updateGBBGPalette = this.updateGBRegularBGPalette;
    this.updateGBOBJPalette = this.updateGBRegularOBJPalette;
    this.colorizedGBPalettes = !1;
    this.SpriteLayerRender = this.WindowLayerRender = this.BGLayerRender = null;
    this.frameBuffer = [];
    this.canvasBuffer = this.swizzledFrame = null;
    this.pixelStart = 0;
    this.onscreenWidth = this.offscreenWidth = 160;
    this.onscreenHeight = this.offScreenheight = 144;
    this.offscreenRGBCount = this.onscreenWidth *
        this.onscreenHeight * 4;
    this.intializeWhiteNoise()
}
GameBoyCore.prototype.GBBOOTROM = [];
GameBoyCore.prototype.GBCBOOTROM = [];
GameBoyCore.prototype.ffxxDump = [15, 0, 124, 255, 0, 0, 0, 248, 255, 255, 255, 255, 255, 255, 255, 1, 128, 191, 243, 255, 191, 255, 63, 0, 255, 191, 127, 255, 159, 255, 191, 255, 255, 0, 0, 191, 119, 243, 241, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 145, 128, 0, 0, 0, 0, 0, 252, 0, 0, 0, 0, 255, 126, 255, 254, 255, 255, 255, 255, 255, 255, 62, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 192, 255, 193, 0, 254, 255, 255, 255, 248, 255, 0, 0, 0, 143, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 206, 237, 102, 102, 204, 13,
    0, 11, 3, 115, 0, 131, 0, 12, 0, 13, 0, 8, 17, 31, 136, 137, 0, 14, 220, 204, 110, 230, 221, 221, 217, 153, 187, 187, 103, 99, 110, 14, 236, 204, 221, 220, 153, 159, 187, 185, 51, 62, 69, 236, 82, 250, 8, 183, 7, 93, 1, 253, 192, 255, 8, 252, 0, 229, 11, 248, 194, 206, 244, 249, 15, 127, 69, 109, 61, 254, 70, 151, 51, 94, 8, 239, 241, 255, 134, 131, 36, 116, 18, 252, 0, 159, 180, 183, 6, 213, 208, 122, 0, 158, 4, 95, 65, 47, 29, 119, 54, 117, 129, 170, 112, 58, 152, 209, 113, 2, 77, 1, 193, 255, 13, 0, 211, 5, 249, 0, 11, 0
];
GameBoyCore.prototype.OPCODE = [function(a) {}, function(a) {
        a.registerC = a.memoryReader[a.programCounter](a, a.programCounter);
        a.registerB = a.memoryRead(a.programCounter + 1 & 65535);
        a.programCounter = a.programCounter + 2 & 65535
    }, function(a) {
        a.memoryWrite(a.registerB << 8 | a.registerC, a.registerA)
    }, function(a) {
        var c = (a.registerB << 8 | a.registerC) + 1;
        a.registerB = c >> 8 & 255;
        a.registerC = c & 255
    }, function(a) {
        a.registerB = a.registerB + 1 & 255;
        a.FZero = 0 == a.registerB;
        a.FHalfCarry = 0 == (a.registerB & 15);
        a.FSubtract = !1
    }, function(a) {
        a.registerB =
            a.registerB - 1 & 255;
        a.FZero = 0 == a.registerB;
        a.FHalfCarry = 15 == (a.registerB & 15);
        a.FSubtract = !0
    }, function(a) {
        a.registerB = a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535
    }, function(a) {
        a.FCarry = 127 < a.registerA;
        a.registerA = a.registerA << 1 & 255 | a.registerA >> 7;
        a.FZero = a.FSubtract = a.FHalfCarry = !1
    }, function(a) {
        var c = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 2 & 65535;
        a.memoryWrite(c,
            a.stackPointer & 255);
        a.memoryWrite(c + 1 & 65535, a.stackPointer >> 8)
    }, function(a) {
        var c = a.registersHL + (a.registerB << 8 | a.registerC);
        a.FHalfCarry = (a.registersHL & 4095) > (c & 4095);
        a.FCarry = 65535 < c;
        a.registersHL = c & 65535;
        a.FSubtract = !1
    }, function(a) {
        a.registerA = a.memoryRead(a.registerB << 8 | a.registerC)
    }, function(a) {
        var c = (a.registerB << 8 | a.registerC) - 1 & 65535;
        a.registerB = c >> 8;
        a.registerC = c & 255
    }, function(a) {
        a.registerC = a.registerC + 1 & 255;
        a.FZero = 0 == a.registerC;
        a.FHalfCarry = 0 == (a.registerC & 15);
        a.FSubtract = !1
    }, function(a) {
        a.registerC =
            a.registerC - 1 & 255;
        a.FZero = 0 == a.registerC;
        a.FHalfCarry = 15 == (a.registerC & 15);
        a.FSubtract = !0
    }, function(a) {
        a.registerC = a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535
    }, function(a) {
        a.registerA = a.registerA >> 1 | (a.registerA & 1) << 7;
        a.FCarry = 127 < a.registerA;
        a.FZero = a.FSubtract = a.FHalfCarry = !1
    }, function(a) {
        a.cGBC ? 1 == (a.memory[65357] & 1) ? (127 < a.memory[65357] ? (cout("Going into single clock speed mode.", 0), a.doubleSpeedShifter = 0, a.memory[65357] &= 127) : (cout("Going into double clock speed mode.",
            0), a.doubleSpeedShifter = 1, a.memory[65357] |= 128), a.memory[65357] &= 254) : a.handleSTOP() : a.handleSTOP()
    }, function(a) {
        a.registerE = a.memoryReader[a.programCounter](a, a.programCounter);
        a.registerD = a.memoryRead(a.programCounter + 1 & 65535);
        a.programCounter = a.programCounter + 2 & 65535
    }, function(a) {
        a.memoryWrite(a.registerD << 8 | a.registerE, a.registerA)
    }, function(a) {
        var c = (a.registerD << 8 | a.registerE) + 1;
        a.registerD = c >> 8 & 255;
        a.registerE = c & 255
    }, function(a) {
        a.registerD = a.registerD + 1 & 255;
        a.FZero = 0 == a.registerD;
        a.FHalfCarry =
            0 == (a.registerD & 15);
        a.FSubtract = !1
    }, function(a) {
        a.registerD = a.registerD - 1 & 255;
        a.FZero = 0 == a.registerD;
        a.FHalfCarry = 15 == (a.registerD & 15);
        a.FSubtract = !0
    }, function(a) {
        a.registerD = a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535
    }, function(a) {
        var c = a.FCarry ? 1 : 0;
        a.FCarry = 127 < a.registerA;
        a.registerA = a.registerA << 1 & 255 | c;
        a.FZero = a.FSubtract = a.FHalfCarry = !1
    }, function(a) {
        a.programCounter = a.programCounter + (a.memoryReader[a.programCounter](a, a.programCounter) << 24 >>
            24) + 1 & 65535
    }, function(a) {
        var c = a.registersHL + (a.registerD << 8 | a.registerE);
        a.FHalfCarry = (a.registersHL & 4095) > (c & 4095);
        a.FCarry = 65535 < c;
        a.registersHL = c & 65535;
        a.FSubtract = !1
    }, function(a) {
        a.registerA = a.memoryRead(a.registerD << 8 | a.registerE)
    }, function(a) {
        var c = (a.registerD << 8 | a.registerE) - 1 & 65535;
        a.registerD = c >> 8;
        a.registerE = c & 255
    }, function(a) {
        a.registerE = a.registerE + 1 & 255;
        a.FZero = 0 == a.registerE;
        a.FHalfCarry = 0 == (a.registerE & 15);
        a.FSubtract = !1
    }, function(a) {
        a.registerE = a.registerE - 1 & 255;
        a.FZero = 0 == a.registerE;
        a.FHalfCarry = 15 == (a.registerE & 15);
        a.FSubtract = !0
    }, function(a) {
        a.registerE = a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535
    }, function(a) {
        var c = a.FCarry ? 128 : 0;
        a.FCarry = 1 == (a.registerA & 1);
        a.registerA = a.registerA >> 1 | c;
        a.FZero = a.FSubtract = a.FHalfCarry = !1
    }, function(a) {
        a.FZero ? a.programCounter = a.programCounter + 1 & 65535 : (a.programCounter = a.programCounter + (a.memoryReader[a.programCounter](a, a.programCounter) << 24 >> 24) + 1 & 65535, a.CPUTicks += 4)
    }, function(a) {
        a.registersHL =
            a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 2 & 65535
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.registerA);
        a.registersHL = a.registersHL + 1 & 65535
    }, function(a) {
        a.registersHL = a.registersHL + 1 & 65535
    }, function(a) {
        var c = (a.registersHL >> 8) + 1 & 255;
        a.FZero = 0 == c;
        a.FHalfCarry = 0 == (c & 15);
        a.FSubtract = !1;
        a.registersHL = c << 8 | a.registersHL & 255
    }, function(a) {
        var c = (a.registersHL >> 8) - 1 & 255;
        a.FZero = 0 == c;
        a.FHalfCarry = 15 == (c &
            15);
        a.FSubtract = !0;
        a.registersHL = c << 8 | a.registersHL & 255
    }, function(a) {
        a.registersHL = a.memoryReader[a.programCounter](a, a.programCounter) << 8 | a.registersHL & 255;
        a.programCounter = a.programCounter + 1 & 65535
    }, function(a) {
        if (a.FSubtract) a.FCarry && a.FHalfCarry ? (a.registerA = a.registerA + 154 & 255, a.FHalfCarry = !1) : a.FCarry ? a.registerA = a.registerA + 160 & 255 : a.FHalfCarry && (a.registerA = a.registerA + 250 & 255, a.FHalfCarry = !1);
        else {
            if (a.FCarry || 153 < a.registerA) a.registerA = a.registerA + 96 & 255, a.FCarry = !0;
            if (a.FHalfCarry || 9 <
                (a.registerA & 15)) a.registerA = a.registerA + 6 & 255, a.FHalfCarry = !1
        }
        a.FZero = 0 == a.registerA
    }, function(a) {
        a.FZero ? (a.programCounter = a.programCounter + (a.memoryReader[a.programCounter](a, a.programCounter) << 24 >> 24) + 1 & 65535, a.CPUTicks += 4) : a.programCounter = a.programCounter + 1 & 65535
    }, function(a) {
        a.FHalfCarry = 2047 < (a.registersHL & 4095);
        a.FCarry = 32767 < a.registersHL;
        a.registersHL = a.registersHL << 1 & 65535;
        a.FSubtract = !1
    }, function(a) {
        a.registerA = a.memoryReader[a.registersHL](a, a.registersHL);
        a.registersHL = a.registersHL +
            1 & 65535
    }, function(a) {
        a.registersHL = a.registersHL - 1 & 65535
    }, function(a) {
        var c = a.registersHL + 1 & 255;
        a.FZero = 0 == c;
        a.FHalfCarry = 0 == (c & 15);
        a.FSubtract = !1;
        a.registersHL = a.registersHL & 65280 | c
    }, function(a) {
        var c = a.registersHL - 1 & 255;
        a.FZero = 0 == c;
        a.FHalfCarry = 15 == (c & 15);
        a.FSubtract = !0;
        a.registersHL = a.registersHL & 65280 | c
    }, function(a) {
        a.registersHL = a.registersHL & 65280 | a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535
    }, function(a) {
        a.registerA ^= 255;
        a.FSubtract = a.FHalfCarry = !0
    }, function(a) {
        a.FCarry ? a.programCounter = a.programCounter + 1 & 65535 : (a.programCounter = a.programCounter + (a.memoryReader[a.programCounter](a, a.programCounter) << 24 >> 24) + 1 & 65535, a.CPUTicks += 4)
    }, function(a) {
        a.stackPointer = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 2 & 65535
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.registerA);
        a.registersHL = a.registersHL - 1 & 65535
    }, function(a) {
        a.stackPointer = a.stackPointer +
            1 & 65535
    }, function(a) {
        var c = a.memoryReader[a.registersHL](a, a.registersHL) + 1 & 255;
        a.FZero = 0 == c;
        a.FHalfCarry = 0 == (c & 15);
        a.FSubtract = !1;
        a.memoryWriter[a.registersHL](a, a.registersHL, c)
    }, function(a) {
        var c = a.memoryReader[a.registersHL](a, a.registersHL) - 1 & 255;
        a.FZero = 0 == c;
        a.FHalfCarry = 15 == (c & 15);
        a.FSubtract = !0;
        a.memoryWriter[a.registersHL](a, a.registersHL, c)
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.programCounter](a, a.programCounter));
        a.programCounter = a.programCounter + 1 &
            65535
    }, function(a) {
        a.FCarry = !0;
        a.FSubtract = a.FHalfCarry = !1
    }, function(a) {
        a.FCarry ? (a.programCounter = a.programCounter + (a.memoryReader[a.programCounter](a, a.programCounter) << 24 >> 24) + 1 & 65535, a.CPUTicks += 4) : a.programCounter = a.programCounter + 1 & 65535
    }, function(a) {
        var c = a.registersHL + a.stackPointer;
        a.FHalfCarry = (a.registersHL & 4095) > (c & 4095);
        a.FCarry = 65535 < c;
        a.registersHL = c & 65535;
        a.FSubtract = !1
    }, function(a) {
        a.registerA = a.memoryReader[a.registersHL](a, a.registersHL);
        a.registersHL = a.registersHL - 1 & 65535
    }, function(a) {
        a.stackPointer =
            a.stackPointer - 1 & 65535
    }, function(a) {
        a.registerA = a.registerA + 1 & 255;
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = 0 == (a.registerA & 15);
        a.FSubtract = !1
    }, function(a) {
        a.registerA = a.registerA - 1 & 255;
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = 15 == (a.registerA & 15);
        a.FSubtract = !0
    }, function(a) {
        a.registerA = a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535
    }, function(a) {
        a.FCarry = !a.FCarry;
        a.FSubtract = a.FHalfCarry = !1
    }, function(a) {}, function(a) {
        a.registerB = a.registerC
    }, function(a) {
        a.registerB =
            a.registerD
    }, function(a) {
        a.registerB = a.registerE
    }, function(a) {
        a.registerB = a.registersHL >> 8
    }, function(a) {
        a.registerB = a.registersHL & 255
    }, function(a) {
        a.registerB = a.memoryReader[a.registersHL](a, a.registersHL)
    }, function(a) {
        a.registerB = a.registerA
    }, function(a) {
        a.registerC = a.registerB
    }, function(a) {}, function(a) {
        a.registerC = a.registerD
    }, function(a) {
        a.registerC = a.registerE
    }, function(a) {
        a.registerC = a.registersHL >> 8
    }, function(a) {
        a.registerC = a.registersHL & 255
    }, function(a) {
        a.registerC = a.memoryReader[a.registersHL](a,
            a.registersHL)
    }, function(a) {
        a.registerC = a.registerA
    }, function(a) {
        a.registerD = a.registerB
    }, function(a) {
        a.registerD = a.registerC
    }, function(a) {}, function(a) {
        a.registerD = a.registerE
    }, function(a) {
        a.registerD = a.registersHL >> 8
    }, function(a) {
        a.registerD = a.registersHL & 255
    }, function(a) {
        a.registerD = a.memoryReader[a.registersHL](a, a.registersHL)
    }, function(a) {
        a.registerD = a.registerA
    }, function(a) {
        a.registerE = a.registerB
    }, function(a) {
        a.registerE = a.registerC
    }, function(a) {
        a.registerE = a.registerD
    }, function(a) {}, function(a) {
        a.registerE =
            a.registersHL >> 8
    }, function(a) {
        a.registerE = a.registersHL & 255
    }, function(a) {
        a.registerE = a.memoryReader[a.registersHL](a, a.registersHL)
    }, function(a) {
        a.registerE = a.registerA
    }, function(a) {
        a.registersHL = a.registerB << 8 | a.registersHL & 255
    }, function(a) {
        a.registersHL = a.registerC << 8 | a.registersHL & 255
    }, function(a) {
        a.registersHL = a.registerD << 8 | a.registersHL & 255
    }, function(a) {
        a.registersHL = a.registerE << 8 | a.registersHL & 255
    }, function(a) {}, function(a) {
        a.registersHL = 257 * (a.registersHL & 255)
    }, function(a) {
        a.registersHL =
            a.memoryReader[a.registersHL](a, a.registersHL) << 8 | a.registersHL & 255
    }, function(a) {
        a.registersHL = a.registerA << 8 | a.registersHL & 255
    }, function(a) {
        a.registersHL = a.registersHL & 65280 | a.registerB
    }, function(a) {
        a.registersHL = a.registersHL & 65280 | a.registerC
    }, function(a) {
        a.registersHL = a.registersHL & 65280 | a.registerD
    }, function(a) {
        a.registersHL = a.registersHL & 65280 | a.registerE
    }, function(a) {
        a.registersHL = a.registersHL & 65280 | a.registersHL >> 8
    }, function(a) {}, function(a) {
        a.registersHL = a.registersHL & 65280 | a.memoryReader[a.registersHL](a,
            a.registersHL)
    }, function(a) {
        a.registersHL = a.registersHL & 65280 | a.registerA
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.registerB)
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.registerC)
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.registerD)
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.registerE)
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.registersHL >> 8)
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.registersHL &
            255)
    }, function(a) {
        0 < (a.interruptsEnabled & a.interruptsRequested & 31) ? a.cGBC || a.usedBootROM ? a.CPUTicks += 4 : a.skipPCIncrement = !0 : a.calculateHALTPeriod()
    }, function(a) {
        a.memoryWriter[a.registersHL](a, a.registersHL, a.registerA)
    }, function(a) {
        a.registerA = a.registerB
    }, function(a) {
        a.registerA = a.registerC
    }, function(a) {
        a.registerA = a.registerD
    }, function(a) {
        a.registerA = a.registerE
    }, function(a) {
        a.registerA = a.registersHL >> 8
    }, function(a) {
        a.registerA = a.registersHL & 255
    }, function(a) {
        a.registerA = a.memoryReader[a.registersHL](a,
            a.registersHL)
    }, function(a) {}, function(a) {
        var c = a.registerA + a.registerB;
        a.FHalfCarry = (c & 15) < (a.registerA & 15);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA + a.registerC;
        a.FHalfCarry = (c & 15) < (a.registerA & 15);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA + a.registerD;
        a.FHalfCarry = (c & 15) < (a.registerA & 15);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c =
            a.registerA + a.registerE;
        a.FHalfCarry = (c & 15) < (a.registerA & 15);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA + (a.registersHL >> 8);
        a.FHalfCarry = (c & 15) < (a.registerA & 15);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA + (a.registersHL & 255);
        a.FHalfCarry = (c & 15) < (a.registerA & 15);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA + a.memoryReader[a.registersHL](a,
            a.registersHL);
        a.FHalfCarry = (c & 15) < (a.registerA & 15);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        a.FHalfCarry = 8 == (a.registerA & 8);
        a.FCarry = 127 < a.registerA;
        a.registerA = a.registerA << 1 & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA + a.registerB + (a.FCarry ? 1 : 0);
        a.FHalfCarry = 15 < (a.registerA & 15) + (a.registerB & 15) + (a.FCarry ? 1 : 0);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA + a.registerC + (a.FCarry ?
            1 : 0);
        a.FHalfCarry = 15 < (a.registerA & 15) + (a.registerC & 15) + (a.FCarry ? 1 : 0);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA + a.registerD + (a.FCarry ? 1 : 0);
        a.FHalfCarry = 15 < (a.registerA & 15) + (a.registerD & 15) + (a.FCarry ? 1 : 0);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA + a.registerE + (a.FCarry ? 1 : 0);
        a.FHalfCarry = 15 < (a.registerA & 15) + (a.registerE & 15) + (a.FCarry ? 1 : 0);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 ==
            a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registersHL >> 8,
            b = a.registerA + c + (a.FCarry ? 1 : 0);
        a.FHalfCarry = 15 < (a.registerA & 15) + (c & 15) + (a.FCarry ? 1 : 0);
        a.FCarry = 255 < b;
        a.registerA = b & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registersHL & 255,
            b = a.registerA + c + (a.FCarry ? 1 : 0);
        a.FHalfCarry = 15 < (a.registerA & 15) + (c & 15) + (a.FCarry ? 1 : 0);
        a.FCarry = 255 < b;
        a.registerA = b & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.memoryReader[a.registersHL](a, a.registersHL),
            b = a.registerA + c + (a.FCarry ?
                1 : 0);
        a.FHalfCarry = 15 < (a.registerA & 15) + (c & 15) + (a.FCarry ? 1 : 0);
        a.FCarry = 255 < b;
        a.registerA = b & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA << 1 | (a.FCarry ? 1 : 0);
        a.FHalfCarry = 15 < (a.registerA << 1 & 30 | (a.FCarry ? 1 : 0));
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    }, function(a) {
        var c = a.registerA - a.registerB;
        a.FHalfCarry = (a.registerA & 15) < (c & 15);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerC;
        a.FHalfCarry = (a.registerA &
            15) < (c & 15);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerD;
        a.FHalfCarry = (a.registerA & 15) < (c & 15);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerE;
        a.FHalfCarry = (a.registerA & 15) < (c & 15);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - (a.registersHL >> 8);
        a.FHalfCarry = (a.registerA & 15) < (c & 15);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c =
            a.registerA - (a.registersHL & 255);
        a.FHalfCarry = (a.registerA & 15) < (c & 15);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.memoryReader[a.registersHL](a, a.registersHL);
        a.FHalfCarry = (a.registerA & 15) < (c & 15);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        a.registerA = 0;
        a.FHalfCarry = a.FCarry = !1;
        a.FZero = a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerB - (a.FCarry ? 1 : 0);
        a.FHalfCarry = 0 > (a.registerA & 15) - (a.registerB & 15) - (a.FCarry ? 1 : 0);
        a.FCarry =
            0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerC - (a.FCarry ? 1 : 0);
        a.FHalfCarry = 0 > (a.registerA & 15) - (a.registerC & 15) - (a.FCarry ? 1 : 0);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerD - (a.FCarry ? 1 : 0);
        a.FHalfCarry = 0 > (a.registerA & 15) - (a.registerD & 15) - (a.FCarry ? 1 : 0);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerE - (a.FCarry ? 1 : 0);
        a.FHalfCarry =
            0 > (a.registerA & 15) - (a.registerE & 15) - (a.FCarry ? 1 : 0);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registersHL >> 8,
            b = a.registerA - c - (a.FCarry ? 1 : 0);
        a.FHalfCarry = 0 > (a.registerA & 15) - (c & 15) - (a.FCarry ? 1 : 0);
        a.FCarry = 0 > b;
        a.registerA = b & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - (a.registersHL & 255) - (a.FCarry ? 1 : 0);
        a.FHalfCarry = 0 > (a.registerA & 15) - (a.registersHL & 15) - (a.FCarry ? 1 : 0);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !0
    }, function(a) {
        var c = a.memoryReader[a.registersHL](a, a.registersHL),
            b = a.registerA - c - (a.FCarry ? 1 : 0);
        a.FHalfCarry = 0 > (a.registerA & 15) - (c & 15) - (a.FCarry ? 1 : 0);
        a.FCarry = 0 > b;
        a.registerA = b & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !0
    }, function(a) {
        a.FCarry ? (a.FZero = !1, a.FSubtract = a.FHalfCarry = a.FCarry = !0, a.registerA = 255) : (a.FHalfCarry = a.FCarry = !1, a.FSubtract = a.FZero = !0, a.registerA = 0)
    }, function(a) {
        a.registerA &= a.registerB;
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = !0;
        a.FSubtract = a.FCarry = !1
    }, function(a) {
        a.registerA &=
            a.registerC;
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = !0;
        a.FSubtract = a.FCarry = !1
    }, function(a) {
        a.registerA &= a.registerD;
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = !0;
        a.FSubtract = a.FCarry = !1
    }, function(a) {
        a.registerA &= a.registerE;
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = !0;
        a.FSubtract = a.FCarry = !1
    }, function(a) {
        a.registerA &= a.registersHL >> 8;
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = !0;
        a.FSubtract = a.FCarry = !1
    }, function(a) {
        a.registerA &= a.registersHL;
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = !0;
        a.FSubtract = a.FCarry = !1
    }, function(a) {
        a.registerA &=
            a.memoryReader[a.registersHL](a, a.registersHL);
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = !0;
        a.FSubtract = a.FCarry = !1
    }, function(a) {
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = !0;
        a.FSubtract = a.FCarry = !1
    }, function(a) {
        a.registerA ^= a.registerB;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FHalfCarry = a.FCarry = !1
    }, function(a) {
        a.registerA ^= a.registerC;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FHalfCarry = a.FCarry = !1
    }, function(a) {
        a.registerA ^= a.registerD;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FHalfCarry = a.FCarry = !1
    }, function(a) {
        a.registerA ^=
            a.registerE;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FHalfCarry = a.FCarry = !1
    }, function(a) {
        a.registerA ^= a.registersHL >> 8;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FHalfCarry = a.FCarry = !1
    }, function(a) {
        a.registerA ^= a.registersHL & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FHalfCarry = a.FCarry = !1
    }, function(a) {
        a.registerA ^= a.memoryReader[a.registersHL](a, a.registersHL);
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FHalfCarry = a.FCarry = !1
    }, function(a) {
        a.registerA = 0;
        a.FZero = !0;
        a.FSubtract = a.FHalfCarry = a.FCarry = !1
    }, function(a) {
        a.registerA |=
            a.registerB;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FCarry = a.FHalfCarry = !1
    }, function(a) {
        a.registerA |= a.registerC;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FCarry = a.FHalfCarry = !1
    }, function(a) {
        a.registerA |= a.registerD;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FCarry = a.FHalfCarry = !1
    }, function(a) {
        a.registerA |= a.registerE;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FCarry = a.FHalfCarry = !1
    }, function(a) {
        a.registerA |= a.registersHL >> 8;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FCarry = a.FHalfCarry = !1
    }, function(a) {
        a.registerA |= a.registersHL &
            255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FCarry = a.FHalfCarry = !1
    }, function(a) {
        a.registerA |= a.memoryReader[a.registersHL](a, a.registersHL);
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FCarry = a.FHalfCarry = !1
    }, function(a) {
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FCarry = a.FHalfCarry = !1
    }, function(a) {
        var c = a.registerA - a.registerB;
        a.FHalfCarry = (c & 15) > (a.registerA & 15);
        a.FCarry = 0 > c;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerC;
        a.FHalfCarry = (c & 15) > (a.registerA & 15);
        a.FCarry = 0 > c;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerD;
        a.FHalfCarry = (c & 15) > (a.registerA & 15);
        a.FCarry = 0 > c;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - a.registerE;
        a.FHalfCarry = (c & 15) > (a.registerA & 15);
        a.FCarry = 0 > c;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - (a.registersHL >> 8);
        a.FHalfCarry = (c & 15) > (a.registerA & 15);
        a.FCarry = 0 > c;
        a.FZero = 0 == c;
        a.FSubtract = !0
    }, function(a) {
        var c = a.registerA - (a.registersHL & 255);
        a.FHalfCarry = (c & 15) > (a.registerA & 15);
        a.FCarry = 0 > c;
        a.FZero = 0 == c;
        a.FSubtract = !0
    },
    function(a) {
        var c = a.registerA - a.memoryReader[a.registersHL](a, a.registersHL);
        a.FHalfCarry = (c & 15) > (a.registerA & 15);
        a.FCarry = 0 > c;
        a.FZero = 0 == c;
        a.FSubtract = !0
    },
    function(a) {
        a.FHalfCarry = a.FCarry = !1;
        a.FZero = a.FSubtract = !0
    },
    function(a) {
        a.FZero || (a.programCounter = a.memoryRead(a.stackPointer + 1 & 65535) << 8 | a.memoryReader[a.stackPointer](a, a.stackPointer), a.stackPointer = a.stackPointer + 2 & 65535, a.CPUTicks += 12)
    },
    function(a) {
        a.registerC = a.memoryReader[a.stackPointer](a, a.stackPointer);
        a.registerB = a.memoryRead(a.stackPointer +
            1 & 65535);
        a.stackPointer = a.stackPointer + 2 & 65535
    },
    function(a) {
        a.FZero ? a.programCounter = a.programCounter + 2 & 65535 : (a.programCounter = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter), a.CPUTicks += 4)
    },
    function(a) {
        a.programCounter = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter)
    },
    function(a) {
        if (a.FZero) a.programCounter = a.programCounter + 2 & 65535;
        else {
            var c = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a,
                a.programCounter);
            a.programCounter = a.programCounter + 2 & 65535;
            a.stackPointer = a.stackPointer - 1 & 65535;
            a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
            a.stackPointer = a.stackPointer - 1 & 65535;
            a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
            a.programCounter = c;
            a.CPUTicks += 12
        }
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.registerB);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer,
            a.registerC)
    },
    function(a) {
        var c = a.registerA + a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535;
        a.FHalfCarry = (c & 15) < (a.registerA & 15);
        a.FCarry = 255 < c;
        a.registerA = c & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
        a.programCounter = 0
    },
    function(a) {
        a.FZero &&
            (a.programCounter = a.memoryRead(a.stackPointer + 1 & 65535) << 8 | a.memoryReader[a.stackPointer](a, a.stackPointer), a.stackPointer = a.stackPointer + 2 & 65535, a.CPUTicks += 12)
    },
    function(a) {
        a.programCounter = a.memoryRead(a.stackPointer + 1 & 65535) << 8 | a.memoryReader[a.stackPointer](a, a.stackPointer);
        a.stackPointer = a.stackPointer + 2 & 65535
    },
    function(a) {
        a.FZero ? (a.programCounter = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter), a.CPUTicks += 4) : a.programCounter = a.programCounter +
            2 & 65535
    },
    function(a) {
        var c = a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535;
        a.CPUTicks += a.SecondaryTICKTable[c];
        a.CBOPCODE[c](a)
    },
    function(a) {
        if (a.FZero) {
            var c = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter);
            a.programCounter = a.programCounter + 2 & 65535;
            a.stackPointer = a.stackPointer - 1 & 65535;
            a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
            a.stackPointer = a.stackPointer - 1 & 65535;
            a.memoryWriter[a.stackPointer](a,
                a.stackPointer, a.programCounter & 255);
            a.programCounter = c;
            a.CPUTicks += 12
        } else a.programCounter = a.programCounter + 2 & 65535
    },
    function(a) {
        var c = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 2 & 65535;
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
        a.programCounter =
            c
    },
    function(a) {
        var c = a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535;
        var b = a.registerA + c + (a.FCarry ? 1 : 0);
        a.FHalfCarry = 15 < (a.registerA & 15) + (c & 15) + (a.FCarry ? 1 : 0);
        a.FCarry = 255 < b;
        a.registerA = b & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !1
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
        a.programCounter = 8
    },
    function(a) {
        a.FCarry || (a.programCounter = a.memoryRead(a.stackPointer + 1 & 65535) << 8 | a.memoryReader[a.stackPointer](a, a.stackPointer), a.stackPointer = a.stackPointer + 2 & 65535, a.CPUTicks += 12)
    },
    function(a) {
        a.registerE = a.memoryReader[a.stackPointer](a, a.stackPointer);
        a.registerD = a.memoryRead(a.stackPointer + 1 & 65535);
        a.stackPointer = a.stackPointer + 2 & 65535
    },
    function(a) {
        a.FCarry ? a.programCounter = a.programCounter + 2 & 65535 : (a.programCounter = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a,
            a.programCounter), a.CPUTicks += 4)
    },
    function(a) {
        cout("Illegal op code 0xD3 called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        if (a.FCarry) a.programCounter = a.programCounter + 2 & 65535;
        else {
            var c = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter);
            a.programCounter = a.programCounter + 2 & 65535;
            a.stackPointer = a.stackPointer - 1 & 65535;
            a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
            a.stackPointer = a.stackPointer - 1 & 65535;
            a.memoryWriter[a.stackPointer](a,
                a.stackPointer, a.programCounter & 255);
            a.programCounter = c;
            a.CPUTicks += 12
        }
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.registerD);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.registerE)
    },
    function(a) {
        var c = a.registerA - a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535;
        a.FHalfCarry = (a.registerA & 15) < (c & 15);
        a.FCarry = 0 > c;
        a.registerA = c & 255;
        a.FZero = 0 == c;
        a.FSubtract = !0
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
        a.programCounter = 16
    },
    function(a) {
        a.FCarry && (a.programCounter = a.memoryRead(a.stackPointer + 1 & 65535) << 8 | a.memoryReader[a.stackPointer](a, a.stackPointer), a.stackPointer = a.stackPointer + 2 & 65535, a.CPUTicks += 12)
    },
    function(a) {
        a.programCounter = a.memoryRead(a.stackPointer + 1 & 65535) <<
            8 | a.memoryReader[a.stackPointer](a, a.stackPointer);
        a.stackPointer = a.stackPointer + 2 & 65535;
        a.IRQEnableDelay = 2 == a.IRQEnableDelay || 118 == a.memoryReader[a.programCounter](a, a.programCounter) ? 1 : 2
    },
    function(a) {
        a.FCarry ? (a.programCounter = a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter), a.CPUTicks += 4) : a.programCounter = a.programCounter + 2 & 65535
    },
    function(a) {
        cout("Illegal op code 0xDB called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        if (a.FCarry) {
            var c = a.memoryRead(a.programCounter +
                1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter);
            a.programCounter = a.programCounter + 2 & 65535;
            a.stackPointer = a.stackPointer - 1 & 65535;
            a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
            a.stackPointer = a.stackPointer - 1 & 65535;
            a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
            a.programCounter = c;
            a.CPUTicks += 12
        } else a.programCounter = a.programCounter + 2 & 65535
    },
    function(a) {
        cout("Illegal op code 0xDD called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        var c =
            a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535;
        var b = a.registerA - c - (a.FCarry ? 1 : 0);
        a.FHalfCarry = 0 > (a.registerA & 15) - (c & 15) - (a.FCarry ? 1 : 0);
        a.FCarry = 0 > b;
        a.registerA = b & 255;
        a.FZero = 0 == a.registerA;
        a.FSubtract = !0
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
        a.programCounter = 24
    },
    function(a) {
        a.memoryHighWrite(a.memoryReader[a.programCounter](a, a.programCounter), a.registerA);
        a.programCounter = a.programCounter + 1 & 65535
    },
    function(a) {
        a.registersHL = a.memoryRead(a.stackPointer + 1 & 65535) << 8 | a.memoryReader[a.stackPointer](a, a.stackPointer);
        a.stackPointer = a.stackPointer + 2 & 65535
    },
    function(a) {
        a.memoryHighWriter[a.registerC](a, a.registerC, a.registerA)
    },
    function(a) {
        cout("Illegal op code 0xE3 called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        cout("Illegal op code 0xE4 called, pausing emulation.",
            2);
        pause()
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.registersHL >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.registersHL & 255)
    },
    function(a) {
        a.registerA &= a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535;
        a.FZero = 0 == a.registerA;
        a.FHalfCarry = !0;
        a.FSubtract = a.FCarry = !1
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a,
            a.stackPointer, a.programCounter >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
        a.programCounter = 32
    },
    function(a) {
        var c = a.memoryReader[a.programCounter](a, a.programCounter) << 24 >> 24;
        a.programCounter = a.programCounter + 1 & 65535;
        var b = a.stackPointer + c & 65535,
            c = a.stackPointer ^ c ^ b;
        a.stackPointer = b;
        a.FCarry = 256 == (c & 256);
        a.FHalfCarry = 16 == (c & 16);
        a.FZero = a.FSubtract = !1
    },
    function(a) {
        a.programCounter = a.registersHL
    },
    function(a) {
        a.memoryWrite(a.memoryRead(a.programCounter +
            1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter), a.registerA);
        a.programCounter = a.programCounter + 2 & 65535
    },
    function(a) {
        cout("Illegal op code 0xEB called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        cout("Illegal op code 0xEC called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        cout("Illegal op code 0xED called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        a.registerA ^= a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535;
        a.FZero = 0 == a.registerA;
        a.FSubtract = a.FHalfCarry = a.FCarry = !1
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
        a.programCounter = 40
    },
    function(a) {
        a.registerA = a.memoryHighRead(a.memoryReader[a.programCounter](a, a.programCounter));
        a.programCounter = a.programCounter + 1 & 65535
    },
    function(a) {
        var c = a.memoryReader[a.stackPointer](a, a.stackPointer);
        a.FZero = 127 <
            c;
        a.FSubtract = 64 == (c & 64);
        a.FHalfCarry = 32 == (c & 32);
        a.FCarry = 16 == (c & 16);
        a.registerA = a.memoryRead(a.stackPointer + 1 & 65535);
        a.stackPointer = a.stackPointer + 2 & 65535
    },
    function(a) {
        a.registerA = a.memoryHighReader[a.registerC](a, a.registerC)
    },
    function(a) {
        a.IME = !1;
        a.IRQEnableDelay = 0
    },
    function(a) {
        cout("Illegal op code 0xF4 called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.registerA);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a,
            a.stackPointer, (a.FZero ? 128 : 0) | (a.FSubtract ? 64 : 0) | (a.FHalfCarry ? 32 : 0) | (a.FCarry ? 16 : 0))
    },
    function(a) {
        a.registerA |= a.memoryReader[a.programCounter](a, a.programCounter);
        a.FZero = 0 == a.registerA;
        a.programCounter = a.programCounter + 1 & 65535;
        a.FSubtract = a.FCarry = a.FHalfCarry = !1
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
        a.programCounter =
            48
    },
    function(a) {
        var c = a.memoryReader[a.programCounter](a, a.programCounter) << 24 >> 24;
        a.programCounter = a.programCounter + 1 & 65535;
        a.registersHL = a.stackPointer + c & 65535;
        c = a.stackPointer ^ c ^ a.registersHL;
        a.FCarry = 256 == (c & 256);
        a.FHalfCarry = 16 == (c & 16);
        a.FZero = a.FSubtract = !1
    },
    function(a) {
        a.stackPointer = a.registersHL
    },
    function(a) {
        a.registerA = a.memoryRead(a.memoryRead(a.programCounter + 1 & 65535) << 8 | a.memoryReader[a.programCounter](a, a.programCounter));
        a.programCounter = a.programCounter + 2 & 65535
    },
    function(a) {
        a.IRQEnableDelay =
            2 == a.IRQEnableDelay || 118 == a.memoryReader[a.programCounter](a, a.programCounter) ? 1 : 2
    },
    function(a) {
        cout("Illegal op code 0xFC called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        cout("Illegal op code 0xFD called, pausing emulation.", 2);
        pause()
    },
    function(a) {
        var c = a.registerA - a.memoryReader[a.programCounter](a, a.programCounter);
        a.programCounter = a.programCounter + 1 & 65535;
        a.FHalfCarry = (c & 15) > (a.registerA & 15);
        a.FCarry = 0 > c;
        a.FZero = 0 == c;
        a.FSubtract = !0
    },
    function(a) {
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a,
            a.stackPointer, a.programCounter >> 8);
        a.stackPointer = a.stackPointer - 1 & 65535;
        a.memoryWriter[a.stackPointer](a, a.stackPointer, a.programCounter & 255);
        a.programCounter = 56
    }
];
GameBoyCore.prototype.CBOPCODE = [function(a) {
    a.FCarry = 127 < a.registerB;
    a.registerB = a.registerB << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerB
}, function(a) {
    a.FCarry = 127 < a.registerC;
    a.registerC = a.registerC << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerC
}, function(a) {
    a.FCarry = 127 < a.registerD;
    a.registerD = a.registerD << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerD
}, function(a) {
    a.FCarry = 127 < a.registerE;
    a.registerE = a.registerE << 1 &
        255 | (a.FCarry ? 1 : 0);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerE
}, function(a) {
    a.FCarry = 32767 < a.registersHL;
    a.registersHL = a.registersHL << 1 & 65024 | (a.FCarry ? 256 : 0) | a.registersHL & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 256 > a.registersHL
}, function(a) {
    a.FCarry = 128 == (a.registersHL & 128);
    a.registersHL = a.registersHL & 65280 | a.registersHL << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 255)
}, function(a) {
    var c = a.memoryReader[a.registersHL](a, a.registersHL);
    a.FCarry = 127 < c;
    c = c << 1 &
        255 | (a.FCarry ? 1 : 0);
    a.memoryWriter[a.registersHL](a, a.registersHL, c);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == c
}, function(a) {
    a.FCarry = 127 < a.registerA;
    a.registerA = a.registerA << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerA
}, function(a) {
    a.FCarry = 1 == (a.registerB & 1);
    a.registerB = (a.FCarry ? 128 : 0) | a.registerB >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerB
}, function(a) {
    a.FCarry = 1 == (a.registerC & 1);
    a.registerC = (a.FCarry ? 128 : 0) | a.registerC >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero =
        0 == a.registerC
}, function(a) {
    a.FCarry = 1 == (a.registerD & 1);
    a.registerD = (a.FCarry ? 128 : 0) | a.registerD >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerD
}, function(a) {
    a.FCarry = 1 == (a.registerE & 1);
    a.registerE = (a.FCarry ? 128 : 0) | a.registerE >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerE
}, function(a) {
    a.FCarry = 256 == (a.registersHL & 256);
    a.registersHL = (a.FCarry ? 32768 : 0) | a.registersHL >> 1 & 65280 | a.registersHL & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 256 > a.registersHL
}, function(a) {
    a.FCarry = 1 == (a.registersHL &
        1);
    a.registersHL = a.registersHL & 65280 | (a.FCarry ? 128 : 0) | (a.registersHL & 255) >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 255)
}, function(a) {
    var c = a.memoryReader[a.registersHL](a, a.registersHL);
    a.FCarry = 1 == (c & 1);
    c = (a.FCarry ? 128 : 0) | c >> 1;
    a.memoryWriter[a.registersHL](a, a.registersHL, c);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == c
}, function(a) {
    a.FCarry = 1 == (a.registerA & 1);
    a.registerA = (a.FCarry ? 128 : 0) | a.registerA >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerA
}, function(a) {
    var c = 127 < a.registerB;
    a.registerB = a.registerB << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerB
}, function(a) {
    var c = 127 < a.registerC;
    a.registerC = a.registerC << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerC
}, function(a) {
    var c = 127 < a.registerD;
    a.registerD = a.registerD << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerD
}, function(a) {
    var c = 127 < a.registerE;
    a.registerE = a.registerE << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerE
}, function(a) {
    var c = 32767 < a.registersHL;
    a.registersHL = a.registersHL << 1 & 65024 | (a.FCarry ? 256 : 0) | a.registersHL & 255;
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 256 > a.registersHL
}, function(a) {
    var c = 128 == (a.registersHL & 128);
    a.registersHL = a.registersHL & 65280 | a.registersHL << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 255)
}, function(a) {
    var c = a.memoryReader[a.registersHL](a, a.registersHL),
        b = 127 < c,
        c = c << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FCarry = b;
    a.memoryWriter[a.registersHL](a,
        a.registersHL, c);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == c
}, function(a) {
    var c = 127 < a.registerA;
    a.registerA = a.registerA << 1 & 255 | (a.FCarry ? 1 : 0);
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerA
}, function(a) {
    var c = 1 == (a.registerB & 1);
    a.registerB = (a.FCarry ? 128 : 0) | a.registerB >> 1;
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerB
}, function(a) {
    var c = 1 == (a.registerC & 1);
    a.registerC = (a.FCarry ? 128 : 0) | a.registerC >> 1;
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerC
}, function(a) {
    var c =
        1 == (a.registerD & 1);
    a.registerD = (a.FCarry ? 128 : 0) | a.registerD >> 1;
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerD
}, function(a) {
    var c = 1 == (a.registerE & 1);
    a.registerE = (a.FCarry ? 128 : 0) | a.registerE >> 1;
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerE
}, function(a) {
    var c = 256 == (a.registersHL & 256);
    a.registersHL = (a.FCarry ? 32768 : 0) | a.registersHL >> 1 & 65280 | a.registersHL & 255;
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 256 > a.registersHL
}, function(a) {
    var c = 1 == (a.registersHL & 1);
    a.registersHL =
        a.registersHL & 65280 | (a.FCarry ? 128 : 0) | (a.registersHL & 255) >> 1;
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 255)
}, function(a) {
    var c = a.memoryReader[a.registersHL](a, a.registersHL),
        b = 1 == (c & 1),
        c = (a.FCarry ? 128 : 0) | c >> 1;
    a.FCarry = b;
    a.memoryWriter[a.registersHL](a, a.registersHL, c);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == c
}, function(a) {
    var c = 1 == (a.registerA & 1);
    a.registerA = (a.FCarry ? 128 : 0) | a.registerA >> 1;
    a.FCarry = c;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerA
}, function(a) {
    a.FCarry = 127 <
        a.registerB;
    a.registerB = a.registerB << 1 & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerB
}, function(a) {
    a.FCarry = 127 < a.registerC;
    a.registerC = a.registerC << 1 & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerC
}, function(a) {
    a.FCarry = 127 < a.registerD;
    a.registerD = a.registerD << 1 & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerD
}, function(a) {
    a.FCarry = 127 < a.registerE;
    a.registerE = a.registerE << 1 & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerE
}, function(a) {
    a.FCarry = 32767 < a.registersHL;
    a.registersHL =
        a.registersHL << 1 & 65024 | a.registersHL & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 256 > a.registersHL
}, function(a) {
    a.FCarry = 128 == (a.registersHL & 128);
    a.registersHL = a.registersHL & 65280 | a.registersHL << 1 & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 255)
}, function(a) {
    var c = a.memoryReader[a.registersHL](a, a.registersHL);
    a.FCarry = 127 < c;
    c = c << 1 & 255;
    a.memoryWriter[a.registersHL](a, a.registersHL, c);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == c
}, function(a) {
    a.FCarry = 127 < a.registerA;
    a.registerA = a.registerA <<
        1 & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerA
}, function(a) {
    a.FCarry = 1 == (a.registerB & 1);
    a.registerB = a.registerB & 128 | a.registerB >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerB
}, function(a) {
    a.FCarry = 1 == (a.registerC & 1);
    a.registerC = a.registerC & 128 | a.registerC >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerC
}, function(a) {
    a.FCarry = 1 == (a.registerD & 1);
    a.registerD = a.registerD & 128 | a.registerD >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerD
}, function(a) {
    a.FCarry = 1 == (a.registerE & 1);
    a.registerE = a.registerE & 128 | a.registerE >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerE
}, function(a) {
    a.FCarry = 256 == (a.registersHL & 256);
    a.registersHL = a.registersHL >> 1 & 65280 | a.registersHL & 33023;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 256 > a.registersHL
}, function(a) {
    a.FCarry = 1 == (a.registersHL & 1);
    a.registersHL = a.registersHL & 65408 | (a.registersHL & 255) >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 255)
}, function(a) {
    var c = a.memoryReader[a.registersHL](a, a.registersHL);
    a.FCarry = 1 == (c & 1);
    c = c & 128 |
        c >> 1;
    a.memoryWriter[a.registersHL](a, a.registersHL, c);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == c
}, function(a) {
    a.FCarry = 1 == (a.registerA & 1);
    a.registerA = a.registerA & 128 | a.registerA >> 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerA
}, function(a) {
    a.registerB = (a.registerB & 15) << 4 | a.registerB >> 4;
    a.FZero = 0 == a.registerB;
    a.FCarry = a.FHalfCarry = a.FSubtract = !1
}, function(a) {
    a.registerC = (a.registerC & 15) << 4 | a.registerC >> 4;
    a.FZero = 0 == a.registerC;
    a.FCarry = a.FHalfCarry = a.FSubtract = !1
}, function(a) {
    a.registerD = (a.registerD &
        15) << 4 | a.registerD >> 4;
    a.FZero = 0 == a.registerD;
    a.FCarry = a.FHalfCarry = a.FSubtract = !1
}, function(a) {
    a.registerE = (a.registerE & 15) << 4 | a.registerE >> 4;
    a.FZero = 0 == a.registerE;
    a.FCarry = a.FHalfCarry = a.FSubtract = !1
}, function(a) {
    a.registersHL = (a.registersHL & 3840) << 4 | (a.registersHL & 61440) >> 4 | a.registersHL & 255;
    a.FZero = 256 > a.registersHL;
    a.FCarry = a.FHalfCarry = a.FSubtract = !1
}, function(a) {
    a.registersHL = a.registersHL & 65280 | (a.registersHL & 15) << 4 | (a.registersHL & 240) >> 4;
    a.FZero = 0 == (a.registersHL & 255);
    a.FCarry = a.FHalfCarry =
        a.FSubtract = !1
}, function(a) {
    var c = a.memoryReader[a.registersHL](a, a.registersHL),
        c = (c & 15) << 4 | c >> 4;
    a.memoryWriter[a.registersHL](a, a.registersHL, c);
    a.FZero = 0 == c;
    a.FCarry = a.FHalfCarry = a.FSubtract = !1
}, function(a) {
    a.registerA = (a.registerA & 15) << 4 | a.registerA >> 4;
    a.FZero = 0 == a.registerA;
    a.FCarry = a.FHalfCarry = a.FSubtract = !1
}, function(a) {
    a.FCarry = 1 == (a.registerB & 1);
    a.registerB >>= 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerB
}, function(a) {
    a.FCarry = 1 == (a.registerC & 1);
    a.registerC >>= 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerC
}, function(a) {
    a.FCarry = 1 == (a.registerD & 1);
    a.registerD >>= 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerD
}, function(a) {
    a.FCarry = 1 == (a.registerE & 1);
    a.registerE >>= 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerE
}, function(a) {
    a.FCarry = 256 == (a.registersHL & 256);
    a.registersHL = a.registersHL >> 1 & 65280 | a.registersHL & 255;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 256 > a.registersHL
}, function(a) {
    a.FCarry = 1 == (a.registersHL & 1);
    a.registersHL = a.registersHL & 65280 | (a.registersHL & 255) >> 1;
    a.FHalfCarry =
        a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 255)
}, function(a) {
    var c = a.memoryReader[a.registersHL](a, a.registersHL);
    a.FCarry = 1 == (c & 1);
    a.memoryWriter[a.registersHL](a, a.registersHL, c >> 1);
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 2 > c
}, function(a) {
    a.FCarry = 1 == (a.registerA & 1);
    a.registerA >>= 1;
    a.FHalfCarry = a.FSubtract = !1;
    a.FZero = 0 == a.registerA
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerB & 1)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerC & 1)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerD & 1)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerE & 1)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 256)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 1)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.memoryReader[a.registersHL](a, a.registersHL) & 1)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerA & 1)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerB &
        2)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerC & 2)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerD & 2)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerE & 2)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 512)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 2)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.memoryReader[a.registersHL](a, a.registersHL) & 2)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerA & 2)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerB & 4)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerC & 4)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerD & 4)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerE & 4)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 1024)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 4)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.memoryReader[a.registersHL](a, a.registersHL) & 4)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerA & 4)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerB & 8)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerC & 8)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerD & 8)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerE & 8)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 2048)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 8)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.memoryReader[a.registersHL](a, a.registersHL) & 8)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerA & 8)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerB & 16)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerC & 16)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerD & 16)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerE &
        16)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 4096)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 16)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.memoryReader[a.registersHL](a, a.registersHL) & 16)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerA & 16)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerB & 32)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerC & 32)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerD & 32)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerE & 32)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 8192)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 32)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.memoryReader[a.registersHL](a, a.registersHL) & 32)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerA & 32)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 ==
        (a.registerB & 64)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerC & 64)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerD & 64)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerE & 64)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 16384)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 64)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.memoryReader[a.registersHL](a, a.registersHL) & 64)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerA & 64)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerB & 128)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerC & 128)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerD & 128)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerE & 128)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 32768)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registersHL & 128)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.memoryReader[a.registersHL](a, a.registersHL) & 128)
}, function(a) {
    a.FHalfCarry = !0;
    a.FSubtract = !1;
    a.FZero = 0 == (a.registerA & 128)
}, function(a) {
    a.registerB &= 254
}, function(a) {
    a.registerC &= 254
}, function(a) {
    a.registerD &= 254
}, function(a) {
    a.registerE &= 254
}, function(a) {
    a.registersHL &= 65279
}, function(a) {
    a.registersHL &= 65534
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) & 254)
}, function(a) {
    a.registerA &= 254
}, function(a) {
    a.registerB &=
        253
}, function(a) {
    a.registerC &= 253
}, function(a) {
    a.registerD &= 253
}, function(a) {
    a.registerE &= 253
}, function(a) {
    a.registersHL &= 65023
}, function(a) {
    a.registersHL &= 65533
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) & 253)
}, function(a) {
    a.registerA &= 253
}, function(a) {
    a.registerB &= 251
}, function(a) {
    a.registerC &= 251
}, function(a) {
    a.registerD &= 251
}, function(a) {
    a.registerE &= 251
}, function(a) {
    a.registersHL &= 64511
}, function(a) {
    a.registersHL &= 65531
}, function(a) {
    a.memoryWriter[a.registersHL](a,
        a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) & 251)
}, function(a) {
    a.registerA &= 251
}, function(a) {
    a.registerB &= 247
}, function(a) {
    a.registerC &= 247
}, function(a) {
    a.registerD &= 247
}, function(a) {
    a.registerE &= 247
}, function(a) {
    a.registersHL &= 63487
}, function(a) {
    a.registersHL &= 65527
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) & 247)
}, function(a) {
    a.registerA &= 247
}, function(a) {
    a.registerB &= 239
}, function(a) {
    a.registerC &= 239
}, function(a) {
    a.registerD &=
        239
}, function(a) {
    a.registerE &= 239
}, function(a) {
    a.registersHL &= 61439
}, function(a) {
    a.registersHL &= 65519
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) & 239)
}, function(a) {
    a.registerA &= 239
}, function(a) {
    a.registerB &= 223
}, function(a) {
    a.registerC &= 223
}, function(a) {
    a.registerD &= 223
}, function(a) {
    a.registerE &= 223
}, function(a) {
    a.registersHL &= 57343
}, function(a) {
    a.registersHL &= 65503
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a,
        a.registersHL) & 223)
}, function(a) {
    a.registerA &= 223
}, function(a) {
    a.registerB &= 191
}, function(a) {
    a.registerC &= 191
}, function(a) {
    a.registerD &= 191
}, function(a) {
    a.registerE &= 191
}, function(a) {
    a.registersHL &= 49151
}, function(a) {
    a.registersHL &= 65471
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) & 191)
}, function(a) {
    a.registerA &= 191
}, function(a) {
    a.registerB &= 127
}, function(a) {
    a.registerC &= 127
}, function(a) {
    a.registerD &= 127
}, function(a) {
    a.registerE &= 127
}, function(a) {
    a.registersHL &=
        32767
}, function(a) {
    a.registersHL &= 65407
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) & 127)
}, function(a) {
    a.registerA &= 127
}, function(a) {
    a.registerB |= 1
}, function(a) {
    a.registerC |= 1
}, function(a) {
    a.registerD |= 1
}, function(a) {
    a.registerE |= 1
}, function(a) {
    a.registersHL |= 256
}, function(a) {
    a.registersHL |= 1
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) | 1)
}, function(a) {
    a.registerA |= 1
}, function(a) {
    a.registerB |=
        2
}, function(a) {
    a.registerC |= 2
}, function(a) {
    a.registerD |= 2
}, function(a) {
    a.registerE |= 2
}, function(a) {
    a.registersHL |= 512
}, function(a) {
    a.registersHL |= 2
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) | 2)
}, function(a) {
    a.registerA |= 2
}, function(a) {
    a.registerB |= 4
}, function(a) {
    a.registerC |= 4
}, function(a) {
    a.registerD |= 4
}, function(a) {
    a.registerE |= 4
}, function(a) {
    a.registersHL |= 1024
}, function(a) {
    a.registersHL |= 4
}, function(a) {
    a.memoryWriter[a.registersHL](a,
        a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) | 4)
}, function(a) {
    a.registerA |= 4
}, function(a) {
    a.registerB |= 8
}, function(a) {
    a.registerC |= 8
}, function(a) {
    a.registerD |= 8
}, function(a) {
    a.registerE |= 8
}, function(a) {
    a.registersHL |= 2048
}, function(a) {
    a.registersHL |= 8
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) | 8)
}, function(a) {
    a.registerA |= 8
}, function(a) {
    a.registerB |= 16
}, function(a) {
    a.registerC |= 16
}, function(a) {
    a.registerD |= 16
}, function(a) {
    a.registerE |=
        16
}, function(a) {
    a.registersHL |= 4096
}, function(a) {
    a.registersHL |= 16
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) | 16)
}, function(a) {
    a.registerA |= 16
}, function(a) {
    a.registerB |= 32
}, function(a) {
    a.registerC |= 32
}, function(a) {
    a.registerD |= 32
}, function(a) {
    a.registerE |= 32
}, function(a) {
    a.registersHL |= 8192
}, function(a) {
    a.registersHL |= 32
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) | 32)
}, function(a) {
    a.registerA |=
        32
}, function(a) {
    a.registerB |= 64
}, function(a) {
    a.registerC |= 64
}, function(a) {
    a.registerD |= 64
}, function(a) {
    a.registerE |= 64
}, function(a) {
    a.registersHL |= 16384
}, function(a) {
    a.registersHL |= 64
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) | 64)
}, function(a) {
    a.registerA |= 64
}, function(a) {
    a.registerB |= 128
}, function(a) {
    a.registerC |= 128
}, function(a) {
    a.registerD |= 128
}, function(a) {
    a.registerE |= 128
}, function(a) {
    a.registersHL |= 32768
}, function(a) {
    a.registersHL |=
        128
}, function(a) {
    a.memoryWriter[a.registersHL](a, a.registersHL, a.memoryReader[a.registersHL](a, a.registersHL) | 128)
}, function(a) {
    a.registerA |= 128
}];
GameBoyCore.prototype.TICKTable = [4, 12, 8, 8, 4, 4, 8, 4, 20, 8, 8, 8, 4, 4, 8, 4, 4, 12, 8, 8, 4, 4, 8, 4, 12, 8, 8, 8, 4, 4, 8, 4, 8, 12, 8, 8, 4, 4, 8, 4, 8, 8, 8, 8, 4, 4, 8, 4, 8, 12, 8, 8, 12, 12, 12, 4, 8, 8, 8, 8, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 8, 8, 8, 8, 8, 8, 4, 8, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 8, 4, 8, 12, 12, 16, 12, 16, 8, 16, 8, 16, 12, 0, 12, 24, 8, 16, 8, 12, 12, 4, 12, 16, 8, 16, 8, 16, 12, 4, 12,
    4, 8, 16, 12, 12, 8, 4, 4, 16, 8, 16, 16, 4, 16, 4, 4, 4, 8, 16, 12, 12, 8, 4, 4, 16, 8, 16, 12, 8, 16, 4, 0, 4, 8, 16
];
GameBoyCore.prototype.SecondaryTICKTable = [8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 12, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8,
    8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8, 8, 8, 8, 8, 8, 8, 16, 8
];
GameBoyCore.prototype.saveSRAMState = function() {
    return this.cBATT && 0 != this.MBCRam.length ? this.fromTypedArray(this.MBCRam) : []
};
GameBoyCore.prototype.saveRTCState = function() {
    return this.cTIMER ? [this.lastIteration, this.RTCisLatched, this.latchedSeconds, this.latchedMinutes, this.latchedHours, this.latchedLDays, this.latchedHDays, this.RTCSeconds, this.RTCMinutes, this.RTCHours, this.RTCDays, this.RTCDayOverFlow, this.RTCHALT] : []
};
GameBoyCore.prototype.saveState = function() {
    return [this.fromTypedArray(this.ROM), this.inBootstrap, this.registerA, this.FZero, this.FSubtract, this.FHalfCarry, this.FCarry, this.registerB, this.registerC, this.registerD, this.registerE, this.registersHL, this.stackPointer, this.programCounter, this.halt, this.IME, this.hdmaRunning, this.CPUTicks, this.doubleSpeedShifter, this.fromTypedArray(this.memory), this.fromTypedArray(this.MBCRam), this.fromTypedArray(this.VRAM), this.currVRAMBank, this.fromTypedArray(this.GBCMemory),
        this.MBC1Mode, this.MBCRAMBanksEnabled, this.currMBCRAMBank, this.currMBCRAMBankPosition, this.cGBC, this.gbcRamBank, this.gbcRamBankPosition, this.ROMBank1offs, this.currentROMBank, this.cartridgeType, this.name, this.gameCode, this.modeSTAT, this.LYCMatchTriggerSTAT, this.mode2TriggerSTAT, this.mode1TriggerSTAT, this.mode0TriggerSTAT, this.LCDisOn, this.gfxWindowCHRBankPosition, this.gfxWindowDisplay, this.gfxSpriteShow, this.gfxSpriteNormalHeight, this.gfxBackgroundCHRBankPosition, this.gfxBackgroundBankOffset, this.TIMAEnabled,
        this.DIVTicks, this.LCDTicks, this.timerTicks, this.TACClocker, this.serialTimer, this.serialShiftTimer, this.serialShiftTimerAllocated, this.IRQEnableDelay, this.lastIteration, this.cMBC1, this.cMBC2, this.cMBC3, this.cMBC5, this.cMBC7, this.cSRAM, this.cMMMO1, this.cRUMBLE, this.cCamera, this.cTAMA5, this.cHuC3, this.cHuC1, this.drewBlank, this.fromTypedArray(this.frameBuffer), this.bgEnabled, this.BGPriorityEnabled, this.channel1FrequencyTracker, this.channel1FrequencyCounter, this.channel1totalLength, this.channel1envelopeVolume,
        this.channel1envelopeType, this.channel1envelopeSweeps, this.channel1envelopeSweepsLast, this.channel1consecutive, this.channel1frequency, this.channel1SweepFault, this.channel1ShadowFrequency, this.channel1timeSweep, this.channel1lastTimeSweep, this.channel1numSweep, this.channel1frequencySweepDivider, this.channel1decreaseSweep, this.channel2FrequencyTracker, this.channel2FrequencyCounter, this.channel2totalLength, this.channel2envelopeVolume, this.channel2envelopeType, this.channel2envelopeSweeps, this.channel2envelopeSweepsLast,
        this.channel2consecutive, this.channel2frequency, this.channel3canPlay, this.channel3totalLength, this.channel3patternType, this.channel3frequency, this.channel3consecutive, this.fromTypedArray(this.channel3PCM), this.channel4FrequencyPeriod, this.channel4lastSampleLookup, this.channel4totalLength, this.channel4envelopeVolume, this.channel4currentVolume, this.channel4envelopeType, this.channel4envelopeSweeps, this.channel4envelopeSweepsLast, this.channel4consecutive, this.channel4BitRange, this.soundMasterEnabled,
        this.VinLeftChannelMasterVolume, this.VinRightChannelMasterVolume, this.leftChannel1, this.leftChannel2, this.leftChannel3, this.leftChannel4, this.rightChannel1, this.rightChannel2, this.rightChannel3, this.rightChannel4, this.channel1currentSampleLeft, this.channel1currentSampleRight, this.channel2currentSampleLeft, this.channel2currentSampleRight, this.channel3currentSampleLeft, this.channel3currentSampleRight, this.channel4currentSampleLeft, this.channel4currentSampleRight, this.channel1currentSampleLeftSecondary,
        this.channel1currentSampleRightSecondary, this.channel2currentSampleLeftSecondary, this.channel2currentSampleRightSecondary, this.channel3currentSampleLeftSecondary, this.channel3currentSampleRightSecondary, this.channel4currentSampleLeftSecondary, this.channel4currentSampleRightSecondary, this.channel1currentSampleLeftTrimary, this.channel1currentSampleRightTrimary, this.channel2currentSampleLeftTrimary, this.channel2currentSampleRightTrimary, this.mixerOutputCache, this.channel1DutyTracker, this.channel1CachedDuty,
        this.channel2DutyTracker, this.channel2CachedDuty, this.channel1Enabled, this.channel2Enabled, this.channel3Enabled, this.channel4Enabled, this.sequencerClocks, this.sequencePosition, this.channel3Counter, this.channel4Counter, this.cachedChannel3Sample, this.cachedChannel4Sample, this.channel3FrequencyPeriod, this.channel3lastSampleLookup, this.actualScanLine, this.lastUnrenderedLine, this.queuedScanLines, this.RTCisLatched, this.latchedSeconds, this.latchedMinutes, this.latchedHours, this.latchedLDays, this.latchedHDays,
        this.RTCSeconds, this.RTCMinutes, this.RTCHours, this.RTCDays, this.RTCDayOverFlow, this.RTCHALT, this.usedBootROM, this.skipPCIncrement, this.STATTracker, this.gbcRamBankPositionECHO, this.numRAMBanks, this.windowY, this.windowX, this.fromTypedArray(this.gbcOBJRawPalette), this.fromTypedArray(this.gbcBGRawPalette), this.fromTypedArray(this.gbOBJPalette), this.fromTypedArray(this.gbBGPalette), this.fromTypedArray(this.gbcOBJPalette), this.fromTypedArray(this.gbcBGPalette), this.fromTypedArray(this.gbBGColorizedPalette),
        this.fromTypedArray(this.gbOBJColorizedPalette), this.fromTypedArray(this.cachedBGPaletteConversion), this.fromTypedArray(this.cachedOBJPaletteConversion), this.fromTypedArray(this.BGCHRBank1), this.fromTypedArray(this.BGCHRBank2), this.haltPostClocks, this.interruptsRequested, this.interruptsEnabled, this.remainingClocks, this.colorizedGBPalettes, this.backgroundY, this.backgroundX, this.CPUStopped
    ]
};
GameBoyCore.prototype.returnFromState = function(a) {
    var c = 0;
    a = a.slice(0);
    this.ROM = this.toTypedArray(a[c++], "uint8");
    this.ROMBankEdge = Math.floor(this.ROM.length / 16384);
    this.inBootstrap = a[c++];
    this.registerA = a[c++];
    this.FZero = a[c++];
    this.FSubtract = a[c++];
    this.FHalfCarry = a[c++];
    this.FCarry = a[c++];
    this.registerB = a[c++];
    this.registerC = a[c++];
    this.registerD = a[c++];
    this.registerE = a[c++];
    this.registersHL = a[c++];
    this.stackPointer = a[c++];
    this.programCounter = a[c++];
    this.halt = a[c++];
    this.IME = a[c++];
    this.hdmaRunning =
        a[c++];
    this.CPUTicks = a[c++];
    this.doubleSpeedShifter = a[c++];
    this.memory = this.toTypedArray(a[c++], "uint8");
    this.MBCRam = this.toTypedArray(a[c++], "uint8");
    this.VRAM = this.toTypedArray(a[c++], "uint8");
    this.currVRAMBank = a[c++];
    this.GBCMemory = this.toTypedArray(a[c++], "uint8");
    this.MBC1Mode = a[c++];
    this.MBCRAMBanksEnabled = a[c++];
    this.currMBCRAMBank = a[c++];
    this.currMBCRAMBankPosition = a[c++];
    this.cGBC = a[c++];
    this.gbcRamBank = a[c++];
    this.gbcRamBankPosition = a[c++];
    this.ROMBank1offs = a[c++];
    this.currentROMBank = a[c++];
    this.cartridgeType = a[c++];
    this.name = a[c++];
    this.gameCode = a[c++];
    this.modeSTAT = a[c++];
    this.LYCMatchTriggerSTAT = a[c++];
    this.mode2TriggerSTAT = a[c++];
    this.mode1TriggerSTAT = a[c++];
    this.mode0TriggerSTAT = a[c++];
    this.LCDisOn = a[c++];
    this.gfxWindowCHRBankPosition = a[c++];
    this.gfxWindowDisplay = a[c++];
    this.gfxSpriteShow = a[c++];
    this.gfxSpriteNormalHeight = a[c++];
    this.gfxBackgroundCHRBankPosition = a[c++];
    this.gfxBackgroundBankOffset = a[c++];
    this.TIMAEnabled = a[c++];
    this.DIVTicks = a[c++];
    this.LCDTicks = a[c++];
    this.timerTicks =
        a[c++];
    this.TACClocker = a[c++];
    this.serialTimer = a[c++];
    this.serialShiftTimer = a[c++];
    this.serialShiftTimerAllocated = a[c++];
    this.IRQEnableDelay = a[c++];
    this.lastIteration = a[c++];
    this.cMBC1 = a[c++];
    this.cMBC2 = a[c++];
    this.cMBC3 = a[c++];
    this.cMBC5 = a[c++];
    this.cMBC7 = a[c++];
    this.cSRAM = a[c++];
    this.cMMMO1 = a[c++];
    this.cRUMBLE = a[c++];
    this.cCamera = a[c++];
    this.cTAMA5 = a[c++];
    this.cHuC3 = a[c++];
    this.cHuC1 = a[c++];
    this.drewBlank = a[c++];
    this.frameBuffer = this.toTypedArray(a[c++], "int32");
    this.bgEnabled = a[c++];
    this.BGPriorityEnabled =
        a[c++];
    this.channel1FrequencyTracker = a[c++];
    this.channel1FrequencyCounter = a[c++];
    this.channel1totalLength = a[c++];
    this.channel1envelopeVolume = a[c++];
    this.channel1envelopeType = a[c++];
    this.channel1envelopeSweeps = a[c++];
    this.channel1envelopeSweepsLast = a[c++];
    this.channel1consecutive = a[c++];
    this.channel1frequency = a[c++];
    this.channel1SweepFault = a[c++];
    this.channel1ShadowFrequency = a[c++];
    this.channel1timeSweep = a[c++];
    this.channel1lastTimeSweep = a[c++];
    this.channel1numSweep = a[c++];
    this.channel1frequencySweepDivider =
        a[c++];
    this.channel1decreaseSweep = a[c++];
    this.channel2FrequencyTracker = a[c++];
    this.channel2FrequencyCounter = a[c++];
    this.channel2totalLength = a[c++];
    this.channel2envelopeVolume = a[c++];
    this.channel2envelopeType = a[c++];
    this.channel2envelopeSweeps = a[c++];
    this.channel2envelopeSweepsLast = a[c++];
    this.channel2consecutive = a[c++];
    this.channel2frequency = a[c++];
    this.channel3canPlay = a[c++];
    this.channel3totalLength = a[c++];
    this.channel3patternType = a[c++];
    this.channel3frequency = a[c++];
    this.channel3consecutive = a[c++];
    this.channel3PCM = this.toTypedArray(a[c++], "int8");
    this.channel4FrequencyPeriod = a[c++];
    this.channel4lastSampleLookup = a[c++];
    this.channel4totalLength = a[c++];
    this.channel4envelopeVolume = a[c++];
    this.channel4currentVolume = a[c++];
    this.channel4envelopeType = a[c++];
    this.channel4envelopeSweeps = a[c++];
    this.channel4envelopeSweepsLast = a[c++];
    this.channel4consecutive = a[c++];
    this.channel4BitRange = a[c++];
    this.soundMasterEnabled = a[c++];
    this.VinLeftChannelMasterVolume = a[c++];
    this.VinRightChannelMasterVolume = a[c++];
    this.leftChannel1 = a[c++];
    this.leftChannel2 = a[c++];
    this.leftChannel3 = a[c++];
    this.leftChannel4 = a[c++];
    this.rightChannel1 = a[c++];
    this.rightChannel2 = a[c++];
    this.rightChannel3 = a[c++];
    this.rightChannel4 = a[c++];
    this.channel1currentSampleLeft = a[c++];
    this.channel1currentSampleRight = a[c++];
    this.channel2currentSampleLeft = a[c++];
    this.channel2currentSampleRight = a[c++];
    this.channel3currentSampleLeft = a[c++];
    this.channel3currentSampleRight = a[c++];
    this.channel4currentSampleLeft = a[c++];
    this.channel4currentSampleRight =
        a[c++];
    this.channel1currentSampleLeftSecondary = a[c++];
    this.channel1currentSampleRightSecondary = a[c++];
    this.channel2currentSampleLeftSecondary = a[c++];
    this.channel2currentSampleRightSecondary = a[c++];
    this.channel3currentSampleLeftSecondary = a[c++];
    this.channel3currentSampleRightSecondary = a[c++];
    this.channel4currentSampleLeftSecondary = a[c++];
    this.channel4currentSampleRightSecondary = a[c++];
    this.channel1currentSampleLeftTrimary = a[c++];
    this.channel1currentSampleRightTrimary = a[c++];
    this.channel2currentSampleLeftTrimary =
        a[c++];
    this.channel2currentSampleRightTrimary = a[c++];
    this.mixerOutputCache = a[c++];
    this.channel1DutyTracker = a[c++];
    this.channel1CachedDuty = a[c++];
    this.channel2DutyTracker = a[c++];
    this.channel2CachedDuty = a[c++];
    this.channel1Enabled = a[c++];
    this.channel2Enabled = a[c++];
    this.channel3Enabled = a[c++];
    this.channel4Enabled = a[c++];
    this.sequencerClocks = a[c++];
    this.sequencePosition = a[c++];
    this.channel3Counter = a[c++];
    this.channel4Counter = a[c++];
    this.cachedChannel3Sample = a[c++];
    this.cachedChannel4Sample = a[c++];
    this.channel3FrequencyPeriod =
        a[c++];
    this.channel3lastSampleLookup = a[c++];
    this.actualScanLine = a[c++];
    this.lastUnrenderedLine = a[c++];
    this.queuedScanLines = a[c++];
    this.RTCisLatched = a[c++];
    this.latchedSeconds = a[c++];
    this.latchedMinutes = a[c++];
    this.latchedHours = a[c++];
    this.latchedLDays = a[c++];
    this.latchedHDays = a[c++];
    this.RTCSeconds = a[c++];
    this.RTCMinutes = a[c++];
    this.RTCHours = a[c++];
    this.RTCDays = a[c++];
    this.RTCDayOverFlow = a[c++];
    this.RTCHALT = a[c++];
    this.usedBootROM = a[c++];
    this.skipPCIncrement = a[c++];
    this.STATTracker = a[c++];
    this.gbcRamBankPositionECHO =
        a[c++];
    this.numRAMBanks = a[c++];
    this.windowY = a[c++];
    this.windowX = a[c++];
    this.gbcOBJRawPalette = this.toTypedArray(a[c++], "uint8");
    this.gbcBGRawPalette = this.toTypedArray(a[c++], "uint8");
    this.gbOBJPalette = this.toTypedArray(a[c++], "int32");
    this.gbBGPalette = this.toTypedArray(a[c++], "int32");
    this.gbcOBJPalette = this.toTypedArray(a[c++], "int32");
    this.gbcBGPalette = this.toTypedArray(a[c++], "int32");
    this.gbBGColorizedPalette = this.toTypedArray(a[c++], "int32");
    this.gbOBJColorizedPalette = this.toTypedArray(a[c++],
        "int32");
    this.cachedBGPaletteConversion = this.toTypedArray(a[c++], "int32");
    this.cachedOBJPaletteConversion = this.toTypedArray(a[c++], "int32");
    this.BGCHRBank1 = this.toTypedArray(a[c++], "uint8");
    this.BGCHRBank2 = this.toTypedArray(a[c++], "uint8");
    this.haltPostClocks = a[c++];
    this.interruptsRequested = a[c++];
    this.interruptsEnabled = a[c++];
    this.checkIRQMatching();
    this.remainingClocks = a[c++];
    this.colorizedGBPalettes = a[c++];
    this.backgroundY = a[c++];
    this.backgroundX = a[c++];
    this.CPUStopped = a[c];
    this.fromSaveState = !0;
    this.TICKTable = this.toTypedArray(this.TICKTable, "uint8");
    this.SecondaryTICKTable = this.toTypedArray(this.SecondaryTICKTable, "uint8");
    this.initializeReferencesFromSaveState();
    this.memoryReadJumpCompile();
    this.memoryWriteJumpCompile();
    this.initLCD();
    this.initSound();
    this.noiseSampleTable = 32767 == this.channel4BitRange ? this.LSFR15Table : this.LSFR7Table;
    this.channel4VolumeShifter = 32767 == this.channel4BitRange ? 15 : 7
};
GameBoyCore.prototype.returnFromRTCState = function() {
    if ("function" == typeof this.openRTC && this.cTIMER) {
        var a = this.openRTC(this.name),
            c = 0;
        this.lastIteration = a[c++];
        this.RTCisLatched = a[c++];
        this.latchedSeconds = a[c++];
        this.latchedMinutes = a[c++];
        this.latchedHours = a[c++];
        this.latchedLDays = a[c++];
        this.latchedHDays = a[c++];
        this.RTCSeconds = a[c++];
        this.RTCMinutes = a[c++];
        this.RTCHours = a[c++];
        this.RTCDays = a[c++];
        this.RTCDayOverFlow = a[c++];
        this.RTCHALT = a[c]
    }
};
GameBoyCore.prototype.start = function() {
    this.initMemory();
    this.ROMLoad();
    this.initLCD();
    this.initSound();
    this.run()
};
GameBoyCore.prototype.initMemory = function() {
    this.memory = this.getTypedArray(65536, 0, "uint8");
    this.frameBuffer = this.getTypedArray(23040, 16316664, "int32");
    this.BGCHRBank1 = this.getTypedArray(2048, 0, "uint8");
    this.TICKTable = this.toTypedArray(this.TICKTable, "uint8");
    this.SecondaryTICKTable = this.toTypedArray(this.SecondaryTICKTable, "uint8");
    this.channel3PCM = this.getTypedArray(32, 0, "int8")
};
GameBoyCore.prototype.generateCacheArray = function(a) {
    for (var c = [], b = 0; b < a;) c[b++] = this.getTypedArray(64, 0, "uint8");
    return c
};
GameBoyCore.prototype.initSkipBootstrap = function() {
    for (var a = 255; 0 <= a;) {
        if (48 <= a && 64 > a) this.memoryWrite(65280 | a, this.ffxxDump[a]);
        else switch (a) {
            case 0:
            case 1:
            case 2:
            case 5:
            case 7:
            case 15:
            case 255:
                this.memoryWrite(65280 | a, this.ffxxDump[a]);
                break;
            default:
                this.memory[65280 | a] = this.ffxxDump[a]
        }--a
    }
    this.cGBC ? (this.memory[65388] = 254, this.memory[65396] = 254) : (this.memory[65352] = 255, this.memory[65353] = 255, this.memory[65388] = 255, this.memory[65396] = 255);
    cout("Starting without the GBC boot ROM.", 0);
    this.registerA =
        this.cGBC ? 17 : 1;
    this.registerB = 0;
    this.registerC = 19;
    this.registerD = 0;
    this.registerE = 216;
    this.FZero = !0;
    this.FSubtract = !1;
    this.FCarry = this.FHalfCarry = !0;
    this.registersHL = 333;
    this.LCDCONTROL = this.LINECONTROL;
    this.IME = !1;
    this.IRQLineMatched = 0;
    this.interruptsRequested = 225;
    this.interruptsEnabled = 0;
    this.hdmaRunning = !1;
    this.CPUTicks = 12;
    this.STATTracker = 0;
    this.modeSTAT = 1;
    this.spriteCount = 252;
    this.mode0TriggerSTAT = this.mode1TriggerSTAT = this.mode2TriggerSTAT = this.LYCMatchTriggerSTAT = !1;
    this.LCDisOn = !0;
    this.channel1FrequencyTracker =
        8192;
    this.channel1DutyTracker = 0;
    this.channel1CachedDuty = this.dutyLookup[2];
    this.channel1envelopeVolume = this.channel1totalLength = 0;
    this.channel1envelopeType = !1;
    this.channel1envelopeSweepsLast = this.channel1envelopeSweeps = 0;
    this.channel1consecutive = !0;
    this.channel1frequency = 1985;
    this.channel1SweepFault = !0;
    this.channel1ShadowFrequency = 1985;
    this.channel1timeSweep = 1;
    this.channel1frequencySweepDivider = this.channel1numSweep = this.channel1lastTimeSweep = 0;
    this.channel1decreaseSweep = !1;
    this.channel2FrequencyTracker =
        8192;
    this.channel2DutyTracker = 0;
    this.channel2CachedDuty = this.dutyLookup[2];
    this.channel2envelopeVolume = this.channel2totalLength = 0;
    this.channel2envelopeType = !1;
    this.channel2envelopeSweepsLast = this.channel2envelopeSweeps = 0;
    this.channel2consecutive = !0;
    this.channel2frequency = 0;
    this.channel3canPlay = !1;
    this.channel3totalLength = 0;
    this.channel3patternType = 4;
    this.channel3frequency = 0;
    this.channel3consecutive = !0;
    this.channel4FrequencyPeriod = 8;
    this.channel4currentVolume = this.channel4envelopeVolume = this.channel4totalLength =
        0;
    this.channel4envelopeType = !1;
    this.channel4envelopeSweepsLast = this.channel4envelopeSweeps = 0;
    this.channel4consecutive = !0;
    this.channel4BitRange = 32767;
    this.channel4VolumeShifter = 15;
    this.channel2FrequencyCounter = this.channel1FrequencyCounter = 512;
    this.channel3FrequencyPeriod = this.channel3Counter = 2048;
    this.channel4lastSampleLookup = this.channel3lastSampleLookup = 0;
    this.VinRightChannelMasterVolume = this.VinLeftChannelMasterVolume = 1;
    this.rightChannel2 = this.rightChannel1 = this.leftChannel4 = this.leftChannel3 =
        this.leftChannel2 = this.leftChannel1 = this.soundMasterEnabled = !0;
    this.rightChannel4 = this.rightChannel3 = !1;
    this.DIVTicks = 27044;
    this.LCDTicks = 160;
    this.timerTicks = 0;
    this.TIMAEnabled = !1;
    this.TACClocker = 1024;
    this.IRQEnableDelay = this.serialShiftTimerAllocated = this.serialShiftTimer = this.serialTimer = 0;
    this.actualScanLine = 144;
    this.lastUnrenderedLine = 0;
    this.gfxSpriteShow = this.gfxWindowDisplay = !1;
    this.BGPriorityEnabled = this.bgEnabled = this.gfxSpriteNormalHeight = !0;
    this.drewBlank = this.windowX = this.windowY = this.gfxBackgroundBankOffset =
        this.gfxBackgroundCHRBankPosition = this.gfxWindowCHRBankPosition = 0;
    this.midScanlineOffset = -1;
    this.currentX = 0
};
GameBoyCore.prototype.initBootstrap = function() {
    cout("Starting the selected boot ROM.", 0);
    this.stackPointer = this.programCounter = 0;
    this.IME = !1;
    this.registerE = this.registerD = this.registerC = this.registerB = this.registerA = this.DIVTicks = this.LCDTicks = 0;
    this.FZero = this.FSubtract = this.FHalfCarry = this.FCarry = !1;
    this.registersHL = 0;
    this.rightChannel4 = this.rightChannel3 = this.rightChannel2 = this.rightChannel1 = this.leftChannel4 = this.leftChannel3 = this.leftChannel2 = this.leftChannel1 = !1;
    this.channel2frequency = this.channel1frequency =
        0;
    this.channel4consecutive = this.channel2consecutive = this.channel1consecutive = !1;
    this.VinRightChannelMasterVolume = this.VinLeftChannelMasterVolume = 8;
    this.memory[65280] = 15
};
GameBoyCore.prototype.ROMLoad = function() {
    this.ROM = [];
    this.usedBootROM = settings[1];
    var a = this.ROMImage.length;
    if (16384 > a) throw Error("ROM image size too small.");
    this.ROM = this.getTypedArray(a, 0, "uint8");
    var c = 0;
    if (this.usedBootROM)
        if (settings[11])
            for (; 256 > c; ++c) this.memory[c] = this.GBBOOTROM[c], this.ROM[c] = this.ROMImage.charCodeAt(c) & 255;
        else {
            for (; 256 > c; ++c) this.memory[c] = this.GBCBOOTROM[c], this.ROM[c] = this.ROMImage.charCodeAt(c) & 255;
            for (; 512 > c; ++c) this.memory[c] = this.ROM[c] = this.ROMImage.charCodeAt(c) &
                255;
            for (; 2304 > c; ++c) this.memory[c] = this.GBCBOOTROM[c - 256], this.ROM[c] = this.ROMImage.charCodeAt(c) & 255;
            this.usedGBCBootROM = !0
        }
    for (; 16384 > c; ++c) this.memory[c] = this.ROM[c] = this.ROMImage.charCodeAt(c) & 255;
    for (; c < a; ++c) this.ROM[c] = this.ROMImage.charCodeAt(c) & 255;
    this.ROMBankEdge = Math.floor(this.ROM.length / 16384);
    this.interpretCartridge();
    this.checkIRQMatching()
};
GameBoyCore.prototype.getROMImage = function() {
    if (0 < this.ROMImage.length) return this.ROMImage.length;
    for (var a = this.ROM.length, c = 0; c < a; c++) this.ROMImage += String.fromCharCode(this.ROM[c]);
    return this.ROMImage
};
GameBoyCore.prototype.interpretCartridge = function() {
    for (var a = 308; 319 > a; a++) 0 < this.ROMImage.charCodeAt(a) && (this.name += this.ROMImage[a]);
    for (a = 319; 323 > a; a++) 0 < this.ROMImage.charCodeAt(a) && (this.gameCode += this.ROMImage[a]);
    cout("Game Title: " + this.name + "[" + this.gameCode + "][" + this.ROMImage[323] + "]", 0);
    cout("Game Code: " + this.gameCode, 0);
    this.cartridgeType = this.ROM[327];
    cout("Cartridge type #" + this.cartridgeType, 0);
    switch (this.cartridgeType) {
        case 0:
            if (!settings[9]) {
                a = "ROM";
                break
            }
        case 1:
            this.cMBC1 = !0;
            a = "MBC1";
            break;
        case 2:
            this.cSRAM = this.cMBC1 = !0;
            a = "MBC1 + SRAM";
            break;
        case 3:
            this.cBATT = this.cSRAM = this.cMBC1 = !0;
            a = "MBC1 + SRAM + BATT";
            break;
        case 5:
            this.cMBC2 = !0;
            a = "MBC2";
            break;
        case 6:
            this.cBATT = this.cMBC2 = !0;
            a = "MBC2 + BATT";
            break;
        case 8:
            this.cSRAM = !0;
            a = "ROM + SRAM";
            break;
        case 9:
            this.cBATT = this.cSRAM = !0;
            a = "ROM + SRAM + BATT";
            break;
        case 11:
            this.cMMMO1 = !0;
            a = "MMMO1";
            break;
        case 12:
            this.cSRAM = this.cMMMO1 = !0;
            a = "MMMO1 + SRAM";
            break;
        case 13:
            this.cBATT = this.cSRAM = this.cMMMO1 = !0;
            a = "MMMO1 + SRAM + BATT";
            break;
        case 15:
            this.cBATT = this.cTIMER = this.cMBC3 = !0;
            a = "MBC3 + TIMER + BATT";
            break;
        case 16:
            this.cSRAM = this.cBATT = this.cTIMER = this.cMBC3 = !0;
            a = "MBC3 + TIMER + BATT + SRAM";
            break;
        case 17:
            this.cMBC3 = !0;
            a = "MBC3";
            break;
        case 18:
            this.cSRAM = this.cMBC3 = !0;
            a = "MBC3 + SRAM";
            break;
        case 19:
            this.cBATT = this.cSRAM = this.cMBC3 = !0;
            a = "MBC3 + SRAM + BATT";
            break;
        case 25:
            this.cMBC5 = !0;
            a = "MBC5";
            break;
        case 26:
            this.cSRAM = this.cMBC5 = !0;
            a = "MBC5 + SRAM";
            break;
        case 27:
            this.cBATT = this.cSRAM = this.cMBC5 = !0;
            a = "MBC5 + SRAM + BATT";
            break;
        case 28:
            this.cRUMBLE = !0;
            a = "RUMBLE";
            break;
        case 29:
            this.cSRAM = this.cRUMBLE = !0;
            a = "RUMBLE + SRAM";
            break;
        case 30:
            this.cBATT = this.cSRAM = this.cRUMBLE = !0;
            a = "RUMBLE + SRAM + BATT";
            break;
        case 31:
            this.cCamera = !0;
            a = "GameBoy Camera";
            break;
        case 34:
            this.cBATT = this.cSRAM = this.cMBC7 = !0;
            a = "MBC7 + SRAM + BATT";
            break;
        case 253:
            this.cTAMA5 = !0;
            a = "TAMA5";
            break;
        case 254:
            this.cHuC3 = !0;
            a = "HuC3";
            break;
        case 255:
            this.cHuC1 = !0;
            a = "HuC1";
            break;
        default:
            a = "Unknown", cout("Cartridge type is unknown.", 2), pause()
    }
    cout("Cartridge Type: " + a + ".", 0);
    this.numROMBanks =
        this.ROMBanks[this.ROM[328]];
    cout(this.numROMBanks + " ROM banks.", 0);
    switch (this.RAMBanks[this.ROM[329]]) {
        case 0:
            cout("No RAM banking requested for allocation or MBC is of type 2.", 0);
            break;
        case 2:
            cout("1 RAM bank requested for allocation.", 0);
            break;
        case 3:
            cout("4 RAM banks requested for allocation.", 0);
            break;
        case 4:
            cout("16 RAM banks requested for allocation.", 0);
            break;
        default:
            cout("RAM bank amount requested is unknown, will use maximum allowed by specified MBC type.", 0)
    }
    if (this.usedBootROM) this.cGBC =
        this.usedGBCBootROM, this.setupRAM(), this.initBootstrap();
    else {
        switch (this.ROM[323]) {
            case 0:
                this.cGBC = !1;
                cout("Only GB mode detected.", 0);
                break;
            case 50:
                settings[2] || "Game and Watch 50" != this.name + this.gameCode + this.ROM[323] ? this.cGBC = !1 : (this.cGBC = !0, cout("Created a boot exception for Game and Watch Gallery 2 (GBC ID byte is wrong on the cartridge).", 1));
                break;
            case 128:
                this.cGBC = !settings[2];
                cout("GB and GBC mode detected.", 0);
                break;
            case 192:
                this.cGBC = !0;
                cout("Only GBC mode detected.", 0);
                break;
            default:
                this.cGBC = !1, cout("Unknown GameBoy game type code #" + this.ROM[323] + ", defaulting to GB mode (Old games don't have a type code).", 1)
        }
        this.inBootstrap = !1;
        this.setupRAM();
        this.initSkipBootstrap();
        this.initializeAudioStartState()
    }
    this.initializeModeSpecificArrays();
    var a = this.ROM[331],
        c = this.ROM[324] & 65280 | this.ROM[325] & 255;
    51 != a ? cout("Old style license code: " + a, 0) : cout("New style license code: " + c, 0);
    this.ROMImage = ""
};
GameBoyCore.prototype.disableBootROM = function() {
    for (var a = 0; 256 > a; ++a) this.memory[a] = this.ROM[a];
    if (this.usedGBCBootROM) {
        for (a = 512; 2304 > a; ++a) this.memory[a] = this.ROM[a];
        this.cGBC ? this.recompileBootIOWriteHandling() : this.GBCtoGBModeAdjust()
    } else this.recompileBootIOWriteHandling()
};
GameBoyCore.prototype.initializeTiming = function() {
    this.baseCPUCyclesPerIteration = 4194.304 * settings[6];
    this.CPUCyclesTotalRoundoff = this.baseCPUCyclesPerIteration % 4;
    this.CPUCyclesTotalBase = this.CPUCyclesTotal = this.baseCPUCyclesPerIteration - this.CPUCyclesTotalRoundoff | 0;
    this.CPUCyclesTotalCurrent = 0
};
GameBoyCore.prototype.setupRAM = function() {
    this.cMBC2 ? this.numRAMBanks = .0625 : this.cMBC1 || this.cRUMBLE || this.cMBC3 || this.cHuC3 ? this.numRAMBanks = 4 : this.cMBC5 ? this.numRAMBanks = 16 : this.cSRAM && (this.numRAMBanks = 1);
    if (0 < this.numRAMBanks) {
        this.MBCRAMUtilized() || (this.MBCRAMBanksEnabled = !0);
        var a = "function" == typeof this.openMBC ? this.openMBC(this.name) : [];
        this.MBCRam = 0 < a.length ? this.toTypedArray(a, "uint8") : this.getTypedArray(8192 * this.numRAMBanks, 0, "uint8")
    }
    cout("Actual bytes of MBC RAM allocated: " + 8192 * this.numRAMBanks,
        0);
    this.returnFromRTCState();
    this.cGBC && (this.VRAM = this.getTypedArray(8192, 0, "uint8"), this.GBCMemory = this.getTypedArray(28672, 0, "uint8"));
    this.memoryReadJumpCompile();
    this.memoryWriteJumpCompile()
};
GameBoyCore.prototype.MBCRAMUtilized = function() {
    return this.cMBC1 || this.cMBC2 || this.cMBC3 || this.cMBC5 || this.cMBC7 || this.cRUMBLE
};
GameBoyCore.prototype.recomputeDimension = function() {
    initNewCanvas();
    this.onscreenWidth = this.canvas.width;
    this.onscreenHeight = this.canvas.height;
    GameBoyWindow && GameBoyWindow.mozRequestAnimationFrame ? (this.canvas.width = this.onscreenWidth = settings[12] ? this.canvas.width : 160, this.canvas.height = this.onscreenHeight = settings[12] ? this.canvas.height : 144) : (this.onscreenWidth = this.canvas.width, this.onscreenHeight = this.canvas.height);
    this.offscreenWidth = settings[12] ? this.canvas.width : 160;
    this.offscreenHeight =
        settings[12] ? this.canvas.height : 144;
    this.offscreenRGBCount = this.offscreenWidth * this.offscreenHeight * 4
};
GameBoyCore.prototype.initLCD = function() {
    this.recomputeDimension();
    92160 != this.offscreenRGBCount ? this.compileResizeFrameBufferFunction() : this.resizer = null;
    try {
        this.canvasOffscreen = new GameBoyCanvas;
        this.canvasOffscreen.width = this.offscreenWidth;
        this.canvasOffscreen.height = this.offscreenHeight;
        this.drawContextOffscreen = this.canvasOffscreen.getContext("2d");
        this.drawContextOnscreen = this.canvas.getContext("2d");
        try {
            this.canvasBuffer = this.drawContextOffscreen.createImageData(this.offscreenWidth, this.offscreenHeight)
        } catch (c) {
            cout('Falling back to the getImageData initialization (Error "' +
                c.message + '").', 1), this.canvasBuffer = this.drawContextOffscreen.getImageData(0, 0, this.offscreenWidth, this.offscreenHeight)
        }
        for (var a = this.offscreenRGBCount; 0 < a;) this.canvasBuffer.data[a -= 4] = 248, this.canvasBuffer.data[a + 1] = 248, this.canvasBuffer.data[a + 2] = 248, this.canvasBuffer.data[a + 3] = 255;
        this.graphicsBlit();
        this.canvas.style.visibility = "visible";
        null == this.swizzledFrame && (this.swizzledFrame = this.getTypedArray(69120, 255, "uint8"));
        this.drewFrame = !0;
        this.requestDraw()
    } catch (c) {
        throw Error("HTML5 Canvas support required: " +
            c.message + "file: " + c.fileName + ", line: " + c.lineNumber);
    }
};
GameBoyCore.prototype.graphicsBlit = function() {
    this.offscreenWidth == this.onscreenWidth && this.offscreenHeight == this.onscreenHeight ? this.drawContextOnscreen.putImageData(this.canvasBuffer, 0, 0) : (this.drawContextOffscreen.putImageData(this.canvasBuffer, 0, 0), this.drawContextOnscreen.drawImage(this.canvasOffscreen, 0, 0, this.onscreenWidth, this.onscreenHeight))
};
GameBoyCore.prototype.JoyPadEvent = function(a, c) {
    c ? (this.JoyPad &= 255 ^ 1 << a, this.cGBC || this.usedBootROM && this.usedGBCBootROM || (this.interruptsRequested |= 16, this.remainingClocks = 0, this.checkIRQMatching())) : this.JoyPad |= 1 << a;
    this.memory[65280] = (this.memory[65280] & 48) + ((0 == (this.memory[65280] & 32) ? this.JoyPad >> 4 : 15) & (0 == (this.memory[65280] & 16) ? this.JoyPad & 15 : 15));
    this.CPUStopped = !1
};
GameBoyCore.prototype.GyroEvent = function(a, c) {
    a = -100 * a + 2047;
    this.highX = a >> 8;
    this.lowX = a & 255;
    c = -100 * c + 2047;
    this.highY = c >> 8;
    this.lowY = c & 255
};
GameBoyCore.prototype.initSound = function() {
    this.sampleSize = 4194.304 * settings[6];
    this.machineOut = settings[13];
    if (settings[0]) try {
        this.audioHandle = new XAudioServer(2, 4194304 / settings[13], 0, Math.max(this.sampleSize * settings[8] / settings[13], 8192) << 1, null, settings[14]), this.initAudioBuffer()
    } catch (a) {
        cout("Audio system cannot run: " + a.message, 2), settings[0] = !1
    } else if (this.audioHandle) try {
        this.audioHandle.changeVolume(0)
    } catch (a) {}
};
GameBoyCore.prototype.changeVolume = function() {
    if (settings[0] && this.audioHandle) try {
        this.audioHandle.changeVolume(settings[14])
    } catch (a) {}
};
GameBoyCore.prototype.initAudioBuffer = function() {
    this.audioIndex = 0;
    this.bufferContainAmount = Math.max(this.sampleSize * settings[7] / settings[13], 4096) << 1;
    this.numSamplesTotal = this.sampleSize - this.sampleSize % settings[13] | 0;
    this.currentBuffer = this.getTypedArray(this.numSamplesTotal, 61680, "int32");
    this.secondaryBuffer = this.getTypedArray((this.numSamplesTotal << 1) / settings[13], 0, "float32")
};
GameBoyCore.prototype.intializeWhiteNoise = function() {
    var a;
    this.LSFR15Table = this.getTypedArray(524288, 0, "int8");
    for (var c = 32767, b = 0; 32768 > b; ++b) {
        a = 1 - (c & 1);
        this.LSFR15Table[32768 | b] = a;
        this.LSFR15Table[65536 | b] = 2 * a;
        this.LSFR15Table[98304 | b] = 3 * a;
        this.LSFR15Table[131072 | b] = 4 * a;
        this.LSFR15Table[163840 | b] = 5 * a;
        this.LSFR15Table[196608 | b] = 6 * a;
        this.LSFR15Table[229376 | b] = 7 * a;
        this.LSFR15Table[262144 | b] = 8 * a;
        this.LSFR15Table[294912 | b] = 9 * a;
        this.LSFR15Table[327680 | b] = 10 * a;
        this.LSFR15Table[360448 | b] = 11 * a;
        this.LSFR15Table[393216 | b] = 12 * a;
        this.LSFR15Table[425984 | b] = 13 * a;
        this.LSFR15Table[458752 | b] = 14 * a;
        this.LSFR15Table[491520 | b] = 15 * a;
        a = c >> 1;
        c = a | ((a ^ c) & 1) << 14;
    }
    this.LSFR7Table = this.getTypedArray(2048, 0, "int8");
    c = 127;
    for (b = 0; 128 > b; ++b) a = 1 - (c & 1), this.LSFR7Table[128 | b] = a, this.LSFR7Table[256 | b] = 2 * a, this.LSFR7Table[384 | b] = 3 * a, this.LSFR7Table[512 | b] = 4 * a, this.LSFR7Table[640 | b] = 5 * a, this.LSFR7Table[768 | b] = 6 * a, this.LSFR7Table[896 | b] = 7 * a, this.LSFR7Table[1024 | b] = 8 * a, this.LSFR7Table[1152 | b] = 9 * a, this.LSFR7Table[1280 | b] = 10 * a, this.LSFR7Table[1408 |
        b] = 11 * a, this.LSFR7Table[1536 | b] = 12 * a, this.LSFR7Table[1664 | b] = 13 * a, this.LSFR7Table[1792 | b] = 14 * a, this.LSFR7Table[1920 | b] = 15 * a, a = c >> 1, c = a | ((a ^ c) & 1) << 6;
    this.noiseSampleTable || 65536 != this.memory.length || (this.noiseSampleTable = 8 == (this.memory[65314] & 8) ? this.LSFR7Table : this.LSFR15Table)
};
GameBoyCore.prototype.audioUnderrunAdjustment = function() {
    if (settings[0]) {
        var a = this.bufferContainAmount - this.audioHandle.remainingBuffer();
        0 < a && (this.CPUCyclesTotalCurrent += (a >> 1) * this.machineOut, this.recalculateIterationClockLimit())
    }
};
GameBoyCore.prototype.initializeAudioStartState = function() {
    this.channel1FrequencyTracker = 8192;
    this.channel1DutyTracker = 0;
    this.channel1CachedDuty = this.dutyLookup[2];
    this.channel1envelopeVolume = this.channel1totalLength = 0;
    this.channel1envelopeType = !1;
    this.channel1envelopeSweepsLast = this.channel1envelopeSweeps = 0;
    this.channel1consecutive = !0;
    this.channel1frequency = 0;
    this.channel1SweepFault = !1;
    this.channel1ShadowFrequency = 0;
    this.channel1timeSweep = 1;
    this.channel1frequencySweepDivider = this.channel1numSweep =
        this.channel1lastTimeSweep = 0;
    this.channel1decreaseSweep = !1;
    this.channel2FrequencyTracker = 8192;
    this.channel2DutyTracker = 0;
    this.channel2CachedDuty = this.dutyLookup[2];
    this.channel2envelopeVolume = this.channel2totalLength = 0;
    this.channel2envelopeType = !1;
    this.channel2envelopeSweepsLast = this.channel2envelopeSweeps = 0;
    this.channel2consecutive = !0;
    this.channel2frequency = 0;
    this.channel3canPlay = !1;
    this.channel3totalLength = 0;
    this.channel3patternType = 4;
    this.channel3frequency = 0;
    this.channel3consecutive = !0;
    this.channel4currentVolume =
        this.channel4envelopeVolume = this.channel4totalLength = 0;
    this.channel4envelopeType = !1;
    this.channel4envelopeSweepsLast = this.channel4envelopeSweeps = 0;
    this.channel4consecutive = !0;
    this.channel4BitRange = 32767;
    this.noiseSampleTable = this.LSFR15Table;
    this.channel4VolumeShifter = 15;
    this.channel2FrequencyCounter = this.channel1FrequencyCounter = 8192;
    this.channel3FrequencyPeriod = this.channel3Counter = 2048;
    this.channel4lastSampleLookup = this.channel3lastSampleLookup = 0;
    this.VinRightChannelMasterVolume = this.VinLeftChannelMasterVolume =
        8;
    this.mixerOutputCache = 0;
    this.sequencerClocks = 8192;
    this.sequencePosition = 0;
    this.channel4Counter = this.channel4FrequencyPeriod = 8;
    this.cachedChannel4Sample = this.cachedChannel3Sample = 0;
    this.channel4canPlay = this.channel2canPlay = this.channel1canPlay = this.channel4Enabled = this.channel3Enabled = this.channel2Enabled = this.channel1Enabled = !1;
    this.channel1OutputLevelCache();
    this.channel2OutputLevelCache();
    this.channel3OutputLevelCache();
    this.channel4OutputLevelCache()
};
GameBoyCore.prototype.outputAudio = function() {
    for (var a, c, b, d, e = 0, f = settings[13], g = 240 * f, h = 0; h < this.numSamplesTotal;) {
        for (a = b = d = 0; a < f; ++a) c = this.currentBuffer[h++], b += c >> 9, d += c & 511;
        this.secondaryBuffer[e++] = b / g - 1;
        this.secondaryBuffer[e++] = d / g - 1
    }
    this.audioHandle.writeAudioNoCallback(this.secondaryBuffer)
};
GameBoyCore.prototype.generateAudio = function(a) {
    if (this.soundMasterEnabled && !this.CPUStopped)
        for (var c; 0 < a;) {
            c = a < this.sequencerClocks ? a : this.sequencerClocks;
            this.sequencerClocks -= c;
            for (a -= c; - 1 < --c;) this.computeAudioChannels(), this.currentBuffer[this.audioIndex++] = this.mixerOutputCache, this.audioIndex == this.numSamplesTotal && (this.audioIndex = 0, this.outputAudio());
            0 == this.sequencerClocks && (this.audioComputeSequencer(), this.sequencerClocks = 8192)
        } else
            for (; - 1 < --a;) this.currentBuffer[this.audioIndex++] =
                61680, this.audioIndex == this.numSamplesTotal && (this.audioIndex = 0, this.outputAudio())
};
GameBoyCore.prototype.generateAudioFake = function(a) {
    if (this.soundMasterEnabled && !this.CPUStopped)
        for (; - 1 < --a;) this.computeAudioChannels(), 0 == --this.sequencerClocks && (this.audioComputeSequencer(), this.sequencerClocks = 8192)
};
GameBoyCore.prototype.audioJIT = function() {
    settings[0] ? this.generateAudio(this.audioTicks) : this.generateAudioFake(this.audioTicks);
    this.audioTicks = 0
};
GameBoyCore.prototype.audioComputeSequencer = function() {
    switch (this.sequencePosition++) {
        case 0:
            this.clockAudioLength();
            break;
        case 2:
            this.clockAudioLength();
            this.clockAudioSweep();
            break;
        case 4:
            this.clockAudioLength();
            break;
        case 6:
            this.clockAudioLength();
            this.clockAudioSweep();
            break;
        case 7:
            this.clockAudioEnvelope(), this.sequencePosition = 0
    }
};
GameBoyCore.prototype.clockAudioLength = function() {
    1 < this.channel1totalLength ? --this.channel1totalLength : 1 == this.channel1totalLength && (this.channel1totalLength = 0, this.channel1EnableCheck(), this.memory[65318] &= 254);
    1 < this.channel2totalLength ? --this.channel2totalLength : 1 == this.channel2totalLength && (this.channel2totalLength = 0, this.channel2EnableCheck(), this.memory[65318] &= 253);
    1 < this.channel3totalLength ? --this.channel3totalLength : 1 == this.channel3totalLength && (this.channel3totalLength = 0, this.channel3EnableCheck(),
        this.memory[65318] &= 251);
    1 < this.channel4totalLength ? --this.channel4totalLength : 1 == this.channel4totalLength && (this.channel4totalLength = 0, this.channel4EnableCheck(), this.memory[65318] &= 247)
};
GameBoyCore.prototype.clockAudioSweep = function() {
    !this.channel1SweepFault && 0 < this.channel1timeSweep && 0 == --this.channel1timeSweep && this.runAudioSweep()
};
GameBoyCore.prototype.runAudioSweep = function() {
    0 < this.channel1lastTimeSweep && (0 < this.channel1frequencySweepDivider ? (0 < this.channel1numSweep && (--this.channel1numSweep, this.channel1decreaseSweep ? (this.channel1ShadowFrequency -= this.channel1ShadowFrequency >> this.channel1frequencySweepDivider, this.channel1frequency = this.channel1ShadowFrequency & 2047, this.channel1FrequencyTracker = 2048 - this.channel1frequency << 2) : (this.channel1frequency = this.channel1ShadowFrequency += this.channel1ShadowFrequency >> this.channel1frequencySweepDivider,
        2047 >= this.channel1ShadowFrequency ? (this.channel1FrequencyTracker = 2048 - this.channel1frequency << 2, 2047 < this.channel1ShadowFrequency + (this.channel1ShadowFrequency >> this.channel1frequencySweepDivider) && (this.channel1SweepFault = !0, this.channel1EnableCheck(), this.memory[65318] &= 254)) : (this.channel1frequency &= 2047, this.channel1SweepFault = !0, this.channel1EnableCheck(), this.memory[65318] &= 254))), this.channel1timeSweep = this.channel1lastTimeSweep) : (this.channel1SweepFault = !0, this.channel1EnableCheck()))
};
GameBoyCore.prototype.clockAudioEnvelope = function() {
    -1 < this.channel1envelopeSweepsLast && (0 < this.channel1envelopeSweeps ? --this.channel1envelopeSweeps : this.channel1envelopeType ? 15 > this.channel1envelopeVolume ? (++this.channel1envelopeVolume, this.channel1envelopeSweeps = this.channel1envelopeSweepsLast, this.channel1OutputLevelCache()) : this.channel1envelopeSweepsLast = -1 : 0 < this.channel1envelopeVolume ? (--this.channel1envelopeVolume, this.channel1envelopeSweeps = this.channel1envelopeSweepsLast, this.channel1OutputLevelCache()) :
        this.channel1envelopeSweepsLast = -1); - 1 < this.channel2envelopeSweepsLast && (0 < this.channel2envelopeSweeps ? --this.channel2envelopeSweeps : this.channel2envelopeType ? 15 > this.channel2envelopeVolume ? (++this.channel2envelopeVolume, this.channel2envelopeSweeps = this.channel2envelopeSweepsLast, this.channel2OutputLevelCache()) : this.channel2envelopeSweepsLast = -1 : 0 < this.channel2envelopeVolume ? (--this.channel2envelopeVolume, this.channel2envelopeSweeps = this.channel2envelopeSweepsLast, this.channel2OutputLevelCache()) :
        this.channel2envelopeSweepsLast = -1); - 1 < this.channel4envelopeSweepsLast && (0 < this.channel4envelopeSweeps ? --this.channel4envelopeSweeps : this.channel4envelopeType ? 15 > this.channel4envelopeVolume ? (this.channel4currentVolume = ++this.channel4envelopeVolume << this.channel4VolumeShifter, this.channel4envelopeSweeps = this.channel4envelopeSweepsLast, this.channel4UpdateCache()) : this.channel4envelopeSweepsLast = -1 : 0 < this.channel4envelopeVolume ? (this.channel4currentVolume = --this.channel4envelopeVolume << this.channel4VolumeShifter,
        this.channel4envelopeSweeps = this.channel4envelopeSweepsLast, this.channel4UpdateCache()) : this.channel4envelopeSweepsLast = -1)
};
GameBoyCore.prototype.computeAudioChannels = function() {
    0 == --this.channel1FrequencyCounter && (this.channel1FrequencyCounter = this.channel1FrequencyTracker, this.channel1DutyTracker = this.channel1DutyTracker + 1 & 7, this.channel1OutputLevelTrimaryCache());
    0 == --this.channel2FrequencyCounter && (this.channel2FrequencyCounter = this.channel2FrequencyTracker, this.channel2DutyTracker = this.channel2DutyTracker + 1 & 7, this.channel2OutputLevelTrimaryCache());
    0 == --this.channel3Counter && (this.channel3canPlay && (this.channel3lastSampleLookup =
        this.channel3lastSampleLookup + 1 & 31), this.channel3Counter = this.channel3FrequencyPeriod, this.channel3UpdateCache());
    0 == --this.channel4Counter && (this.channel4lastSampleLookup = this.channel4lastSampleLookup + 1 & this.channel4BitRange, this.channel4Counter = this.channel4FrequencyPeriod, this.channel4UpdateCache())
};
GameBoyCore.prototype.channel1EnableCheck = function() {
    this.channel1Enabled = (this.channel1consecutive || 0 < this.channel1totalLength) && !this.channel1SweepFault && this.channel1canPlay;
    this.channel1OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel1VolumeEnableCheck = function() {
    this.channel1canPlay = 7 < this.memory[65298];
    this.channel1EnableCheck();
    this.channel1OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel1OutputLevelCache = function() {
    this.channel1currentSampleLeft = this.leftChannel1 ? this.channel1envelopeVolume : 0;
    this.channel1currentSampleRight = this.rightChannel1 ? this.channel1envelopeVolume : 0;
    this.channel1OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel1OutputLevelSecondaryCache = function() {
    this.channel1Enabled ? (this.channel1currentSampleLeftSecondary = this.channel1currentSampleLeft, this.channel1currentSampleRightSecondary = this.channel1currentSampleRight) : this.channel1currentSampleRightSecondary = this.channel1currentSampleLeftSecondary = 0;
    this.channel1OutputLevelTrimaryCache()
};
GameBoyCore.prototype.channel1OutputLevelTrimaryCache = function() {
    this.channel1CachedDuty[this.channel1DutyTracker] ? (this.channel1currentSampleLeftTrimary = this.channel1currentSampleLeftSecondary, this.channel1currentSampleRightTrimary = this.channel1currentSampleRightSecondary) : this.channel1currentSampleRightTrimary = this.channel1currentSampleLeftTrimary = 0;
    this.mixerOutputLevelCache()
};
GameBoyCore.prototype.channel2EnableCheck = function() {
    this.channel2Enabled = (this.channel2consecutive || 0 < this.channel2totalLength) && this.channel2canPlay;
    this.channel2OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel2VolumeEnableCheck = function() {
    this.channel2canPlay = 7 < this.memory[65303];
    this.channel2EnableCheck();
    this.channel2OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel2OutputLevelCache = function() {
    this.channel2currentSampleLeft = this.leftChannel2 ? this.channel2envelopeVolume : 0;
    this.channel2currentSampleRight = this.rightChannel2 ? this.channel2envelopeVolume : 0;
    this.channel2OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel2OutputLevelSecondaryCache = function() {
    this.channel2Enabled ? (this.channel2currentSampleLeftSecondary = this.channel2currentSampleLeft, this.channel2currentSampleRightSecondary = this.channel2currentSampleRight) : this.channel2currentSampleRightSecondary = this.channel2currentSampleLeftSecondary = 0;
    this.channel2OutputLevelTrimaryCache()
};
GameBoyCore.prototype.channel2OutputLevelTrimaryCache = function() {
    this.channel2CachedDuty[this.channel2DutyTracker] ? (this.channel2currentSampleLeftTrimary = this.channel2currentSampleLeftSecondary, this.channel2currentSampleRightTrimary = this.channel2currentSampleRightSecondary) : this.channel2currentSampleRightTrimary = this.channel2currentSampleLeftTrimary = 0;
    this.mixerOutputLevelCache()
};
GameBoyCore.prototype.channel3EnableCheck = function() {
    this.channel3Enabled = this.channel3consecutive || 0 < this.channel3totalLength;
    this.channel3OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel3OutputLevelCache = function() {
    this.channel3currentSampleLeft = this.leftChannel3 ? this.cachedChannel3Sample : 0;
    this.channel3currentSampleRight = this.rightChannel3 ? this.cachedChannel3Sample : 0;
    this.channel3OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel3OutputLevelSecondaryCache = function() {
    this.channel3Enabled ? (this.channel3currentSampleLeftSecondary = this.channel3currentSampleLeft, this.channel3currentSampleRightSecondary = this.channel3currentSampleRight) : this.channel3currentSampleRightSecondary = this.channel3currentSampleLeftSecondary = 0;
    this.mixerOutputLevelCache()
};
GameBoyCore.prototype.channel4EnableCheck = function() {
    this.channel4Enabled = (this.channel4consecutive || 0 < this.channel4totalLength) && this.channel4canPlay;
    this.channel4OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel4VolumeEnableCheck = function() {
    this.channel4canPlay = 7 < this.memory[65313];
    this.channel4EnableCheck();
    this.channel4OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel4OutputLevelCache = function() {
    this.channel4currentSampleLeft = this.leftChannel4 ? this.cachedChannel4Sample : 0;
    this.channel4currentSampleRight = this.rightChannel4 ? this.cachedChannel4Sample : 0;
    this.channel4OutputLevelSecondaryCache()
};
GameBoyCore.prototype.channel4OutputLevelSecondaryCache = function() {
    this.channel4Enabled ? (this.channel4currentSampleLeftSecondary = this.channel4currentSampleLeft, this.channel4currentSampleRightSecondary = this.channel4currentSampleRight) : this.channel4currentSampleRightSecondary = this.channel4currentSampleLeftSecondary = 0;
    this.mixerOutputLevelCache()
};
GameBoyCore.prototype.mixerOutputLevelCache = function() {
    this.mixerOutputCache = ((this.channel1currentSampleLeftTrimary + this.channel2currentSampleLeftTrimary + this.channel3currentSampleLeftSecondary + this.channel4currentSampleLeftSecondary) * this.VinLeftChannelMasterVolume << 9) + (this.channel1currentSampleRightTrimary + this.channel2currentSampleRightTrimary + this.channel3currentSampleRightSecondary + this.channel4currentSampleRightSecondary) * this.VinRightChannelMasterVolume
};
GameBoyCore.prototype.channel3UpdateCache = function() {
    this.cachedChannel3Sample = this.channel3PCM[this.channel3lastSampleLookup] >> this.channel3patternType;
    this.channel3OutputLevelCache()
};
GameBoyCore.prototype.channel3WriteRAM = function(a, c) {
    this.channel3canPlay && this.audioJIT();
    this.memory[65328 | a] = c;
    a <<= 1;
    this.channel3PCM[a] = c >> 4;
    this.channel3PCM[a | 1] = c & 15
};
GameBoyCore.prototype.channel4UpdateCache = function() {
    this.cachedChannel4Sample = this.noiseSampleTable[this.channel4currentVolume | this.channel4lastSampleLookup];
    this.channel4OutputLevelCache()
};
GameBoyCore.prototype.run = function() {
    0 == (this.stopEmulator & 2) && (1 == (this.stopEmulator & 1) ? this.CPUStopped ? (this.audioUnderrunAdjustment(), this.audioTicks += this.CPUCyclesTotal, this.audioJIT(), this.stopEmulator |= 1) : (this.stopEmulator = 0, this.drewFrame = !1, this.audioUnderrunAdjustment(), this.clockUpdate(), this.halt ? (this.CPUTicks = 0, this.calculateHALTPeriod(), this.halt ? this.updateCoreFull() : this.executeIteration()) : this.executeIteration(), this.requestDraw()) : (cout("Iterator restarted a faulted core.", 2),
        pause()))
};
GameBoyCore.prototype.executeIteration = function() {
    for (var a; 0 == this.stopEmulator;) {
        switch (this.IRQEnableDelay) {
            case 1:
                this.IME = !0, this.checkIRQMatching();
            case 2:
                --this.IRQEnableDelay
        }
        0 < this.IRQLineMatched && this.launchIRQ();
        a = this.memoryReader[this.programCounter](this, this.programCounter);
        this.programCounter = this.programCounter + 1 & 65535;
        this.skipPCIncrement && (this.programCounter = this.programCounter - 1 & 65535, this.skipPCIncrement = !1);
        this.CPUTicks = this.TICKTable[a];
        this.OPCODE[a](this);
        this.LCDTicks += this.CPUTicks >>
            this.doubleSpeedShifter;
        this.LCDCONTROL[this.actualScanLine](this);
        a = this.CPUTicks >> this.doubleSpeedShifter;
        this.audioTicks += a;
        this.emulatorTicks += a;
        this.DIVTicks += this.CPUTicks;
        if (this.TIMAEnabled)
            for (this.timerTicks += this.CPUTicks; this.timerTicks >= this.TACClocker;) this.timerTicks -= this.TACClocker, 256 == ++this.memory[65285] && (this.memory[65285] = this.memory[65286], this.interruptsRequested |= 4, this.checkIRQMatching());
        0 < this.serialTimer && (this.serialTimer -= this.CPUTicks, 0 >= this.serialTimer && (this.interruptsRequested |=
            8, this.checkIRQMatching()), this.serialShiftTimer -= this.CPUTicks, 0 >= this.serialShiftTimer && (this.serialShiftTimer = this.serialShiftTimerAllocated, this.memory[65281] = this.memory[65281] << 1 & 254 | 1));
        this.emulatorTicks >= this.CPUCyclesTotal && this.iterationEndRoutine();
        this.instructions += 1;
        this.instructions > this.totalInstructions && (this.iterationEndRoutine(), this.stopEmulator |= 2, checkFinalState())
    }
};
GameBoyCore.prototype.iterationEndRoutine = function() {
    0 == (this.stopEmulator & 1) && (this.audioJIT(), this.memory[65284] = this.memory[65284] + (this.DIVTicks >> 8) & 255, this.DIVTicks &= 255, this.stopEmulator |= 1, this.emulatorTicks -= this.CPUCyclesTotal, this.CPUCyclesTotalCurrent += this.CPUCyclesTotalRoundoff, this.recalculateIterationClockLimit())
};
GameBoyCore.prototype.handleSTOP = function() {
    this.CPUStopped = !0;
    this.iterationEndRoutine();
    0 > this.emulatorTicks && (this.audioTicks -= this.emulatorTicks, this.audioJIT())
};
GameBoyCore.prototype.recalculateIterationClockLimit = function() {
    var a = this.CPUCyclesTotalCurrent % 4;
    this.CPUCyclesTotal = this.CPUCyclesTotalBase + this.CPUCyclesTotalCurrent - a;
    this.CPUCyclesTotalCurrent = a
};
GameBoyCore.prototype.scanLineMode2 = function() {
    1 != this.STATTracker && (this.mode2TriggerSTAT && (this.interruptsRequested |= 2, this.checkIRQMatching()), this.STATTracker = 1, this.modeSTAT = 2)
};
GameBoyCore.prototype.scanLineMode3 = function() {
    3 != this.modeSTAT && (0 == this.STATTracker && this.mode2TriggerSTAT && (this.interruptsRequested |= 2, this.checkIRQMatching()), this.STATTracker = 1, this.modeSTAT = 3)
};
GameBoyCore.prototype.scanLineMode0 = function() {
    0 != this.modeSTAT && (2 != this.STATTracker && (0 == this.STATTracker && (this.mode2TriggerSTAT && (this.interruptsRequested |= 2, this.checkIRQMatching()), this.modeSTAT = 3), this.incrementScanLineQueue(), this.updateSpriteCount(this.actualScanLine), this.STATTracker = 2), this.LCDTicks >= this.spriteCount && (this.hdmaRunning && this.executeHDMA(), this.mode0TriggerSTAT && (this.interruptsRequested |= 2, this.checkIRQMatching()), this.STATTracker = 3, this.modeSTAT = 0))
};
GameBoyCore.prototype.clocksUntilLYCMatch = function() {
    return 0 != this.memory[65349] ? this.memory[65349] > this.actualScanLine ? 456 * (this.memory[65349] - this.actualScanLine) : 456 * (154 - this.actualScanLine + this.memory[65349]) : 456 * (153 == this.actualScanLine && 0 == this.memory[65348] ? 154 : 153 - this.actualScanLine) + 8
};
GameBoyCore.prototype.clocksUntilMode0 = function() {
    switch (this.modeSTAT) {
        case 0:
            if (143 == this.actualScanLine) return this.updateSpriteCount(0), this.spriteCount + 5016;
            this.updateSpriteCount(this.actualScanLine + 1);
            return this.spriteCount + 456;
        case 2:
        case 3:
            return this.updateSpriteCount(this.actualScanLine), this.spriteCount;
        case 1:
            return this.updateSpriteCount(0), this.spriteCount + 456 * (154 - this.actualScanLine)
    }
};
GameBoyCore.prototype.updateSpriteCount = function(a) {
    this.spriteCount = 252;
    if (this.cGBC && this.gfxSpriteShow) {
        a += 16;
        for (var c, b = this.gfxSpriteNormalHeight ? 8 : 16, d = 65024; 65184 > d && 312 > this.spriteCount; d += 4) c = a - this.memory[d], -1 < c && c < b && (this.spriteCount += 6)
    }
};
GameBoyCore.prototype.matchLYC = function() {
    this.memory[65348] == this.memory[65349] ? (this.memory[65345] |= 4, this.LYCMatchTriggerSTAT && (this.interruptsRequested |= 2, this.checkIRQMatching())) : this.memory[65345] &= 123
};
GameBoyCore.prototype.updateCore = function() {
    this.LCDTicks += this.CPUTicks >> this.doubleSpeedShifter;
    this.LCDCONTROL[this.actualScanLine](this);
    var a = this.CPUTicks >> this.doubleSpeedShifter;
    this.audioTicks += a;
    this.emulatorTicks += a;
    this.DIVTicks += this.CPUTicks;
    if (this.TIMAEnabled)
        for (this.timerTicks += this.CPUTicks; this.timerTicks >= this.TACClocker;) this.timerTicks -= this.TACClocker, 256 == ++this.memory[65285] && (this.memory[65285] = this.memory[65286], this.interruptsRequested |= 4, this.checkIRQMatching());
    0 < this.serialTimer &&
        (this.serialTimer -= this.CPUTicks, 0 >= this.serialTimer && (this.interruptsRequested |= 8, this.checkIRQMatching()), this.serialShiftTimer -= this.CPUTicks, 0 >= this.serialShiftTimer && (this.serialShiftTimer = this.serialShiftTimerAllocated, this.memory[65281] = this.memory[65281] << 1 & 254 | 1))
};
GameBoyCore.prototype.updateCoreFull = function() {
    this.updateCore();
    this.emulatorTicks >= this.CPUCyclesTotal && this.iterationEndRoutine()
};
GameBoyCore.prototype.initializeLCDController = function() {
    for (var a = 0; 154 > a;) 143 > a ? this.LINECONTROL[a] = function(a) {
            80 > a.LCDTicks ? a.scanLineMode2() : 252 > a.LCDTicks ? a.scanLineMode3() : 456 > a.LCDTicks ? a.scanLineMode0() : (a.LCDTicks -= 456, 3 != a.STATTracker && (2 != a.STATTracker && (0 == a.STATTracker && a.mode2TriggerSTAT && (a.interruptsRequested |= 2), a.incrementScanLineQueue()), a.hdmaRunning && a.executeHDMA(), a.mode0TriggerSTAT && (a.interruptsRequested |= 2)), a.actualScanLine = ++a.memory[65348], a.actualScanLine == a.memory[65349] ?
                (a.memory[65345] |= 4, a.LYCMatchTriggerSTAT && (a.interruptsRequested |= 2)) : a.memory[65345] &= 123, a.checkIRQMatching(), a.STATTracker = 0, a.modeSTAT = 2, a.LINECONTROL[a.actualScanLine](a))
        } : 143 == a ? this.LINECONTROL[143] = function(a) {
            if (80 > a.LCDTicks) a.scanLineMode2();
            else if (252 > a.LCDTicks) a.scanLineMode3();
            else if (456 > a.LCDTicks) a.scanLineMode0();
            else {
                a.LCDTicks -= 456;
                3 != a.STATTracker && (2 != a.STATTracker && (0 == a.STATTracker && a.mode2TriggerSTAT && (a.interruptsRequested |= 2), a.incrementScanLineQueue()), a.hdmaRunning &&
                    a.executeHDMA(), a.mode0TriggerSTAT && (a.interruptsRequested |= 2));
                a.actualScanLine = a.memory[65348] = 144;
                144 == a.memory[65349] ? (a.memory[65345] |= 4, a.LYCMatchTriggerSTAT && (a.interruptsRequested |= 2)) : a.memory[65345] &= 123;
                a.STATTracker = 0;
                a.modeSTAT = 1;
                a.interruptsRequested |= a.mode1TriggerSTAT ? 3 : 1;
                a.checkIRQMatching();
                if (0 == a.drewBlank) {
                    if (144 > a.totalLinesPassed || 144 == a.totalLinesPassed && -1 < a.midScanlineOffset) a.graphicsJITVBlank(), a.prepareFrame()
                } else --a.drewBlank;
                a.LINECONTROL[144](a)
            }
        } : 153 > a ? this.LINECONTROL[a] =
        function(a) {
            456 <= a.LCDTicks && (a.LCDTicks -= 456, a.actualScanLine = ++a.memory[65348], a.actualScanLine == a.memory[65349] ? (a.memory[65345] |= 4, a.LYCMatchTriggerSTAT && (a.interruptsRequested |= 2, a.checkIRQMatching())) : a.memory[65345] &= 123, a.LINECONTROL[a.actualScanLine](a))
        } : this.LINECONTROL[153] = function(a) {
            8 <= a.LCDTicks && (4 != a.STATTracker && 153 == a.memory[65348] && (a.memory[65348] = 0, 0 == a.memory[65349] ? (a.memory[65345] |= 4, a.LYCMatchTriggerSTAT && (a.interruptsRequested |= 2, a.checkIRQMatching())) : a.memory[65345] &=
                123, a.STATTracker = 4), 456 <= a.LCDTicks && (a.LCDTicks -= 456, a.STATTracker = a.actualScanLine = 0, a.LINECONTROL[0](a)))
        }, ++a
};
GameBoyCore.prototype.DisplayShowOff = function() {
    0 == this.drewBlank && (this.clearFrameBuffer(), this.drewFrame = !0);
    this.drewBlank = 2
};
GameBoyCore.prototype.executeHDMA = function() {
    this.DMAWrite(1);
    this.halt ? this.LCDTicks - this.spriteCount < (4 >> this.doubleSpeedShifter | 32) && (this.CPUTicks = 4 + (32 + this.spriteCount << this.doubleSpeedShifter), this.LCDTicks = this.spriteCount + (4 >> this.doubleSpeedShifter | 32)) : this.LCDTicks += 4 >> this.doubleSpeedShifter | 32;
    0 == this.memory[65365] ? (this.hdmaRunning = !1, this.memory[65365] = 255) : --this.memory[65365]
};
GameBoyCore.prototype.clockUpdate = function() {
    if (this.cTIMER) {
        var a = new_Date().getTime(),
            c = a - this.lastIteration;
        this.lastIteration = a;
        if (this.cTIMER && !this.RTCHALT)
            for (this.RTCSeconds += c / 1E3; 60 <= this.RTCSeconds;) this.RTCSeconds -= 60, ++this.RTCMinutes, 60 <= this.RTCMinutes && (this.RTCMinutes -= 60, ++this.RTCHours, 24 <= this.RTCHours && (this.RTCHours -= 24, ++this.RTCDays, 512 <= this.RTCDays && (this.RTCDays -= 512, this.RTCDayOverFlow = !0)))
    }
};
GameBoyCore.prototype.prepareFrame = function() {
    this.swizzleFrameBuffer();
    this.drewFrame = !0
};
GameBoyCore.prototype.requestDraw = function() {
    this.drewFrame && this.dispatchDraw()
};
GameBoyCore.prototype.dispatchDraw = function() {
    var a = this.offscreenRGBCount;
    if (0 < a) {
        for (var c = 92160 == a ? this.swizzledFrame : this.resizeFrameBuffer(), b = this.canvasBuffer.data, d = 0, e = 0; e < a; ++e) b[e++] = c[d++], b[e++] = c[d++], b[e++] = c[d++];
        this.graphicsBlit()
    }
};
GameBoyCore.prototype.swizzleFrameBuffer = function() {
    for (var a = this.frameBuffer, c = this.swizzledFrame, b = 0, d = 0; 69120 > d;) c[d++] = a[b] >> 16 & 255, c[d++] = a[b] >> 8 & 255, c[d++] = a[b++] & 255
};
GameBoyCore.prototype.clearFrameBuffer = function() {
    var a = 0,
        c = this.swizzledFrame;
    if (this.cGBC || this.colorizedGBPalettes)
        for (; 69120 > a;) c[a++] = 248;
    else
        for (; 69120 > a;) c[a++] = 239, c[a++] = 255, c[a++] = 222
};
GameBoyCore.prototype.resizeFrameBuffer = function() {
    return this.resizer.resize(this.swizzledFrame)
};
GameBoyCore.prototype.compileResizeFrameBufferFunction = function() {
    0 < this.offscreenRGBCount && (this.resizer = new Resize(160, 144, this.offscreenWidth, this.offscreenHeight, !1, !0))
};
GameBoyCore.prototype.renderScanLine = function(a) {
    this.pixelStart = 160 * a;
    if (this.bgEnabled) this.pixelEnd = 160, this.BGLayerRender(a), this.WindowLayerRender(a);
    else
        for (var c = 160 * (a + 1), b = this.cGBC || this.colorizedGBPalettes ? 16316664 : 15728606, d = 160 * a + this.currentX; d < c; d++) this.frameBuffer[d] = b;
    this.SpriteLayerRender(a);
    this.currentX = 0;
    this.midScanlineOffset = -1
};
GameBoyCore.prototype.renderMidScanLine = function() {
    if (144 > this.actualScanLine && 3 == this.modeSTAT && (-1 == this.midScanlineOffset && (this.midScanlineOffset = this.backgroundX & 7), 82 <= this.LCDTicks)) {
        this.pixelEnd = this.LCDTicks - 74;
        this.pixelEnd = Math.min(this.pixelEnd - this.midScanlineOffset - this.pixelEnd % 8, 160);
        if (this.bgEnabled) this.pixelStart = 160 * this.lastUnrenderedLine, this.BGLayerRender(this.lastUnrenderedLine), this.WindowLayerRender(this.lastUnrenderedLine);
        else
            for (var a = 160 * this.lastUnrenderedLine + this.pixelEnd,
                    c = this.cGBC || this.colorizedGBPalettes ? 16316664 : 15728606, b = 160 * this.lastUnrenderedLine + this.currentX; b < a; b++) this.frameBuffer[b] = c;
        this.currentX = this.pixelEnd
    }
};
GameBoyCore.prototype.initializeModeSpecificArrays = function() {
    this.LCDCONTROL = this.LCDisOn ? this.LINECONTROL : this.DISPLAYOFFCONTROL;
    this.cGBC ? (this.gbcOBJRawPalette = this.getTypedArray(64, 0, "uint8"), this.gbcBGRawPalette = this.getTypedArray(64, 0, "uint8"), this.gbcOBJPalette = this.getTypedArray(32, 16777216, "int32"), this.gbcBGPalette = this.getTypedArray(64, 0, "int32"), this.BGCHRBank2 = this.getTypedArray(2048, 0, "uint8"), this.BGCHRCurrentBank = 0 < this.currVRAMBank ? this.BGCHRBank2 : this.BGCHRBank1, this.tileCache =
        this.generateCacheArray(3968)) : (this.gbOBJPalette = this.getTypedArray(8, 0, "int32"), this.BGPalette = this.gbBGPalette = this.getTypedArray(4, 0, "int32"), this.OBJPalette = this.gbOBJPalette, this.tileCache = this.generateCacheArray(1792), this.sortBuffer = this.getTypedArray(256, 0, "uint8"), this.OAMAddressCache = this.getTypedArray(10, 0, "int32"));
    this.renderPathBuild()
};
GameBoyCore.prototype.GBCtoGBModeAdjust = function() {
    cout("Stepping down from GBC mode.", 0);
    this.VRAM = this.GBCMemory = this.BGCHRCurrentBank = this.BGCHRBank2 = null;
    this.tileCache.length = 1792;
    settings[4] ? (this.gbBGColorizedPalette = this.getTypedArray(4, 0, "int32"), this.gbOBJColorizedPalette = this.getTypedArray(8, 0, "int32"), this.cachedBGPaletteConversion = this.getTypedArray(4, 0, "int32"), this.cachedOBJPaletteConversion = this.getTypedArray(8, 0, "int32"), this.BGPalette = this.gbBGColorizedPalette, this.OBJPalette = this.gbOBJColorizedPalette,
        this.gbOBJPalette = this.gbBGPalette = null, this.getGBCColor()) : (this.gbOBJPalette = this.getTypedArray(8, 0, "int32"), this.BGPalette = this.gbBGPalette = this.getTypedArray(4, 0, "int32"), this.OBJPalette = this.gbOBJPalette);
    this.sortBuffer = this.getTypedArray(256, 0, "uint8");
    this.OAMAddressCache = this.getTypedArray(10, 0, "int32");
    this.renderPathBuild();
    this.memoryReadJumpCompile();
    this.memoryWriteJumpCompile()
};
GameBoyCore.prototype.renderPathBuild = function() {
    this.cGBC ? (this.priorityFlaggingPathRebuild(), this.SpriteLayerRender = this.SpriteGBCLayerRender) : (this.BGLayerRender = this.BGGBLayerRender, this.WindowLayerRender = this.WindowGBLayerRender, this.SpriteLayerRender = this.SpriteGBLayerRender)
};
GameBoyCore.prototype.priorityFlaggingPathRebuild = function() {
    this.BGPriorityEnabled ? (this.BGLayerRender = this.BGGBCLayerRender, this.WindowLayerRender = this.WindowGBCLayerRender) : (this.BGLayerRender = this.BGGBCLayerRenderNoPriorityFlagging, this.WindowLayerRender = this.WindowGBCLayerRenderNoPriorityFlagging)
};
GameBoyCore.prototype.initializeReferencesFromSaveState = function() {
    this.LCDCONTROL = this.LCDisOn ? this.LINECONTROL : this.DISPLAYOFFCONTROL;
    var a = 0;
    if (this.cGBC)
        for (this.BGCHRCurrentBank = 0 < this.currVRAMBank ? this.BGCHRBank2 : this.BGCHRBank1, this.tileCache = this.generateCacheArray(3968); 6144 > a; a += 16) this.generateGBCTileBank1(a), this.generateGBCTileBank2(a);
    else {
        this.colorizedGBPalettes ? (this.BGPalette = this.gbBGColorizedPalette, this.OBJPalette = this.gbOBJColorizedPalette, this.updateGBBGPalette = this.updateGBColorizedBGPalette,
            this.updateGBOBJPalette = this.updateGBColorizedOBJPalette) : (this.BGPalette = this.gbBGPalette, this.OBJPalette = this.gbOBJPalette);
        this.tileCache = this.generateCacheArray(1792);
        for (a = 32768; 36864 > a; a += 2) this.generateGBOAMTileLine(a);
        for (a = 36864; 38912 > a; a += 2) this.generateGBTileLine(a);
        this.sortBuffer = this.getTypedArray(256, 0, "uint8");
        this.OAMAddressCache = this.getTypedArray(10, 0, "int32")
    }
    this.renderPathBuild()
};
GameBoyCore.prototype.RGBTint = function(a) {
    var c = a & 31,
        b = a >> 5 & 31;
    a = a >> 10 & 31;
    return 13 * c + 2 * b + a >> 1 << 16 | 3 * b + a << 9 | 3 * c + 2 * b + 11 * a >> 1
};
GameBoyCore.prototype.getGBCColor = function() {
    for (var a = 0; 4 > a; a++) {
        var c = a << 1;
        this.cachedBGPaletteConversion[a] = this.RGBTint(this.gbcBGRawPalette[c | 1] << 8 | this.gbcBGRawPalette[c]);
        this.cachedOBJPaletteConversion[a] = this.RGBTint(this.gbcOBJRawPalette[c | 1] << 8 | this.gbcOBJRawPalette[c])
    }
    for (a = 4; 8 > a; a++) c = a << 1, this.cachedOBJPaletteConversion[a] = this.RGBTint(this.gbcOBJRawPalette[c | 1] << 8 | this.gbcOBJRawPalette[c]);
    this.updateGBBGPalette = this.updateGBColorizedBGPalette;
    this.updateGBOBJPalette = this.updateGBColorizedOBJPalette;
    this.updateGBBGPalette(this.memory[65351]);
    this.updateGBOBJPalette(0, this.memory[65352]);
    this.updateGBOBJPalette(1, this.memory[65353]);
    this.colorizedGBPalettes = !0
};
GameBoyCore.prototype.updateGBRegularBGPalette = function(a) {
    this.gbBGPalette[0] = this.colors[a & 3] | 33554432;
    this.gbBGPalette[1] = this.colors[a >> 2 & 3];
    this.gbBGPalette[2] = this.colors[a >> 4 & 3];
    this.gbBGPalette[3] = this.colors[a >> 6]
};
GameBoyCore.prototype.updateGBColorizedBGPalette = function(a) {
    this.gbBGColorizedPalette[0] = this.cachedBGPaletteConversion[a & 3] | 33554432;
    this.gbBGColorizedPalette[1] = this.cachedBGPaletteConversion[a >> 2 & 3];
    this.gbBGColorizedPalette[2] = this.cachedBGPaletteConversion[a >> 4 & 3];
    this.gbBGColorizedPalette[3] = this.cachedBGPaletteConversion[a >> 6]
};
GameBoyCore.prototype.updateGBRegularOBJPalette = function(a, c) {
    this.gbOBJPalette[a | 1] = this.colors[c >> 2 & 3];
    this.gbOBJPalette[a | 2] = this.colors[c >> 4 & 3];
    this.gbOBJPalette[a | 3] = this.colors[c >> 6]
};
GameBoyCore.prototype.updateGBColorizedOBJPalette = function(a, c) {
    this.gbOBJColorizedPalette[a | 1] = this.cachedOBJPaletteConversion[a | c >> 2 & 3];
    this.gbOBJColorizedPalette[a | 2] = this.cachedOBJPaletteConversion[a | c >> 4 & 3];
    this.gbOBJColorizedPalette[a | 3] = this.cachedOBJPaletteConversion[a | c >> 6]
};
GameBoyCore.prototype.updateGBCBGPalette = function(a, c) {
    this.gbcBGRawPalette[a] != c && (this.midScanLineJIT(), this.gbcBGRawPalette[a] = c, c = 0 == (a & 6) ? 33554432 | this.RGBTint(this.gbcBGRawPalette[a | 1] << 8 | this.gbcBGRawPalette[a & 62]) : this.RGBTint(this.gbcBGRawPalette[a | 1] << 8 | this.gbcBGRawPalette[a & 62]), a >>= 1, this.gbcBGPalette[a] = c, this.gbcBGPalette[32 | a] = 16777216 | c)
};
GameBoyCore.prototype.updateGBCOBJPalette = function(a, c) {
    this.gbcOBJRawPalette[a] != c && (this.gbcOBJRawPalette[a] = c, 0 < (a & 6) && (this.midScanLineJIT(), this.gbcOBJPalette[a >> 1] = 16777216 | this.RGBTint(this.gbcOBJRawPalette[a | 1] << 8 | this.gbcOBJRawPalette[a & 62])))
};
GameBoyCore.prototype.BGGBLayerRender = function(a) {
    var c = this.backgroundY + a & 255,
        b = (c & 7) << 3,
        c = this.gfxBackgroundCHRBankPosition | (c & 248) << 2,
        d = this.backgroundX + this.currentX & 255,
        e = this.pixelStart + this.currentX;
    a = this.pixelStart + (this.gfxWindowDisplay && 0 <= a - this.windowY ? Math.min(Math.max(this.windowX, 0) + this.currentX, this.pixelEnd) : this.pixelEnd);
    var f = c + (d >> 3),
        g = this.BGCHRBank1[f];
    g < this.gfxBackgroundBankOffset && (g |= 256);
    for (var g = this.tileCache[g], h = d & 7; 8 > h && e < a && 256 > d; ++d) this.frameBuffer[e++] = this.BGPalette[g[b |
        h++]];
    for (var l = Math.min(a - e, 256 - d) >> 3, d = d + (l << 3), l = l + f; f < l;) g = this.BGCHRBank1[++f], g < this.gfxBackgroundBankOffset && (g |= 256), g = this.tileCache[g], h = b, this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h]];
    if (e < a) {
        if (256 > d)
            for (g = this.BGCHRBank1[++f], g < this.gfxBackgroundBankOffset && (g |= 256), g = this.tileCache[g], h = b - 1; e < a && 256 > d; ++d) this.frameBuffer[e++] = this.BGPalette[g[++h]];
        for (l = (a - e >> 3) + c; c < l;) g = this.BGCHRBank1[c++], g < this.gfxBackgroundBankOffset && (g |= 256), g = this.tileCache[g], h = b, this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]],
            this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h++]], this.frameBuffer[e++] = this.BGPalette[g[h]];
        if (e < a) switch (g = this.BGCHRBank1[c], g < this.gfxBackgroundBankOffset && (g |= 256), g = this.tileCache[g], a - e) {
            case 7:
                this.frameBuffer[e + 6] = this.BGPalette[g[b | 6]];
            case 6:
                this.frameBuffer[e + 5] = this.BGPalette[g[b | 5]];
            case 5:
                this.frameBuffer[e + 4] = this.BGPalette[g[b | 4]];
            case 4:
                this.frameBuffer[e + 3] = this.BGPalette[g[b | 3]];
            case 3:
                this.frameBuffer[e + 2] = this.BGPalette[g[b | 2]];
            case 2:
                this.frameBuffer[e +
                    1] = this.BGPalette[g[b | 1]];
            case 1:
                this.frameBuffer[e] = this.BGPalette[g[b]]
        }
    }
};
GameBoyCore.prototype.BGGBCLayerRender = function(a) {
    var c = this.backgroundY + a & 255,
        b = (c & 7) << 3,
        c = this.gfxBackgroundCHRBankPosition | (c & 248) << 2,
        d = this.backgroundX + this.currentX & 255,
        e = this.pixelStart + this.currentX;
    a = this.pixelStart + (this.gfxWindowDisplay && 0 <= a - this.windowY ? Math.min(Math.max(this.windowX, 0) + this.currentX, this.pixelEnd) : this.pixelEnd);
    var f = c + (d >> 3),
        g = this.BGCHRBank1[f];
    g < this.gfxBackgroundBankOffset && (g |= 256);
    for (var h = this.BGCHRBank2[f], g = this.tileCache[(h & 8) << 8 | (h & 96) << 4 | g], h = (h & 7) << 2 |
            (h & 128) >> 2, l = d & 7; 8 > l && e < a && 256 > d; ++d) this.frameBuffer[e++] = this.gbcBGPalette[h | g[b | l++]];
    for (var m = Math.min(a - e, 256 - d) >> 3, d = d + (m << 3), m = m + f; f < m;) g = this.BGCHRBank1[++f], g < this.gfxBackgroundBankOffset && (g |= 256), h = this.BGCHRBank2[f], g = this.tileCache[(h & 8) << 8 | (h & 96) << 4 | g], h = (h & 7) << 2 | (h & 128) >> 2, l = b, this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] =
        this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l]];
    if (e < a) {
        if (256 > d)
            for (g = this.BGCHRBank1[++f], g < this.gfxBackgroundBankOffset && (g |= 256), h = this.BGCHRBank2[f], g = this.tileCache[(h & 8) << 8 | (h & 96) << 4 | g], h = (h & 7) << 2 | (h & 128) >> 2, l = b - 1; e < a && 256 > d; ++d) this.frameBuffer[e++] = this.gbcBGPalette[h | g[++l]];
        for (m = (a - e >> 3) + c; c < m;) g = this.BGCHRBank1[c], g < this.gfxBackgroundBankOffset && (g |= 256), h = this.BGCHRBank2[c++],
            g = this.tileCache[(h & 8) << 8 | (h & 96) << 4 | g], h = (h & 7) << 2 | (h & 128) >> 2, l = b, this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l]];
        if (e < a) switch (g = this.BGCHRBank1[c], g < this.gfxBackgroundBankOffset &&
            (g |= 256), h = this.BGCHRBank2[c], g = this.tileCache[(h & 8) << 8 | (h & 96) << 4 | g], h = (h & 7) << 2 | (h & 128) >> 2, a - e) {
            case 7:
                this.frameBuffer[e + 6] = this.gbcBGPalette[h | g[b | 6]];
            case 6:
                this.frameBuffer[e + 5] = this.gbcBGPalette[h | g[b | 5]];
            case 5:
                this.frameBuffer[e + 4] = this.gbcBGPalette[h | g[b | 4]];
            case 4:
                this.frameBuffer[e + 3] = this.gbcBGPalette[h | g[b | 3]];
            case 3:
                this.frameBuffer[e + 2] = this.gbcBGPalette[h | g[b | 2]];
            case 2:
                this.frameBuffer[e + 1] = this.gbcBGPalette[h | g[b | 1]];
            case 1:
                this.frameBuffer[e] = this.gbcBGPalette[h | g[b]]
        }
    }
};
GameBoyCore.prototype.BGGBCLayerRenderNoPriorityFlagging = function(a) {
    var c = this.backgroundY + a & 255,
        b = (c & 7) << 3,
        c = this.gfxBackgroundCHRBankPosition | (c & 248) << 2,
        d = this.backgroundX + this.currentX & 255,
        e = this.pixelStart + this.currentX;
    a = this.pixelStart + (this.gfxWindowDisplay && 0 <= a - this.windowY ? Math.min(Math.max(this.windowX, 0) + this.currentX, this.pixelEnd) : this.pixelEnd);
    var f = c + (d >> 3),
        g = this.BGCHRBank1[f];
    g < this.gfxBackgroundBankOffset && (g |= 256);
    for (var h = this.BGCHRBank2[f], g = this.tileCache[(h & 8) << 8 | (h & 96) <<
            4 | g], h = (h & 7) << 2, l = d & 7; 8 > l && e < a && 256 > d; ++d) this.frameBuffer[e++] = this.gbcBGPalette[h | g[b | l++]];
    for (var m = Math.min(a - e, 256 - d) >> 3, d = d + (m << 3), m = m + f; f < m;) g = this.BGCHRBank1[++f], g < this.gfxBackgroundBankOffset && (g |= 256), h = this.BGCHRBank2[f], g = this.tileCache[(h & 8) << 8 | (h & 96) << 4 | g], h = (h & 7) << 2, l = b, this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] =
        this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l]];
    if (e < a) {
        if (256 > d)
            for (g = this.BGCHRBank1[++f], g < this.gfxBackgroundBankOffset && (g |= 256), h = this.BGCHRBank2[f], g = this.tileCache[(h & 8) << 8 | (h & 96) << 4 | g], h = (h & 7) << 2, l = b - 1; e < a && 256 > d; ++d) this.frameBuffer[e++] = this.gbcBGPalette[h | g[++l]];
        for (m = (a - e >> 3) + c; c < m;) g = this.BGCHRBank1[c], g < this.gfxBackgroundBankOffset && (g |= 256), h = this.BGCHRBank2[c++],
            g = this.tileCache[(h & 8) << 8 | (h & 96) << 4 | g], h = (h & 7) << 2, l = b, this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l++]], this.frameBuffer[e++] = this.gbcBGPalette[h | g[l]];
        if (e < a) switch (g = this.BGCHRBank1[c], g < this.gfxBackgroundBankOffset &&
            (g |= 256), h = this.BGCHRBank2[c], g = this.tileCache[(h & 8) << 8 | (h & 96) << 4 | g], h = (h & 7) << 2, a - e) {
            case 7:
                this.frameBuffer[e + 6] = this.gbcBGPalette[h | g[b | 6]];
            case 6:
                this.frameBuffer[e + 5] = this.gbcBGPalette[h | g[b | 5]];
            case 5:
                this.frameBuffer[e + 4] = this.gbcBGPalette[h | g[b | 4]];
            case 4:
                this.frameBuffer[e + 3] = this.gbcBGPalette[h | g[b | 3]];
            case 3:
                this.frameBuffer[e + 2] = this.gbcBGPalette[h | g[b | 2]];
            case 2:
                this.frameBuffer[e + 1] = this.gbcBGPalette[h | g[b | 1]];
            case 1:
                this.frameBuffer[e] = this.gbcBGPalette[h | g[b]]
        }
    }
};
GameBoyCore.prototype.WindowGBLayerRender = function(a) {
    if (this.gfxWindowDisplay) {
        var c = a - this.windowY;
        if (0 <= c) {
            a = 0 < this.windowX ? this.windowX + this.currentX : this.currentX;
            var b = this.pixelStart + a,
                d = this.pixelStart + this.pixelEnd;
            if (b < d) {
                var e = (c & 7) << 3,
                    c = (this.gfxWindowCHRBankPosition | (c & 248) << 2) + (this.currentX >> 3),
                    f = this.BGCHRBank1[c];
                f < this.gfxBackgroundBankOffset && (f |= 256);
                var f = this.tileCache[f],
                    g = a - this.windowX & 7;
                for (a = Math.min(8, g + d - b); g < a;) this.frameBuffer[b++] = this.BGPalette[f[e | g++]];
                for (a = c + (d -
                        b >> 3); c < a;) f = this.BGCHRBank1[++c], f < this.gfxBackgroundBankOffset && (f |= 256), f = this.tileCache[f], g = e, this.frameBuffer[b++] = this.BGPalette[f[g++]], this.frameBuffer[b++] = this.BGPalette[f[g++]], this.frameBuffer[b++] = this.BGPalette[f[g++]], this.frameBuffer[b++] = this.BGPalette[f[g++]], this.frameBuffer[b++] = this.BGPalette[f[g++]], this.frameBuffer[b++] = this.BGPalette[f[g++]], this.frameBuffer[b++] = this.BGPalette[f[g++]], this.frameBuffer[b++] = this.BGPalette[f[g]];
                if (b < d) switch (f = this.BGCHRBank1[++c], f < this.gfxBackgroundBankOffset &&
                    (f |= 256), f = this.tileCache[f], d - b) {
                    case 7:
                        this.frameBuffer[b + 6] = this.BGPalette[f[e | 6]];
                    case 6:
                        this.frameBuffer[b + 5] = this.BGPalette[f[e | 5]];
                    case 5:
                        this.frameBuffer[b + 4] = this.BGPalette[f[e | 4]];
                    case 4:
                        this.frameBuffer[b + 3] = this.BGPalette[f[e | 3]];
                    case 3:
                        this.frameBuffer[b + 2] = this.BGPalette[f[e | 2]];
                    case 2:
                        this.frameBuffer[b + 1] = this.BGPalette[f[e | 1]];
                    case 1:
                        this.frameBuffer[b] = this.BGPalette[f[e]]
                }
            }
        }
    }
};
GameBoyCore.prototype.WindowGBCLayerRender = function(a) {
    if (this.gfxWindowDisplay) {
        var c = a - this.windowY;
        if (0 <= c) {
            a = 0 < this.windowX ? this.windowX + this.currentX : this.currentX;
            var b = this.pixelStart + a,
                d = this.pixelStart + this.pixelEnd;
            if (b < d) {
                var e = (c & 7) << 3,
                    c = (this.gfxWindowCHRBankPosition | (c & 248) << 2) + (this.currentX >> 3),
                    f = this.BGCHRBank1[c];
                f < this.gfxBackgroundBankOffset && (f |= 256);
                var g = this.BGCHRBank2[c],
                    f = this.tileCache[(g & 8) << 8 | (g & 96) << 4 | f],
                    g = (g & 7) << 2 | (g & 128) >> 2,
                    h = a - this.windowX & 7;
                for (a = Math.min(8, h + d - b); h <
                    a;) this.frameBuffer[b++] = this.gbcBGPalette[g | f[e | h++]];
                for (a = c + (d - b >> 3); c < a;) f = this.BGCHRBank1[++c], f < this.gfxBackgroundBankOffset && (f |= 256), g = this.BGCHRBank2[c], f = this.tileCache[(g & 8) << 8 | (g & 96) << 4 | f], g = (g & 7) << 2 | (g & 128) >> 2, h = e, this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g |
                    f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h]];
                if (b < d) switch (f = this.BGCHRBank1[++c], f < this.gfxBackgroundBankOffset && (f |= 256), g = this.BGCHRBank2[c], f = this.tileCache[(g & 8) << 8 | (g & 96) << 4 | f], g = (g & 7) << 2 | (g & 128) >> 2, d - b) {
                    case 7:
                        this.frameBuffer[b + 6] = this.gbcBGPalette[g | f[e | 6]];
                    case 6:
                        this.frameBuffer[b + 5] = this.gbcBGPalette[g | f[e | 5]];
                    case 5:
                        this.frameBuffer[b + 4] = this.gbcBGPalette[g | f[e | 4]];
                    case 4:
                        this.frameBuffer[b + 3] = this.gbcBGPalette[g | f[e | 3]];
                    case 3:
                        this.frameBuffer[b +
                            2] = this.gbcBGPalette[g | f[e | 2]];
                    case 2:
                        this.frameBuffer[b + 1] = this.gbcBGPalette[g | f[e | 1]];
                    case 1:
                        this.frameBuffer[b] = this.gbcBGPalette[g | f[e]]
                }
            }
        }
    }
};
GameBoyCore.prototype.WindowGBCLayerRenderNoPriorityFlagging = function(a) {
    if (this.gfxWindowDisplay) {
        var c = a - this.windowY;
        if (0 <= c) {
            a = 0 < this.windowX ? this.windowX + this.currentX : this.currentX;
            var b = this.pixelStart + a,
                d = this.pixelStart + this.pixelEnd;
            if (b < d) {
                var e = (c & 7) << 3,
                    c = (this.gfxWindowCHRBankPosition | (c & 248) << 2) + (this.currentX >> 3),
                    f = this.BGCHRBank1[c];
                f < this.gfxBackgroundBankOffset && (f |= 256);
                var g = this.BGCHRBank2[c],
                    f = this.tileCache[(g & 8) << 8 | (g & 96) << 4 | f],
                    g = (g & 7) << 2,
                    h = a - this.windowX & 7;
                for (a = Math.min(8,
                        h + d - b); h < a;) this.frameBuffer[b++] = this.gbcBGPalette[g | f[e | h++]];
                for (a = c + (d - b >> 3); c < a;) f = this.BGCHRBank1[++c], f < this.gfxBackgroundBankOffset && (f |= 256), g = this.BGCHRBank2[c], f = this.tileCache[(g & 8) << 8 | (g & 96) << 4 | f], g = (g & 7) << 2, h = e, this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g |
                    f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h++]], this.frameBuffer[b++] = this.gbcBGPalette[g | f[h]];
                if (b < d) switch (f = this.BGCHRBank1[++c], f < this.gfxBackgroundBankOffset && (f |= 256), g = this.BGCHRBank2[c], f = this.tileCache[(g & 8) << 8 | (g & 96) << 4 | f], g = (g & 7) << 2, d - b) {
                    case 7:
                        this.frameBuffer[b + 6] = this.gbcBGPalette[g | f[e | 6]];
                    case 6:
                        this.frameBuffer[b + 5] = this.gbcBGPalette[g | f[e | 5]];
                    case 5:
                        this.frameBuffer[b + 4] = this.gbcBGPalette[g | f[e | 4]];
                    case 4:
                        this.frameBuffer[b + 3] = this.gbcBGPalette[g | f[e | 3]];
                    case 3:
                        this.frameBuffer[b +
                            2] = this.gbcBGPalette[g | f[e | 2]];
                    case 2:
                        this.frameBuffer[b + 1] = this.gbcBGPalette[g | f[e | 1]];
                    case 1:
                        this.frameBuffer[b] = this.gbcBGPalette[g | f[e]]
                }
            }
        }
    }
};
GameBoyCore.prototype.SpriteGBLayerRender = function(a) {
    if (this.gfxSpriteShow) {
        a += 16;
        var c, b;
        c = 1;
        for (var d, e, f, g, h, l, m = 0, q, p, y; 168 > c;) this.sortBuffer[c++] = 255;
        if (this.gfxSpriteNormalHeight)
            for (q = this.findLowestSpriteDrawable(a, 7); m < q; ++m)
                for (c = this.OAMAddressCache[m], b = a - this.memory[c] << 3, f = this.memory[c | 3], g = (f & 16) >> 2, h = this.tileCache[(f & 96) << 4 | this.memory[c | 2]], y = d = this.memory[c | 1], e = Math.min(168 - y, 8), c = 7 < y ? 0 : 8 - y, p = this.pixelStart + (8 < y ? y - 8 : 0); c < e; ++c, ++p, ++y) this.sortBuffer[y] > d && (33554432 <= this.frameBuffer[p] ?
                    (l = h[b | c], 0 < l && (this.frameBuffer[p] = this.OBJPalette[g | l], this.sortBuffer[y] = d)) : 16777216 > this.frameBuffer[p] && (l = h[b | c], 0 < l && 128 > f && (this.frameBuffer[p] = this.OBJPalette[g | l], this.sortBuffer[y] = d)));
        else
            for (q = this.findLowestSpriteDrawable(a, 15); m < q; ++m)
                for (c = this.OAMAddressCache[m], b = a - this.memory[c] << 3, f = this.memory[c | 3], g = (f & 16) >> 2, h = (f & 64) == (64 & b) ? this.tileCache[(f & 96) << 4 | this.memory[c | 2] & 254] : this.tileCache[(f & 96) << 4 | this.memory[c | 2] | 1], b &= 63, y = d = this.memory[c | 1], e = Math.min(168 - y, 8), c = 7 < y ? 0 : 8 -
                    y, p = this.pixelStart + (8 < y ? y - 8 : 0); c < e; ++c, ++p, ++y) this.sortBuffer[y] > d && (33554432 <= this.frameBuffer[p] ? (l = h[b | c], 0 < l && (this.frameBuffer[p] = this.OBJPalette[g | l], this.sortBuffer[y] = d)) : 16777216 > this.frameBuffer[p] && (l = h[b | c], 0 < l && 128 > f && (this.frameBuffer[p] = this.OBJPalette[g | l], this.sortBuffer[y] = d)))
    }
};
GameBoyCore.prototype.findLowestSpriteDrawable = function(a, c) {
    for (var b = 65024, d = 0, e; 65184 > b && 10 > d;) e = a - this.memory[b], (e & c) == e && (this.OAMAddressCache[d++] = b), b += 4;
    return d
};
GameBoyCore.prototype.SpriteGBCLayerRender = function(a) {
    if (this.gfxSpriteShow) {
        var c = 65024;
        a += 16;
        var b, d, e, f, g, h, l, m, q = 0;
        if (this.gfxSpriteNormalHeight)
            for (; 65184 > c && 10 > q; c += 4) {
                if (b = a - this.memory[c], (b & 7) == b) {
                    d = this.memory[c | 1] - 8;
                    e = Math.min(160, d + 8);
                    g = this.memory[c | 3];
                    h = (g & 7) << 2;
                    l = this.tileCache[(g & 8) << 8 | (g & 96) << 4 | this.memory[c | 2]];
                    f = 0 < d ? d : 0;
                    d -= b << 3;
                    for (m = this.pixelStart + f; f < e; ++f, ++m) 33554432 <= this.frameBuffer[m] ? (b = l[f - d], 0 < b && (this.frameBuffer[m] = this.gbcOBJPalette[h | b])) : 16777216 > this.frameBuffer[m] &&
                        (b = l[f - d], 0 < b && 128 > g && (this.frameBuffer[m] = this.gbcOBJPalette[h | b]));
                    ++q
                }
            } else
                for (; 65184 > c && 10 > q; c += 4)
                    if (b = a - this.memory[c], (b & 15) == b) {
                        d = this.memory[c | 1] - 8;
                        e = Math.min(160, d + 8);
                        g = this.memory[c | 3];
                        h = (g & 7) << 2;
                        l = (g & 64) == (64 & b << 3) ? this.tileCache[(g & 8) << 8 | (g & 96) << 4 | this.memory[c | 2] & 254] : this.tileCache[(g & 8) << 8 | (g & 96) << 4 | this.memory[c | 2] | 1];
                        f = 0 < d ? d : 0;
                        d -= (b & 7) << 3;
                        for (m = this.pixelStart + f; f < e; ++f, ++m) 33554432 <= this.frameBuffer[m] ? (b = l[f - d], 0 < b && (this.frameBuffer[m] = this.gbcOBJPalette[h | b])) : 16777216 > this.frameBuffer[m] &&
                            (b = l[f - d], 0 < b && 128 > g && (this.frameBuffer[m] = this.gbcOBJPalette[h | b]));
                        ++q
                    }
    }
};
GameBoyCore.prototype.generateGBTileLine = function(a) {
    var c = this.memory[1 | a] << 8 | this.memory[40958 & a],
        b = this.tileCache[(a & 8176) >> 4];
    a = (a & 14) << 2;
    b[a | 7] = (c & 256) >> 7 | c & 1;
    b[a | 6] = (c & 512) >> 8 | (c & 2) >> 1;
    b[a | 5] = (c & 1024) >> 9 | (c & 4) >> 2;
    b[a | 4] = (c & 2048) >> 10 | (c & 8) >> 3;
    b[a | 3] = (c & 4096) >> 11 | (c & 16) >> 4;
    b[a | 2] = (c & 8192) >> 12 | (c & 32) >> 5;
    b[a | 1] = (c & 16384) >> 13 | (c & 64) >> 6;
    b[a] = (c & 32768) >> 14 | (c & 128) >> 7
};
GameBoyCore.prototype.generateGBCTileLineBank1 = function(a) {
    var c = this.memory[1 | a] << 8 | this.memory[40958 & a];
    a &= 8190;
    var b = this.tileCache[a >> 4],
        d = this.tileCache[512 | a >> 4],
        e = this.tileCache[1024 | a >> 4],
        f = this.tileCache[1536 | a >> 4];
    a = (a & 14) << 2;
    var g = 56 - a;
    f[g] = d[a] = e[g | 7] = b[a | 7] = (c & 256) >> 7 | c & 1;
    f[g | 1] = d[a | 1] = e[g | 6] = b[a | 6] = (c & 512) >> 8 | (c & 2) >> 1;
    f[g | 2] = d[a | 2] = e[g | 5] = b[a | 5] = (c & 1024) >> 9 | (c & 4) >> 2;
    f[g | 3] = d[a | 3] = e[g | 4] = b[a | 4] = (c & 2048) >> 10 | (c & 8) >> 3;
    f[g | 4] = d[a | 4] = e[g | 3] = b[a | 3] = (c & 4096) >> 11 | (c & 16) >> 4;
    f[g | 5] = d[a | 5] = e[g |
        2] = b[a | 2] = (c & 8192) >> 12 | (c & 32) >> 5;
    f[g | 6] = d[a | 6] = e[g | 1] = b[a | 1] = (c & 16384) >> 13 | (c & 64) >> 6;
    f[g | 7] = d[a | 7] = e[g] = b[a] = (c & 32768) >> 14 | (c & 128) >> 7
};
GameBoyCore.prototype.generateGBCTileBank1 = function(a) {
    var c = a >> 4,
        b = this.tileCache[c],
        d = this.tileCache[512 | c],
        e = this.tileCache[1024 | c],
        f = this.tileCache[1536 | c],
        g;
    a |= 32768;
    var c = 0,
        h = 56;
    do g = this.memory[1 | a] << 8 | this.memory[a], f[h] = d[c] = e[h | 7] = b[c | 7] = (g & 256) >> 7 | g & 1, f[h | 1] = d[c | 1] = e[h | 6] = b[c | 6] = (g & 512) >> 8 | (g & 2) >> 1, f[h | 2] = d[c | 2] = e[h | 5] = b[c | 5] = (g & 1024) >> 9 | (g & 4) >> 2, f[h | 3] = d[c | 3] = e[h | 4] = b[c | 4] = (g & 2048) >> 10 | (g & 8) >> 3, f[h | 4] = d[c | 4] = e[h | 3] = b[c | 3] = (g & 4096) >> 11 | (g & 16) >> 4, f[h | 5] = d[c | 5] = e[h | 2] = b[c | 2] = (g & 8192) >> 12 |
        (g & 32) >> 5, f[h | 6] = d[c | 6] = e[h | 1] = b[c | 1] = (g & 16384) >> 13 | (g & 64) >> 6, f[h | 7] = d[c | 7] = e[h] = b[c] = (g & 32768) >> 14 | (g & 128) >> 7, c += 8, h -= 8, a += 2; while (-1 < h)
};
GameBoyCore.prototype.generateGBCTileLineBank2 = function(a) {
    var c = this.VRAM[1 | a] << 8 | this.VRAM[8190 & a],
        b = this.tileCache[2048 | a >> 4],
        d = this.tileCache[2560 | a >> 4],
        e = this.tileCache[3072 | a >> 4],
        f = this.tileCache[3584 | a >> 4];
    a = (a & 14) << 2;
    var g = 56 - a;
    f[g] = d[a] = e[g | 7] = b[a | 7] = (c & 256) >> 7 | c & 1;
    f[g | 1] = d[a | 1] = e[g | 6] = b[a | 6] = (c & 512) >> 8 | (c & 2) >> 1;
    f[g | 2] = d[a | 2] = e[g | 5] = b[a | 5] = (c & 1024) >> 9 | (c & 4) >> 2;
    f[g | 3] = d[a | 3] = e[g | 4] = b[a | 4] = (c & 2048) >> 10 | (c & 8) >> 3;
    f[g | 4] = d[a | 4] = e[g | 3] = b[a | 3] = (c & 4096) >> 11 | (c & 16) >> 4;
    f[g | 5] = d[a | 5] = e[g | 2] = b[a | 2] =
        (c & 8192) >> 12 | (c & 32) >> 5;
    f[g | 6] = d[a | 6] = e[g | 1] = b[a | 1] = (c & 16384) >> 13 | (c & 64) >> 6;
    f[g | 7] = d[a | 7] = e[g] = b[a] = (c & 32768) >> 14 | (c & 128) >> 7
};
GameBoyCore.prototype.generateGBCTileBank2 = function(a) {
    var c = a >> 4,
        b = this.tileCache[2048 | c],
        d = this.tileCache[2560 | c],
        e = this.tileCache[3072 | c],
        f = this.tileCache[3584 | c],
        g, c = 0,
        h = 56;
    do g = this.VRAM[1 | a] << 8 | this.VRAM[a], f[h] = d[c] = e[h | 7] = b[c | 7] = (g & 256) >> 7 | g & 1, f[h | 1] = d[c | 1] = e[h | 6] = b[c | 6] = (g & 512) >> 8 | (g & 2) >> 1, f[h | 2] = d[c | 2] = e[h | 5] = b[c | 5] = (g & 1024) >> 9 | (g & 4) >> 2, f[h | 3] = d[c | 3] = e[h | 4] = b[c | 4] = (g & 2048) >> 10 | (g & 8) >> 3, f[h | 4] = d[c | 4] = e[h | 3] = b[c | 3] = (g & 4096) >> 11 | (g & 16) >> 4, f[h | 5] = d[c | 5] = e[h | 2] = b[c | 2] = (g & 8192) >> 12 | (g & 32) >> 5,
        f[h | 6] = d[c | 6] = e[h | 1] = b[c | 1] = (g & 16384) >> 13 | (g & 64) >> 6, f[h | 7] = d[c | 7] = e[h] = b[c] = (g & 32768) >> 14 | (g & 128) >> 7, c += 8, h -= 8, a += 2; while (-1 < h)
};
GameBoyCore.prototype.generateGBOAMTileLine = function(a) {
    var c = this.memory[1 | a] << 8 | this.memory[40958 & a];
    a &= 8190;
    var b = this.tileCache[a >> 4],
        d = this.tileCache[512 | a >> 4],
        e = this.tileCache[1024 | a >> 4],
        f = this.tileCache[1536 | a >> 4];
    a = (a & 14) << 2;
    var g = 56 - a;
    f[g] = d[a] = e[g | 7] = b[a | 7] = (c & 256) >> 7 | c & 1;
    f[g | 1] = d[a | 1] = e[g | 6] = b[a | 6] = (c & 512) >> 8 | (c & 2) >> 1;
    f[g | 2] = d[a | 2] = e[g | 5] = b[a | 5] = (c & 1024) >> 9 | (c & 4) >> 2;
    f[g | 3] = d[a | 3] = e[g | 4] = b[a | 4] = (c & 2048) >> 10 | (c & 8) >> 3;
    f[g | 4] = d[a | 4] = e[g | 3] = b[a | 3] = (c & 4096) >> 11 | (c & 16) >> 4;
    f[g | 5] = d[a | 5] = e[g | 2] =
        b[a | 2] = (c & 8192) >> 12 | (c & 32) >> 5;
    f[g | 6] = d[a | 6] = e[g | 1] = b[a | 1] = (c & 16384) >> 13 | (c & 64) >> 6;
    f[g | 7] = d[a | 7] = e[g] = b[a] = (c & 32768) >> 14 | (c & 128) >> 7
};
GameBoyCore.prototype.graphicsJIT = function() {
    this.LCDisOn && (this.totalLinesPassed = 0, this.graphicsJITScanlineGroup())
};
GameBoyCore.prototype.graphicsJITVBlank = function() {
    this.totalLinesPassed += this.queuedScanLines;
    this.graphicsJITScanlineGroup()
};
GameBoyCore.prototype.graphicsJITScanlineGroup = function() {
    for (; 0 < this.queuedScanLines;) this.renderScanLine(this.lastUnrenderedLine), 143 > this.lastUnrenderedLine ? ++this.lastUnrenderedLine : this.lastUnrenderedLine = 0, --this.queuedScanLines
};
GameBoyCore.prototype.incrementScanLineQueue = function() {
    144 > this.queuedScanLines ? ++this.queuedScanLines : (this.currentX = 0, this.midScanlineOffset = -1, 143 > this.lastUnrenderedLine ? ++this.lastUnrenderedLine : this.lastUnrenderedLine = 0)
};
GameBoyCore.prototype.midScanLineJIT = function() {
    this.graphicsJIT();
    this.renderMidScanLine()
};
GameBoyCore.prototype.launchIRQ = function() {
    var a = 0,
        c = 1;
    do {
        if ((c & this.IRQLineMatched) == c) {
            this.IME = !1;
            this.interruptsRequested -= c;
            this.IRQLineMatched = 0;
            this.CPUTicks = 20;
            this.stackPointer = this.stackPointer - 1 & 65535;
            this.memoryWriter[this.stackPointer](this, this.stackPointer, this.programCounter >> 8);
            this.stackPointer = this.stackPointer - 1 & 65535;
            this.memoryWriter[this.stackPointer](this, this.stackPointer, this.programCounter & 255);
            this.programCounter = 64 | a << 3;
            this.updateCore();
            break
        }
        c = 1 << ++a
    } while (5 > a)
};
GameBoyCore.prototype.checkIRQMatching = function() {
    this.IME && (this.IRQLineMatched = this.interruptsEnabled & this.interruptsRequested & 31)
};
GameBoyCore.prototype.calculateHALTPeriod = function() {
    if (this.halt) a = this.remainingClocks;
    else {
        this.halt = !0;
        var a = -1,
            c;
        this.LCDisOn && (1 == (this.interruptsEnabled & 1) && (a = 456 * ((1 == this.modeSTAT ? 298 : 144) - this.actualScanLine) - this.LCDTicks << this.doubleSpeedShifter), 2 == (this.interruptsEnabled & 2)) && (this.mode0TriggerSTAT && (c = this.clocksUntilMode0() - this.LCDTicks << this.doubleSpeedShifter, c <= a || -1 == a) && (a = c), this.mode1TriggerSTAT && 0 == (this.interruptsEnabled & 1) && (c = 456 * ((1 == this.modeSTAT ? 298 : 144) - this.actualScanLine) -
            this.LCDTicks << this.doubleSpeedShifter, c <= a || -1 == a) && (a = c), this.mode2TriggerSTAT && (c = (143 <= this.actualScanLine ? 456 * (154 - this.actualScanLine) : 456) - this.LCDTicks << this.doubleSpeedShifter, c <= a || -1 == a) && (a = c), this.LYCMatchTriggerSTAT && 153 >= this.memory[65349] && (c = this.clocksUntilLYCMatch() - this.LCDTicks << this.doubleSpeedShifter, c <= a || -1 == a) && (a = c));
        this.TIMAEnabled && 4 == (this.interruptsEnabled & 4) && (c = (256 - this.memory[65285]) * this.TACClocker - this.timerTicks, c <= a || -1 == a) && (a = c);
        0 < this.serialTimer && 8 == (this.interruptsEnabled &
            8) && (this.serialTimer <= a || -1 == a) && (a = this.serialTimer)
    }
    c = this.CPUCyclesTotal - this.emulatorTicks << this.doubleSpeedShifter;
    0 <= a ? a <= c ? (this.CPUTicks = Math.max(a, this.CPUTicks), this.updateCoreFull(), this.halt = !1, this.CPUTicks = 0) : (this.CPUTicks = Math.max(c, this.CPUTicks), this.remainingClocks = a - this.CPUTicks) : this.CPUTicks += c
};
GameBoyCore.prototype.memoryRead = function(a) {
    return this.memoryReader[a](this, a)
};
GameBoyCore.prototype.memoryHighRead = function(a) {
    return this.memoryHighReader[a](this, a)
};
GameBoyCore.prototype.memoryReadJumpCompile = function() {
    for (var a = 0; 65535 >= a; a++)
        if (16384 > a) this.memoryReader[a] = this.memoryReadNormal;
        else if (32768 > a) this.memoryReader[a] = this.memoryReadROM;
    else if (38912 > a) this.memoryReader[a] = this.cGBC ? this.VRAMDATAReadCGBCPU : this.VRAMDATAReadDMGCPU;
    else if (40960 > a) this.memoryReader[a] = this.cGBC ? this.VRAMCHRReadCGBCPU : this.VRAMCHRReadDMGCPU;
    else if (40960 <= a && 49152 > a) this.memoryReader[a] = .0625 == this.numRAMBanks && 41472 > a || 1 <= this.numRAMBanks ? this.cMBC7 ? this.memoryReadMBC7 :
        this.cMBC3 ? this.memoryReadMBC3 : this.memoryReadMBC : this.memoryReadBAD;
    else if (49152 <= a && 57344 > a) this.memoryReader[a] = !this.cGBC || 53248 > a ? this.memoryReadNormal : this.memoryReadGBCMemory;
    else if (57344 <= a && 65024 > a) this.memoryReader[a] = !this.cGBC || 61440 > a ? this.memoryReadECHONormal : this.memoryReadECHOGBCMemory;
    else if (65184 > a) this.memoryReader[a] = this.memoryReadOAM;
    else if (this.cGBC && 65184 <= a && 65280 > a) this.memoryReader[a] = this.memoryReadNormal;
    else if (65280 <= a) switch (a) {
        case 65280:
            this.memoryHighReader[0] =
                this.memoryReader[65280] = function(a, b) {
                    return 192 | a.memory[65280]
                };
            break;
        case 65281:
            this.memoryHighReader[1] = this.memoryReader[65281] = function(a, b) {
                return 128 > a.memory[65282] ? a.memory[65281] : 255
            };
            break;
        case 65282:
            this.memoryHighReader[2] = this.cGBC ? this.memoryReader[65282] = function(a, b) {
                return (0 >= a.serialTimer ? 124 : 252) | a.memory[65282]
            } : this.memoryReader[65282] = function(a, b) {
                return (0 >= a.serialTimer ? 126 : 254) | a.memory[65282]
            };
            break;
        case 65284:
            this.memoryHighReader[4] = this.memoryReader[65284] = function(a,
                b) {
                a.memory[65284] = a.memory[65284] + (a.DIVTicks >> 8) & 255;
                a.DIVTicks &= 255;
                return a.memory[65284]
            };
            break;
        case 65287:
            this.memoryHighReader[7] = this.memoryReader[65287] = function(a, b) {
                return 248 | a.memory[65287]
            };
            break;
        case 65295:
            this.memoryHighReader[15] = this.memoryReader[65295] = function(a, b) {
                return 224 | a.interruptsRequested
            };
            break;
        case 65296:
            this.memoryHighReader[16] = this.memoryReader[65296] = function(a, b) {
                return 128 | a.memory[65296]
            };
            break;
        case 65297:
            this.memoryHighReader[17] = this.memoryReader[65297] = function(a,
                b) {
                return 63 | a.memory[65297]
            };
            break;
        case 65299:
            this.memoryHighReader[19] = this.memoryReader[65299] = this.memoryReadBAD;
            break;
        case 65300:
            this.memoryHighReader[20] = this.memoryReader[65300] = function(a, b) {
                return 191 | a.memory[65300]
            };
            break;
        case 65302:
            this.memoryHighReader[22] = this.memoryReader[65302] = function(a, b) {
                return 63 | a.memory[65302]
            };
            break;
        case 65304:
            this.memoryHighReader[24] = this.memoryReader[65304] = this.memoryReadBAD;
            break;
        case 65305:
            this.memoryHighReader[25] = this.memoryReader[65305] = function(a,
                b) {
                return 191 | a.memory[65305]
            };
            break;
        case 65306:
            this.memoryHighReader[26] = this.memoryReader[65306] = function(a, b) {
                return 127 | a.memory[65306]
            };
            break;
        case 65307:
            this.memoryHighReader[27] = this.memoryReader[65307] = this.memoryReadBAD;
            break;
        case 65308:
            this.memoryHighReader[28] = this.memoryReader[65308] = function(a, b) {
                return 159 | a.memory[65308]
            };
            break;
        case 65309:
            this.memoryHighReader[29] = this.memoryReader[65309] = function(a, b) {
                return 255
            };
            break;
        case 65310:
            this.memoryHighReader[30] = this.memoryReader[65310] = function(a,
                b) {
                return 191 | a.memory[65310]
            };
            break;
        case 65311:
        case 65312:
            this.memoryHighReader[a & 255] = this.memoryReader[a] = this.memoryReadBAD;
            break;
        case 65315:
            this.memoryHighReader[35] = this.memoryReader[65315] = function(a, b) {
                return 191 | a.memory[65315]
            };
            break;
        case 65318:
            this.memoryHighReader[38] = this.memoryReader[65318] = function(a, b) {
                a.audioJIT();
                return 112 | a.memory[65318]
            };
            break;
        case 65319:
        case 65320:
        case 65321:
        case 65322:
        case 65323:
        case 65324:
        case 65325:
        case 65326:
        case 65327:
            this.memoryHighReader[a & 255] = this.memoryReader[a] =
                this.memoryReadBAD;
            break;
        case 65328:
        case 65329:
        case 65330:
        case 65331:
        case 65332:
        case 65333:
        case 65334:
        case 65335:
        case 65336:
        case 65337:
        case 65338:
        case 65339:
        case 65340:
        case 65341:
        case 65342:
        case 65343:
            this.memoryReader[a] = function(a, b) {
                return a.channel3canPlay ? a.memory[65280 | a.channel3lastSampleLookup >> 1] : a.memory[b]
            };
            this.memoryHighReader[a & 255] = function(a, b) {
                return a.channel3canPlay ? a.memory[65280 | a.channel3lastSampleLookup >> 1] : a.memory[65280 | b]
            };
            break;
        case 65345:
            this.memoryHighReader[65] = this.memoryReader[65345] =
                function(a, b) {
                    return 128 | a.memory[65345] | a.modeSTAT
                };
            break;
        case 65346:
            this.memoryHighReader[66] = this.memoryReader[65346] = function(a, b) {
                return a.backgroundY
            };
            break;
        case 65347:
            this.memoryHighReader[67] = this.memoryReader[65347] = function(a, b) {
                return a.backgroundX
            };
            break;
        case 65348:
            this.memoryHighReader[68] = this.memoryReader[65348] = function(a, b) {
                return a.LCDisOn ? a.memory[65348] : 0
            };
            break;
        case 65354:
            this.memoryHighReader[74] = this.memoryReader[65354] = function(a, b) {
                return a.windowY
            };
            break;
        case 65359:
            this.memoryHighReader[79] =
                this.memoryReader[65359] = function(a, b) {
                    return a.currVRAMBank
                };
            break;
        case 65365:
            this.cGBC ? this.memoryHighReader[85] = this.memoryReader[65365] = function(a, b) {
                !a.LCDisOn && a.hdmaRunning && (a.DMAWrite((a.memory[65365] & 127) + 1), a.memory[65365] = 255, a.hdmaRunning = !1);
                return a.memory[65365]
            } : (this.memoryReader[65365] = this.memoryReadNormal, this.memoryHighReader[85] = this.memoryHighReadNormal);
            break;
        case 65366:
            this.cGBC ? this.memoryHighReader[86] = this.memoryReader[65366] = function(a, b) {
                return 60 | (192 <= a.memory[65366] ?
                    2 | a.memory[65366] & 193 : a.memory[65366] & 195)
            } : (this.memoryReader[65366] = this.memoryReadNormal, this.memoryHighReader[86] = this.memoryHighReadNormal);
            break;
        case 65388:
            this.memoryHighReader[108] = this.cGBC ? this.memoryReader[65388] = function(a, b) {
                return 254 | a.memory[65388]
            } : this.memoryReader[65388] = this.memoryReadBAD;
            break;
        case 65392:
            this.memoryHighReader[112] = this.cGBC ? this.memoryReader[65392] = function(a, b) {
                return 64 | a.memory[65392]
            } : this.memoryReader[65392] = this.memoryReadBAD;
            break;
        case 65397:
            this.memoryHighReader[117] =
                this.memoryReader[65397] = function(a, b) {
                    return 143 | a.memory[65397]
                };
            break;
        case 65398:
        case 65399:
            this.memoryHighReader[a & 255] = this.memoryReader[a] = function(a, b) {
                return 0
            };
            break;
        case 65535:
            this.memoryHighReader[255] = this.memoryReader[65535] = function(a, b) {
                return a.interruptsEnabled
            };
            break;
        default:
            this.memoryReader[a] = this.memoryReadNormal, this.memoryHighReader[a & 255] = this.memoryHighReadNormal
    } else this.memoryReader[a] = this.memoryReadBAD
};
GameBoyCore.prototype.memoryReadNormal = function(a, c) {
    return a.memory[c]
};
GameBoyCore.prototype.memoryHighReadNormal = function(a, c) {
    return a.memory[65280 | c]
};
GameBoyCore.prototype.memoryReadROM = function(a, c) {
    return a.ROM[a.currentROMBank + c]
};
GameBoyCore.prototype.memoryReadMBC = function(a, c) {
    return a.MBCRAMBanksEnabled || settings[10] ? a.MBCRam[c + a.currMBCRAMBankPosition] : 255
};
GameBoyCore.prototype.memoryReadMBC7 = function(a, c) {
    if (a.MBCRAMBanksEnabled || settings[10]) switch (c) {
        case 40960:
        case 41056:
        case 41072:
            return 0;
        case 41088:
            return 0;
        case 41040:
            return a.highY;
        case 41024:
            return a.lowY;
        case 41008:
            return a.highX;
        case 40992:
            return a.lowX;
        default:
            return a.MBCRam[c + a.currMBCRAMBankPosition]
    }
    return 255
};
GameBoyCore.prototype.memoryReadMBC3 = function(a, c) {
    if (a.MBCRAMBanksEnabled || settings[10]) switch (a.currMBCRAMBank) {
        case 0:
        case 1:
        case 2:
        case 3:
            return a.MBCRam[c + a.currMBCRAMBankPosition];
        case 8:
            return a.latchedSeconds;
        case 9:
            return a.latchedMinutes;
        case 10:
            return a.latchedHours;
        case 11:
            return a.latchedLDays;
        case 12:
            return (a.RTCDayOverFlow ? 128 : 0) + (a.RTCHALT ? 64 : 0) + a.latchedHDays
    }
    return 255
};
GameBoyCore.prototype.memoryReadGBCMemory = function(a, c) {
    return a.GBCMemory[c + a.gbcRamBankPosition]
};
GameBoyCore.prototype.memoryReadOAM = function(a, c) {
    return 1 < a.modeSTAT ? 255 : a.memory[c]
};
GameBoyCore.prototype.memoryReadECHOGBCMemory = function(a, c) {
    return a.GBCMemory[c + a.gbcRamBankPositionECHO]
};
GameBoyCore.prototype.memoryReadECHONormal = function(a, c) {
    return a.memory[c - 8192]
};
GameBoyCore.prototype.memoryReadBAD = function(a, c) {
    return 255
};
GameBoyCore.prototype.VRAMDATAReadCGBCPU = function(a, c) {
    return 2 < a.modeSTAT ? 255 : 0 == a.currVRAMBank ? a.memory[c] : a.VRAM[c & 8191]
};
GameBoyCore.prototype.VRAMDATAReadDMGCPU = function(a, c) {
    return 2 < a.modeSTAT ? 255 : a.memory[c]
};
GameBoyCore.prototype.VRAMCHRReadCGBCPU = function(a, c) {
    return 2 < a.modeSTAT ? 255 : a.BGCHRCurrentBank[c & 2047]
};
GameBoyCore.prototype.VRAMCHRReadDMGCPU = function(a, c) {
    return 2 < a.modeSTAT ? 255 : a.BGCHRBank1[c & 2047]
};
GameBoyCore.prototype.setCurrentMBC1ROMBank = function() {
    switch (this.ROMBank1offs) {
        case 0:
        case 32:
        case 64:
        case 96:
            this.currentROMBank = this.ROMBank1offs % this.ROMBankEdge << 14;
            break;
        default:
            this.currentROMBank = this.ROMBank1offs % this.ROMBankEdge - 1 << 14
    }
};
GameBoyCore.prototype.setCurrentMBC2AND3ROMBank = function() {
    this.currentROMBank = Math.max(this.ROMBank1offs % this.ROMBankEdge - 1, 0) << 14
};
GameBoyCore.prototype.setCurrentMBC5ROMBank = function() {
    this.currentROMBank = this.ROMBank1offs % this.ROMBankEdge - 1 << 14
};
GameBoyCore.prototype.memoryWrite = function(a, c) {
    this.memoryWriter[a](this, a, c)
};
GameBoyCore.prototype.memoryHighWrite = function(a, c) {
    this.memoryHighWriter[a](this, a, c)
};
GameBoyCore.prototype.memoryWriteJumpCompile = function() {
    for (var a = 0; 65535 >= a; a++) 32768 > a ? this.memoryWriter[a] = this.cMBC1 ? 8192 > a ? this.MBCWriteEnable : 16384 > a ? this.MBC1WriteROMBank : 24576 > a ? this.MBC1WriteRAMBank : this.MBC1WriteType : this.cMBC2 ? 4096 > a ? this.MBCWriteEnable : 8448 <= a && 8704 > a ? this.MBC2WriteROMBank : this.cartIgnoreWrite : this.cMBC3 ? 8192 > a ? this.MBCWriteEnable : 16384 > a ? this.MBC3WriteROMBank : 24576 > a ? this.MBC3WriteRAMBank : this.MBC3WriteRTCLatch : this.cMBC5 || this.cRUMBLE || this.cMBC7 ? 8192 > a ? this.MBCWriteEnable :
        12288 > a ? this.MBC5WriteROMBankLow : 16384 > a ? this.MBC5WriteROMBankHigh : 24576 > a ? this.cRUMBLE ? this.RUMBLEWriteRAMBank : this.MBC5WriteRAMBank : this.cartIgnoreWrite : this.cHuC3 ? 8192 > a ? this.MBCWriteEnable : 16384 > a ? this.MBC3WriteROMBank : 24576 > a ? this.HuC3WriteRAMBank : this.cartIgnoreWrite : this.cartIgnoreWrite : 36864 > a ? this.memoryWriter[a] = this.cGBC ? this.VRAMGBCDATAWrite : this.VRAMGBDATAWrite : 38912 > a ? this.memoryWriter[a] = this.cGBC ? this.VRAMGBCDATAWrite : this.VRAMGBDATAUpperWrite : 40960 > a ? this.memoryWriter[a] = this.cGBC ?
        this.VRAMGBCCHRMAPWrite : this.VRAMGBCHRMAPWrite : 49152 > a ? this.memoryWriter[a] = .0625 == this.numRAMBanks && 41472 > a || 1 <= this.numRAMBanks ? this.cMBC3 ? this.memoryWriteMBC3RAM : this.memoryWriteMBCRAM : this.cartIgnoreWrite : 57344 > a ? this.memoryWriter[a] = this.cGBC && 53248 <= a ? this.memoryWriteGBCRAM : this.memoryWriteNormal : 65024 > a ? this.memoryWriter[a] = this.cGBC && 61440 <= a ? this.memoryWriteECHOGBCRAM : this.memoryWriteECHONormal : 65184 >= a ? this.memoryWriter[a] = this.memoryWriteOAMRAM : 65280 > a ? this.memoryWriter[a] = this.cGBC ? this.memoryWriteNormal :
        this.cartIgnoreWrite : (this.memoryWriter[a] = this.memoryWriteNormal, this.memoryHighWriter[a & 255] = this.memoryHighWriteNormal);
    this.registerWriteJumpCompile()
};
GameBoyCore.prototype.MBCWriteEnable = function(a, c, b) {
    a.MBCRAMBanksEnabled = 10 == (b & 15)
};
GameBoyCore.prototype.MBC1WriteROMBank = function(a, c, b) {
    a.ROMBank1offs = a.ROMBank1offs & 96 | b & 31;
    a.setCurrentMBC1ROMBank()
};
GameBoyCore.prototype.MBC1WriteRAMBank = function(a, c, b) {
    a.MBC1Mode ? (a.currMBCRAMBank = b & 3, a.currMBCRAMBankPosition = (a.currMBCRAMBank << 13) - 40960) : (a.ROMBank1offs = (b & 3) << 5 | a.ROMBank1offs & 31, a.setCurrentMBC1ROMBank())
};
GameBoyCore.prototype.MBC1WriteType = function(a, c, b) {
    a.MBC1Mode = 1 == (b & 1);
    a.MBC1Mode ? (a.ROMBank1offs &= 31, a.setCurrentMBC1ROMBank()) : (a.currMBCRAMBank = 0, a.currMBCRAMBankPosition = -40960)
};
GameBoyCore.prototype.MBC2WriteROMBank = function(a, c, b) {
    a.ROMBank1offs = b & 15;
    a.setCurrentMBC2AND3ROMBank()
};
GameBoyCore.prototype.MBC3WriteROMBank = function(a, c, b) {
    a.ROMBank1offs = b & 127;
    a.setCurrentMBC2AND3ROMBank()
};
GameBoyCore.prototype.MBC3WriteRAMBank = function(a, c, b) {
    a.currMBCRAMBank = b;
    4 > b && (a.currMBCRAMBankPosition = (a.currMBCRAMBank << 13) - 40960)
};
GameBoyCore.prototype.MBC3WriteRTCLatch = function(a, c, b) {
    0 == b ? a.RTCisLatched = !1 : a.RTCisLatched || (a.RTCisLatched = !0, a.latchedSeconds = a.RTCSeconds | 0, a.latchedMinutes = a.RTCMinutes, a.latchedHours = a.RTCHours, a.latchedLDays = a.RTCDays & 255, a.latchedHDays = a.RTCDays >> 8)
};
GameBoyCore.prototype.MBC5WriteROMBankLow = function(a, c, b) {
    a.ROMBank1offs = a.ROMBank1offs & 256 | b;
    a.setCurrentMBC5ROMBank()
};
GameBoyCore.prototype.MBC5WriteROMBankHigh = function(a, c, b) {
    a.ROMBank1offs = (b & 1) << 8 | a.ROMBank1offs & 255;
    a.setCurrentMBC5ROMBank()
};
GameBoyCore.prototype.MBC5WriteRAMBank = function(a, c, b) {
    a.currMBCRAMBank = b & 15;
    a.currMBCRAMBankPosition = (a.currMBCRAMBank << 13) - 40960
};
GameBoyCore.prototype.RUMBLEWriteRAMBank = function(a, c, b) {
    a.currMBCRAMBank = b & 3;
    a.currMBCRAMBankPosition = (a.currMBCRAMBank << 13) - 40960
};
GameBoyCore.prototype.HuC3WriteRAMBank = function(a, c, b) {
    a.currMBCRAMBank = b & 3;
    a.currMBCRAMBankPosition = (a.currMBCRAMBank << 13) - 40960
};
GameBoyCore.prototype.cartIgnoreWrite = function(a, c, b) {};
GameBoyCore.prototype.memoryWriteNormal = function(a, c, b) {
    a.memory[c] = b
};
GameBoyCore.prototype.memoryHighWriteNormal = function(a, c, b) {
    a.memory[65280 | c] = b
};
GameBoyCore.prototype.memoryWriteMBCRAM = function(a, c, b) {
    if (a.MBCRAMBanksEnabled || settings[10]) a.MBCRam[c + a.currMBCRAMBankPosition] = b
};
GameBoyCore.prototype.memoryWriteMBC3RAM = function(a, c, b) {
    if (a.MBCRAMBanksEnabled || settings[10]) switch (a.currMBCRAMBank) {
        case 0:
        case 1:
        case 2:
        case 3:
            a.MBCRam[c + a.currMBCRAMBankPosition] = b;
            break;
        case 8:
            60 > b ? a.RTCSeconds = b : cout("(Bank #" + a.currMBCRAMBank + ") RTC write out of range: " + b, 1);
            break;
        case 9:
            60 > b ? a.RTCMinutes = b : cout("(Bank #" + a.currMBCRAMBank + ") RTC write out of range: " + b, 1);
            break;
        case 10:
            24 > b ? a.RTCHours = b : cout("(Bank #" + a.currMBCRAMBank + ") RTC write out of range: " + b, 1);
            break;
        case 11:
            a.RTCDays =
                b & 255 | a.RTCDays & 256;
            break;
        case 12:
            a.RTCDayOverFlow = 127 < b;
            a.RTCHalt = 64 == (b & 64);
            a.RTCDays = (b & 1) << 8 | a.RTCDays & 255;
            break;
        default:
            cout("Invalid MBC3 bank address selected: " + a.currMBCRAMBank, 0)
    }
};
GameBoyCore.prototype.memoryWriteGBCRAM = function(a, c, b) {
    a.GBCMemory[c + a.gbcRamBankPosition] = b
};
GameBoyCore.prototype.memoryWriteOAMRAM = function(a, c, b) {
    2 > a.modeSTAT && a.memory[c] != b && (a.graphicsJIT(), a.memory[c] = b)
};
GameBoyCore.prototype.memoryWriteECHOGBCRAM = function(a, c, b) {
    a.GBCMemory[c + a.gbcRamBankPositionECHO] = b
};
GameBoyCore.prototype.memoryWriteECHONormal = function(a, c, b) {
    a.memory[c - 8192] = b
};
GameBoyCore.prototype.VRAMGBDATAWrite = function(a, c, b) {
    3 > a.modeSTAT && a.memory[c] != b && (a.graphicsJIT(), a.memory[c] = b, a.generateGBOAMTileLine(c))
};
GameBoyCore.prototype.VRAMGBDATAUpperWrite = function(a, c, b) {
    3 > a.modeSTAT && a.memory[c] != b && (a.graphicsJIT(), a.memory[c] = b, a.generateGBTileLine(c))
};
GameBoyCore.prototype.VRAMGBCDATAWrite = function(a, c, b) {
    3 > a.modeSTAT && (0 == a.currVRAMBank ? a.memory[c] != b && (a.graphicsJIT(), a.memory[c] = b, a.generateGBCTileLineBank1(c)) : (c &= 8191, a.VRAM[c] != b && (a.graphicsJIT(), a.VRAM[c] = b, a.generateGBCTileLineBank2(c))))
};
GameBoyCore.prototype.VRAMGBCHRMAPWrite = function(a, c, b) {
    3 > a.modeSTAT && (c &= 2047, a.BGCHRBank1[c] != b && (a.graphicsJIT(), a.BGCHRBank1[c] = b))
};
GameBoyCore.prototype.VRAMGBCCHRMAPWrite = function(a, c, b) {
    3 > a.modeSTAT && (c &= 2047, a.BGCHRCurrentBank[c] != b && (a.graphicsJIT(), a.BGCHRCurrentBank[c] = b))
};
GameBoyCore.prototype.DMAWrite = function(a) {
    this.halt || (this.CPUTicks += 4 | a << 5 << this.doubleSpeedShifter);
    var c = this.memory[65361] << 8 | this.memory[65362],
        b = this.memory[65363] << 8 | this.memory[65364],
        d = this.memoryReader;
    this.graphicsJIT();
    var e = this.memory;
    if (0 == this.currVRAMBank) {
        do 6144 > b ? (e[32768 | b] = d[c](this, c++), e[32769 | b] = d[c](this, c++), e[32770 | b] = d[c](this, c++), e[32771 | b] = d[c](this, c++), e[32772 | b] = d[c](this, c++), e[32773 | b] = d[c](this, c++), e[32774 | b] = d[c](this, c++), e[32775 | b] = d[c](this, c++), e[32776 |
            b] = d[c](this, c++), e[32777 | b] = d[c](this, c++), e[32778 | b] = d[c](this, c++), e[32779 | b] = d[c](this, c++), e[32780 | b] = d[c](this, c++), e[32781 | b] = d[c](this, c++), e[32782 | b] = d[c](this, c++), e[32783 | b] = d[c](this, c++), this.generateGBCTileBank1(b), b += 16) : (b &= 2032, this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] =
            d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), this.BGCHRBank1[b++] = d[c](this, c++), b = b + 6144 & 8176), c &= 65520, --a; while (0 < a)
    } else {
        var f = this.VRAM;
        do 6144 > b ? (f[b] = d[c](this, c++), f[b | 1] = d[c](this, c++), f[b | 2] = d[c](this, c++), f[b | 3] = d[c](this, c++), f[b | 4] = d[c](this, c++), f[b | 5] = d[c](this, c++),
            f[b | 6] = d[c](this, c++), f[b | 7] = d[c](this, c++), f[b | 8] = d[c](this, c++), f[b | 9] = d[c](this, c++), f[b | 10] = d[c](this, c++), f[b | 11] = d[c](this, c++), f[b | 12] = d[c](this, c++), f[b | 13] = d[c](this, c++), f[b | 14] = d[c](this, c++), f[b | 15] = d[c](this, c++), this.generateGBCTileBank2(b), b += 16) : (b &= 2032, this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] =
            d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), this.BGCHRBank2[b++] = d[c](this, c++), b = b + 6144 & 8176), c &= 65520, --a; while (0 < a)
    }
    e[65361] = c >> 8;
    e[65362] = c & 240;
    e[65363] = b >> 8;
    e[65364] = b & 240
};
GameBoyCore.prototype.registerWriteJumpCompile = function() {
    this.memoryHighWriter[0] = this.memoryWriter[65280] = function(a, c, b) {
        a.memory[65280] = b & 48 | (0 == (b & 32) ? a.JoyPad >> 4 : 15) & (0 == (b & 16) ? a.JoyPad & 15 : 15)
    };
    this.memoryHighWriter[1] = this.memoryWriter[65281] = function(a, c, b) {
        128 > a.memory[65282] && (a.memory[65281] = b)
    };
    this.memoryHighWriter[4] = this.memoryWriter[65284] = function(a, c, b) {
        a.DIVTicks &= 255;
        a.memory[65284] = 0
    };
    this.memoryHighWriter[5] = this.memoryWriter[65285] = function(a, c, b) {
        a.memory[65285] = b
    };
    this.memoryHighWriter[6] =
        this.memoryWriter[65286] = function(a, c, b) {
            a.memory[65286] = b
        };
    this.memoryHighWriter[7] = this.memoryWriter[65287] = function(a, c, b) {
        a.memory[65287] = b & 7;
        a.TIMAEnabled = 4 == (b & 4);
        a.TACClocker = Math.pow(4, 0 != (b & 3) ? b & 3 : 4) << 2
    };
    this.memoryHighWriter[15] = this.memoryWriter[65295] = function(a, c, b) {
        a.interruptsRequested = b;
        a.checkIRQMatching()
    };
    this.memoryHighWriter[16] = this.memoryWriter[65296] = function(a, c, b) {
        a.soundMasterEnabled && (a.audioJIT(), a.channel1decreaseSweep && 0 == (b & 8) && a.channel1numSweep != a.channel1frequencySweepDivider &&
            (a.channel1SweepFault = !0), a.channel1lastTimeSweep = (b & 112) >> 4, a.channel1frequencySweepDivider = b & 7, a.channel1decreaseSweep = 8 == (b & 8), a.memory[65296] = b, a.channel1EnableCheck())
    };
    this.memoryHighWriter[17] = this.memoryWriter[65297] = function(a, c, b) {
        if (a.soundMasterEnabled || !a.cGBC) a.soundMasterEnabled ? a.audioJIT() : b &= 63, a.channel1CachedDuty = a.dutyLookup[b >> 6], a.channel1totalLength = 64 - (b & 63), a.memory[65297] = b & 192, a.channel1EnableCheck()
    };
    this.memoryHighWriter[18] = this.memoryWriter[65298] = function(a, c, b) {
        a.soundMasterEnabled &&
            (a.audioJIT(), a.channel1Enabled && 0 == a.channel1envelopeSweeps && (8 == ((a.memory[65298] ^ b) & 8) ? (0 == (a.memory[65298] & 8) && (7 == (a.memory[65298] & 7) ? a.channel1envelopeVolume += 2 : ++a.channel1envelopeVolume), a.channel1envelopeVolume = 16 - a.channel1envelopeVolume & 15) : 8 == (a.memory[65298] & 15) && (a.channel1envelopeVolume = 1 + a.channel1envelopeVolume & 15), a.channel1OutputLevelCache()), a.channel1envelopeType = 8 == (b & 8), a.memory[65298] = b, a.channel1VolumeEnableCheck())
    };
    this.memoryHighWriter[19] = this.memoryWriter[65299] = function(a,
        c, b) {
        a.soundMasterEnabled && (a.audioJIT(), a.channel1frequency = a.channel1frequency & 1792 | b, a.channel1FrequencyTracker = 2048 - a.channel1frequency << 2, a.memory[65299] = b)
    };
    this.memoryHighWriter[20] = this.memoryWriter[65300] = function(a, c, b) {
        a.soundMasterEnabled && (a.audioJIT(), a.channel1consecutive = 0 == (b & 64), a.channel1frequency = (b & 7) << 8 | a.channel1frequency & 255, a.channel1FrequencyTracker = 2048 - a.channel1frequency << 2, 127 < b && (a.channel1timeSweep = a.channel1lastTimeSweep, a.channel1numSweep = a.channel1frequencySweepDivider,
            c = a.memory[65298], a.channel1envelopeVolume = c >> 4, a.channel1OutputLevelCache(), a.channel1envelopeSweepsLast = (c & 7) - 1, 0 == a.channel1totalLength && (a.channel1totalLength = 64), a.memory[65318] = 0 < a.channel1lastTimeSweep || 0 < a.channel1frequencySweepDivider ? a.memory[65318] | 1 : a.memory[65318] & 254, 64 == (b & 64) && (a.memory[65318] |= 1), a.channel1ShadowFrequency = a.channel1frequency, a.channel1SweepFault = !1, a.runAudioSweep()), a.channel1EnableCheck(), a.memory[65300] = b & 64)
    };
    this.memoryHighWriter[22] = this.memoryWriter[65302] =
        function(a, c, b) {
            if (a.soundMasterEnabled || !a.cGBC) a.soundMasterEnabled ? a.audioJIT() : b &= 63, a.channel2CachedDuty = a.dutyLookup[b >> 6], a.channel2totalLength = 64 - (b & 63), a.memory[65302] = b & 192, a.channel2EnableCheck()
        };
    this.memoryHighWriter[23] = this.memoryWriter[65303] = function(a, c, b) {
        a.soundMasterEnabled && (a.audioJIT(), a.channel2Enabled && 0 == a.channel2envelopeSweeps && (8 == ((a.memory[65303] ^ b) & 8) ? (0 == (a.memory[65303] & 8) && (7 == (a.memory[65303] & 7) ? a.channel2envelopeVolume += 2 : ++a.channel2envelopeVolume), a.channel2envelopeVolume =
            16 - a.channel2envelopeVolume & 15) : 8 == (a.memory[65303] & 15) && (a.channel2envelopeVolume = 1 + a.channel2envelopeVolume & 15), a.channel2OutputLevelCache()), a.channel2envelopeType = 8 == (b & 8), a.memory[65303] = b, a.channel2VolumeEnableCheck())
    };
    this.memoryHighWriter[24] = this.memoryWriter[65304] = function(a, c, b) {
        a.soundMasterEnabled && (a.audioJIT(), a.channel2frequency = a.channel2frequency & 1792 | b, a.channel2FrequencyTracker = 2048 - a.channel2frequency << 2, a.memory[65304] = b)
    };
    this.memoryHighWriter[25] = this.memoryWriter[65305] =
        function(a, c, b) {
            a.soundMasterEnabled && (a.audioJIT(), 127 < b && (c = a.memory[65303], a.channel2envelopeVolume = c >> 4, a.channel2OutputLevelCache(), a.channel2envelopeSweepsLast = (c & 7) - 1, 0 == a.channel2totalLength && (a.channel2totalLength = 64), 64 == (b & 64) && (a.memory[65318] |= 2)), a.channel2consecutive = 0 == (b & 64), a.channel2frequency = (b & 7) << 8 | a.channel2frequency & 255, a.channel2FrequencyTracker = 2048 - a.channel2frequency << 2, a.memory[65305] = b & 64, a.channel2EnableCheck())
        };
    this.memoryHighWriter[26] = this.memoryWriter[65306] = function(a,
        c, b) {
        a.soundMasterEnabled && (a.audioJIT(), !a.channel3canPlay && 128 <= b && (a.channel3lastSampleLookup = 0, a.channel3UpdateCache()), a.channel3canPlay = 127 < b, a.channel3canPlay && 127 < a.memory[65306] && !a.channel3consecutive && (a.memory[65318] |= 4), a.memory[65306] = b & 128)
    };
    this.memoryHighWriter[27] = this.memoryWriter[65307] = function(a, c, b) {
        if (a.soundMasterEnabled || !a.cGBC) a.soundMasterEnabled && a.audioJIT(), a.channel3totalLength = 256 - b, a.memory[65307] = b, a.channel3EnableCheck()
    };
    this.memoryHighWriter[28] = this.memoryWriter[65308] =
        function(a, c, b) {
            a.soundMasterEnabled && (a.audioJIT(), b &= 96, a.memory[65308] = b, a.channel3patternType = 0 == b ? 4 : (b >> 5) - 1)
        };
    this.memoryHighWriter[29] = this.memoryWriter[65309] = function(a, c, b) {
        a.soundMasterEnabled && (a.audioJIT(), a.channel3frequency = a.channel3frequency & 1792 | b, a.channel3FrequencyPeriod = 2048 - a.channel3frequency << 1, a.memory[65309] = b)
    };
    this.memoryHighWriter[30] = this.memoryWriter[65310] = function(a, c, b) {
        a.soundMasterEnabled && (a.audioJIT(), 127 < b && (0 == a.channel3totalLength && (a.channel3totalLength = 256),
            a.channel3lastSampleLookup = 0, 64 == (b & 64) && (a.memory[65318] |= 4)), a.channel3consecutive = 0 == (b & 64), a.channel3frequency = (b & 7) << 8 | a.channel3frequency & 255, a.channel3FrequencyPeriod = 2048 - a.channel3frequency << 1, a.memory[65310] = b & 64, a.channel3EnableCheck())
    };
    this.memoryHighWriter[32] = this.memoryWriter[65312] = function(a, c, b) {
        if (a.soundMasterEnabled || !a.cGBC) a.soundMasterEnabled && a.audioJIT(), a.channel4totalLength = 64 - (b & 63), a.memory[65312] = b | 192, a.channel4EnableCheck()
    };
    this.memoryHighWriter[33] = this.memoryWriter[65313] =
        function(a, c, b) {
            a.soundMasterEnabled && (a.audioJIT(), a.channel4Enabled && 0 == a.channel4envelopeSweeps && (8 == ((a.memory[65313] ^ b) & 8) ? (0 == (a.memory[65313] & 8) && (7 == (a.memory[65313] & 7) ? a.channel4envelopeVolume += 2 : ++a.channel4envelopeVolume), a.channel4envelopeVolume = 16 - a.channel4envelopeVolume & 15) : 8 == (a.memory[65313] & 15) && (a.channel4envelopeVolume = 1 + a.channel4envelopeVolume & 15), a.channel4currentVolume = a.channel4envelopeVolume << a.channel4VolumeShifter), a.channel4envelopeType = 8 == (b & 8), a.memory[65313] = b, a.channel4UpdateCache(),
                a.channel4VolumeEnableCheck())
        };
    this.memoryHighWriter[34] = this.memoryWriter[65314] = function(a, c, b) {
        if (a.soundMasterEnabled) {
            a.audioJIT();
            a.channel4FrequencyPeriod = Math.max((b & 7) << 4, 8) << (b >> 4);
            c = b & 8;
            if (8 == c && 32767 == a.channel4BitRange || 0 == c && 127 == a.channel4BitRange) a.channel4lastSampleLookup = 0, a.channel4BitRange = 8 == c ? 127 : 32767, a.channel4VolumeShifter = 8 == c ? 7 : 15, a.channel4currentVolume = a.channel4envelopeVolume << a.channel4VolumeShifter, a.noiseSampleTable = 8 == c ? a.LSFR7Table : a.LSFR15Table;
            a.memory[65314] =
                b;
            a.channel4UpdateCache()
        }
    };
    this.memoryHighWriter[35] = this.memoryWriter[65315] = function(a, c, b) {
        a.soundMasterEnabled && (a.audioJIT(), a.memory[65315] = b, a.channel4consecutive = 0 == (b & 64), 127 < b && (c = a.memory[65313], a.channel4envelopeVolume = c >> 4, a.channel4currentVolume = a.channel4envelopeVolume << a.channel4VolumeShifter, a.channel4envelopeSweepsLast = (c & 7) - 1, 0 == a.channel4totalLength && (a.channel4totalLength = 64), 64 == (b & 64) && (a.memory[65318] |= 8)), a.channel4EnableCheck())
    };
    this.memoryHighWriter[36] = this.memoryWriter[65316] =
        function(a, c, b) {
            a.soundMasterEnabled && a.memory[65316] != b && (a.audioJIT(), a.memory[65316] = b, a.VinLeftChannelMasterVolume = (b >> 4 & 7) + 1, a.VinRightChannelMasterVolume = (b & 7) + 1, a.mixerOutputLevelCache())
        };
    this.memoryHighWriter[37] = this.memoryWriter[65317] = function(a, c, b) {
        a.soundMasterEnabled && a.memory[65317] != b && (a.audioJIT(), a.memory[65317] = b, a.rightChannel1 = 1 == (b & 1), a.rightChannel2 = 2 == (b & 2), a.rightChannel3 = 4 == (b & 4), a.rightChannel4 = 8 == (b & 8), a.leftChannel1 = 16 == (b & 16), a.leftChannel2 = 32 == (b & 32), a.leftChannel3 =
            64 == (b & 64), a.leftChannel4 = 127 < b, a.channel1OutputLevelCache(), a.channel2OutputLevelCache(), a.channel3OutputLevelCache(), a.channel4OutputLevelCache())
    };
    this.memoryHighWriter[38] = this.memoryWriter[65318] = function(a, c, b) {
        a.audioJIT();
        if (!a.soundMasterEnabled && 127 < b) a.memory[65318] = 128, a.soundMasterEnabled = !0, a.initializeAudioStartState();
        else if (a.soundMasterEnabled && 128 > b)
            for (a.memory[65318] = 0, a.soundMasterEnabled = !1, c = 65296; 65318 > c; c++) a.memoryWriter[c](a, c, 0)
    };
    this.memoryHighWriter[39] = this.memoryWriter[65319] =
        this.cartIgnoreWrite;
    this.memoryHighWriter[40] = this.memoryWriter[65320] = this.cartIgnoreWrite;
    this.memoryHighWriter[41] = this.memoryWriter[65321] = this.cartIgnoreWrite;
    this.memoryHighWriter[42] = this.memoryWriter[65322] = this.cartIgnoreWrite;
    this.memoryHighWriter[43] = this.memoryWriter[65323] = this.cartIgnoreWrite;
    this.memoryHighWriter[44] = this.memoryWriter[65324] = this.cartIgnoreWrite;
    this.memoryHighWriter[45] = this.memoryWriter[65325] = this.cartIgnoreWrite;
    this.memoryHighWriter[46] = this.memoryWriter[65326] =
        this.cartIgnoreWrite;
    this.memoryHighWriter[47] = this.memoryWriter[65327] = this.cartIgnoreWrite;
    this.memoryHighWriter[48] = this.memoryWriter[65328] = function(a, c, b) {
        a.channel3WriteRAM(0, b)
    };
    this.memoryHighWriter[49] = this.memoryWriter[65329] = function(a, c, b) {
        a.channel3WriteRAM(1, b)
    };
    this.memoryHighWriter[50] = this.memoryWriter[65330] = function(a, c, b) {
        a.channel3WriteRAM(2, b)
    };
    this.memoryHighWriter[51] = this.memoryWriter[65331] = function(a, c, b) {
        a.channel3WriteRAM(3, b)
    };
    this.memoryHighWriter[52] = this.memoryWriter[65332] =
        function(a, c, b) {
            a.channel3WriteRAM(4, b)
        };
    this.memoryHighWriter[53] = this.memoryWriter[65333] = function(a, c, b) {
        a.channel3WriteRAM(5, b)
    };
    this.memoryHighWriter[54] = this.memoryWriter[65334] = function(a, c, b) {
        a.channel3WriteRAM(6, b)
    };
    this.memoryHighWriter[55] = this.memoryWriter[65335] = function(a, c, b) {
        a.channel3WriteRAM(7, b)
    };
    this.memoryHighWriter[56] = this.memoryWriter[65336] = function(a, c, b) {
        a.channel3WriteRAM(8, b)
    };
    this.memoryHighWriter[57] = this.memoryWriter[65337] = function(a, c, b) {
        a.channel3WriteRAM(9, b)
    };
    this.memoryHighWriter[58] = this.memoryWriter[65338] = function(a, c, b) {
        a.channel3WriteRAM(10, b)
    };
    this.memoryHighWriter[59] = this.memoryWriter[65339] = function(a, c, b) {
        a.channel3WriteRAM(11, b)
    };
    this.memoryHighWriter[60] = this.memoryWriter[65340] = function(a, c, b) {
        a.channel3WriteRAM(12, b)
    };
    this.memoryHighWriter[61] = this.memoryWriter[65341] = function(a, c, b) {
        a.channel3WriteRAM(13, b)
    };
    this.memoryHighWriter[62] = this.memoryWriter[65342] = function(a, c, b) {
        a.channel3WriteRAM(14, b)
    };
    this.memoryHighWriter[63] = this.memoryWriter[65343] =
        function(a, c, b) {
            a.channel3WriteRAM(15, b)
        };
    this.memoryHighWriter[66] = this.memoryWriter[65346] = function(a, c, b) {
        a.backgroundY != b && (a.midScanLineJIT(), a.backgroundY = b)
    };
    this.memoryHighWriter[67] = this.memoryWriter[65347] = function(a, c, b) {
        a.backgroundX != b && (a.midScanLineJIT(), a.backgroundX = b)
    };
    this.memoryHighWriter[68] = this.memoryWriter[65348] = function(a, c, b) {
        a.LCDisOn && (a.modeSTAT = 2, a.midScanlineOffset = -1, a.totalLinesPassed = a.currentX = a.queuedScanLines = a.lastUnrenderedLine = a.LCDTicks = a.STATTracker = a.actualScanLine =
            a.memory[65348] = 0)
    };
    this.memoryHighWriter[69] = this.memoryWriter[65349] = function(a, c, b) {
        a.memory[65349] != b && (a.memory[65349] = b, a.LCDisOn && a.matchLYC())
    };
    this.memoryHighWriter[74] = this.memoryWriter[65354] = function(a, c, b) {
        a.windowY != b && (a.midScanLineJIT(), a.windowY = b)
    };
    this.memoryHighWriter[75] = this.memoryWriter[65355] = function(a, c, b) {
        a.memory[65355] != b && (a.midScanLineJIT(), a.memory[65355] = b, a.windowX = b - 7)
    };
    this.memoryHighWriter[114] = this.memoryWriter[65394] = function(a, c, b) {
        a.memory[65394] = b
    };
    this.memoryHighWriter[115] =
        this.memoryWriter[65395] = function(a, c, b) {
            a.memory[65395] = b
        };
    this.memoryHighWriter[117] = this.memoryWriter[65397] = function(a, c, b) {
        a.memory[65397] = b
    };
    this.memoryHighWriter[118] = this.memoryWriter[65398] = this.cartIgnoreWrite;
    this.memoryHighWriter[119] = this.memoryWriter[65399] = this.cartIgnoreWrite;
    this.memoryHighWriter[255] = this.memoryWriter[65535] = function(a, c, b) {
        a.interruptsEnabled = b;
        a.checkIRQMatching()
    };
    this.recompileModelSpecificIOWriteHandling();
    this.recompileBootIOWriteHandling()
};
GameBoyCore.prototype.recompileModelSpecificIOWriteHandling = function() {
    this.cGBC ? (this.memoryHighWriter[2] = this.memoryWriter[65282] = function(a, c, b) {
            1 == (b & 1) ? (a.memory[65282] = b & 127, a.serialTimer = 0 == (b & 2) ? 4096 : 128, a.serialShiftTimer = a.serialShiftTimerAllocated = 0 == (b & 2) ? 512 : 16) : (a.memory[65282] = b, a.serialShiftTimer = a.serialShiftTimerAllocated = a.serialTimer = 0)
        }, this.memoryHighWriter[64] = this.memoryWriter[65344] = function(a, c, b) {
            a.memory[65344] != b && (a.midScanLineJIT(), c = 127 < b, c != a.LCDisOn && (a.LCDisOn = c,
                    a.memory[65345] &= 120, a.midScanlineOffset = -1, a.totalLinesPassed = a.currentX = a.queuedScanLines = a.lastUnrenderedLine = a.STATTracker = a.LCDTicks = a.actualScanLine = a.memory[65348] = 0, a.LCDisOn ? (a.modeSTAT = 2, a.matchLYC(), a.LCDCONTROL = a.LINECONTROL) : (a.modeSTAT = 0, a.LCDCONTROL = a.DISPLAYOFFCONTROL, a.DisplayShowOff()), a.interruptsRequested &= 253), a.gfxWindowCHRBankPosition = 64 == (b & 64) ? 1024 : 0, a.gfxWindowDisplay = 32 == (b & 32), a.gfxBackgroundBankOffset = 16 == (b & 16) ? 0 : 128, a.gfxBackgroundCHRBankPosition = 8 == (b & 8) ? 1024 : 0, a.gfxSpriteNormalHeight =
                0 == (b & 4), a.gfxSpriteShow = 2 == (b & 2), a.BGPriorityEnabled = 1 == (b & 1), a.priorityFlaggingPathRebuild(), a.memory[65344] = b)
        }, this.memoryHighWriter[65] = this.memoryWriter[65345] = function(a, c, b) {
            a.LYCMatchTriggerSTAT = 64 == (b & 64);
            a.mode2TriggerSTAT = 32 == (b & 32);
            a.mode1TriggerSTAT = 16 == (b & 16);
            a.mode0TriggerSTAT = 8 == (b & 8);
            a.memory[65345] = b & 120
        }, this.memoryHighWriter[70] = this.memoryWriter[65350] = function(a, c, b) {
            a.memory[65350] = b;
            if (224 > b) {
                b <<= 8;
                c = 65024;
                var d = a.modeSTAT;
                a.modeSTAT = 0;
                var e;
                do
                    if (e = a.memoryReader[b](a, b++),
                        e != a.memory[c]) {
                        a.modeSTAT = d;
                        a.graphicsJIT();
                        a.modeSTAT = 0;
                        a.memory[c++] = e;
                        break
                    }
                while (65184 > ++c);
                if (65184 > c) {
                    do a.memory[c++] = a.memoryReader[b](a, b++), a.memory[c++] = a.memoryReader[b](a, b++), a.memory[c++] = a.memoryReader[b](a, b++), a.memory[c++] = a.memoryReader[b](a, b++); while (65184 > c)
                }
                a.modeSTAT = d
            }
        }, this.memoryHighWriter[77] = this.memoryWriter[65357] = function(a, c, b) {
            a.memory[65357] = b & 127 | a.memory[65357] & 128
        }, this.memoryHighWriter[79] = this.memoryWriter[65359] = function(a, c, b) {
            a.currVRAMBank = b & 1;
            a.BGCHRCurrentBank =
                0 < a.currVRAMBank ? a.BGCHRBank2 : a.BGCHRBank1
        }, this.memoryHighWriter[81] = this.memoryWriter[65361] = function(a, c, b) {
            a.hdmaRunning || (a.memory[65361] = b)
        }, this.memoryHighWriter[82] = this.memoryWriter[65362] = function(a, c, b) {
            a.hdmaRunning || (a.memory[65362] = b & 240)
        }, this.memoryHighWriter[83] = this.memoryWriter[65363] = function(a, c, b) {
            a.hdmaRunning || (a.memory[65363] = b & 31)
        }, this.memoryHighWriter[84] = this.memoryWriter[65364] = function(a, c, b) {
            a.hdmaRunning || (a.memory[65364] = b & 240)
        }, this.memoryHighWriter[85] = this.memoryWriter[65365] =
        function(a, c, b) {
            a.hdmaRunning ? 0 == (b & 128) ? (a.hdmaRunning = !1, a.memory[65365] |= 128) : a.memory[65365] = b & 127 : 0 == (b & 128) ? (a.DMAWrite((b & 127) + 1), a.memory[65365] = 255) : (a.hdmaRunning = !0, a.memory[65365] = b & 127)
        }, this.memoryHighWriter[104] = this.memoryWriter[65384] = function(a, c, b) {
            a.memory[65385] = a.gbcBGRawPalette[b & 63];
            a.memory[65384] = b
        }, this.memoryHighWriter[105] = this.memoryWriter[65385] = function(a, c, b) {
            a.updateGBCBGPalette(a.memory[65384] & 63, b);
            127 < a.memory[65384] ? (c = a.memory[65384] + 1 & 63, a.memory[65384] = c | 128,
                a.memory[65385] = a.gbcBGRawPalette[c]) : a.memory[65385] = b
        }, this.memoryHighWriter[106] = this.memoryWriter[65386] = function(a, c, b) {
            a.memory[65387] = a.gbcOBJRawPalette[b & 63];
            a.memory[65386] = b
        }, this.memoryHighWriter[107] = this.memoryWriter[65387] = function(a, c, b) {
            a.updateGBCOBJPalette(a.memory[65386] & 63, b);
            127 < a.memory[65386] ? (c = a.memory[65386] + 1 & 63, a.memory[65386] = c | 128, a.memory[65387] = a.gbcOBJRawPalette[c]) : a.memory[65387] = b
        }, this.memoryHighWriter[112] = this.memoryWriter[65392] = function(a, c, b) {
            c = a.memory[65361] <<
                8 | a.memory[65362];
            if (!a.hdmaRunning || 53248 > c || 57344 <= c) a.gbcRamBank = Math.max(b & 7, 1), a.gbcRamBankPosition = (a.gbcRamBank - 1 << 12) - 53248, a.gbcRamBankPositionECHO = a.gbcRamBankPosition - 8192;
            a.memory[65392] = b
        }, this.memoryHighWriter[116] = this.memoryWriter[65396] = function(a, c, b) {
            a.memory[65396] = b
        }) : (this.memoryHighWriter[2] = this.memoryWriter[65282] = function(a, c, b) {
            1 == (b & 1) ? (a.memory[65282] = b & 127, a.serialTimer = 4096, a.serialShiftTimer = a.serialShiftTimerAllocated = 512) : (a.memory[65282] = b, a.serialShiftTimer = a.serialShiftTimerAllocated =
                a.serialTimer = 0)
        }, this.memoryHighWriter[64] = this.memoryWriter[65344] = function(a, c, b) {
            a.memory[65344] != b && (a.midScanLineJIT(), c = 127 < b, c != a.LCDisOn && (a.LCDisOn = c, a.memory[65345] &= 120, a.midScanlineOffset = -1, a.totalLinesPassed = a.currentX = a.queuedScanLines = a.lastUnrenderedLine = a.STATTracker = a.LCDTicks = a.actualScanLine = a.memory[65348] = 0, a.LCDisOn ? (a.modeSTAT = 2, a.matchLYC(), a.LCDCONTROL = a.LINECONTROL) : (a.modeSTAT = 0, a.LCDCONTROL = a.DISPLAYOFFCONTROL, a.DisplayShowOff()), a.interruptsRequested &= 253), a.gfxWindowCHRBankPosition =
                64 == (b & 64) ? 1024 : 0, a.gfxWindowDisplay = 32 == (b & 32), a.gfxBackgroundBankOffset = 16 == (b & 16) ? 0 : 128, a.gfxBackgroundCHRBankPosition = 8 == (b & 8) ? 1024 : 0, a.gfxSpriteNormalHeight = 0 == (b & 4), a.gfxSpriteShow = 2 == (b & 2), a.bgEnabled = 1 == (b & 1), a.memory[65344] = b)
        }, this.memoryHighWriter[65] = this.memoryWriter[65345] = function(a, c, b) {
            a.LYCMatchTriggerSTAT = 64 == (b & 64);
            a.mode2TriggerSTAT = 32 == (b & 32);
            a.mode1TriggerSTAT = 16 == (b & 16);
            a.mode0TriggerSTAT = 8 == (b & 8);
            a.memory[65345] = b & 120;
            (!a.usedBootROM || !a.usedGBCBootROM) && a.LCDisOn && 2 > a.modeSTAT &&
                (a.interruptsRequested |= 2, a.checkIRQMatching())
        }, this.memoryHighWriter[70] = this.memoryWriter[65350] = function(a, c, b) {
            a.memory[65350] = b;
            if (127 < b && 224 > b) {
                b <<= 8;
                c = 65024;
                var d = a.modeSTAT;
                a.modeSTAT = 0;
                var e;
                do
                    if (e = a.memoryReader[b](a, b++), e != a.memory[c]) {
                        a.modeSTAT = d;
                        a.graphicsJIT();
                        a.modeSTAT = 0;
                        a.memory[c++] = e;
                        break
                    }
                while (65184 > ++c);
                if (65184 > c) {
                    do a.memory[c++] = a.memoryReader[b](a, b++), a.memory[c++] = a.memoryReader[b](a, b++), a.memory[c++] = a.memoryReader[b](a, b++), a.memory[c++] = a.memoryReader[b](a, b++);
                    while (65184 > c)
                }
                a.modeSTAT = d
            }
        }, this.memoryHighWriter[71] = this.memoryWriter[65351] = function(a, c, b) {
            a.memory[65351] != b && (a.midScanLineJIT(), a.updateGBBGPalette(b), a.memory[65351] = b)
        }, this.memoryHighWriter[72] = this.memoryWriter[65352] = function(a, c, b) {
            a.memory[65352] != b && (a.midScanLineJIT(), a.updateGBOBJPalette(0, b), a.memory[65352] = b)
        }, this.memoryHighWriter[73] = this.memoryWriter[65353] = function(a, c, b) {
            a.memory[65353] != b && (a.midScanLineJIT(), a.updateGBOBJPalette(4, b), a.memory[65353] = b)
        }, this.memoryHighWriter[77] =
        this.memoryWriter[65357] = function(a, c, b) {
            a.memory[65357] = b
        }, this.memoryHighWriter[79] = this.memoryWriter[65359] = this.cartIgnoreWrite, this.memoryHighWriter[85] = this.memoryWriter[65365] = this.cartIgnoreWrite, this.memoryHighWriter[104] = this.memoryWriter[65384] = this.cartIgnoreWrite, this.memoryHighWriter[105] = this.memoryWriter[65385] = this.cartIgnoreWrite, this.memoryHighWriter[106] = this.memoryWriter[65386] = this.cartIgnoreWrite, this.memoryHighWriter[107] = this.memoryWriter[65387] = this.cartIgnoreWrite, this.memoryHighWriter[108] =
        this.memoryWriter[65388] = this.cartIgnoreWrite, this.memoryHighWriter[112] = this.memoryWriter[65392] = this.cartIgnoreWrite, this.memoryHighWriter[116] = this.memoryWriter[65396] = this.cartIgnoreWrite)
};
GameBoyCore.prototype.recompileBootIOWriteHandling = function() {
    this.inBootstrap ? (this.memoryHighWriter[80] = this.memoryWriter[65360] = function(a, c, b) {
        cout("Boot ROM reads blocked: Bootstrap process has ended.", 0);
        a.inBootstrap = !1;
        a.disableBootROM();
        a.memory[65360] = b
    }, this.cGBC && (this.memoryHighWriter[108] = this.memoryWriter[65388] = function(a, c, b) {
        a.inBootstrap && (a.cGBC = 0 == (b & 1), "Game and Watch 50" == a.name + a.gameCode + a.ROM[323] && (a.cGBC = !0, cout("Created a boot exception for Game and Watch Gallery 2 (GBC ID byte is wrong on the cartridge).",
            1)), cout("Booted to GBC Mode: " + a.cGBC, 0));
        a.memory[65388] = b
    })) : this.memoryHighWriter[80] = this.memoryWriter[65360] = this.cartIgnoreWrite
};
GameBoyCore.prototype.toTypedArray = function(a, c) {
    try {
        if (settings[5] || "float32" != c && GameBoyWindow.opera && this.checkForOperaMathBug()) return a;
        if (!a || !a.length) return [];
        var b = a.length;
        switch (c) {
            case "uint8":
                var d = new Uint8Array(b);
                break;
            case "int8":
                d = new Int8Array(b);
                break;
            case "int32":
                d = new Int32Array(b);
                break;
            case "float32":
                d = new Float32Array(b)
        }
        for (var e = 0; e < b; e++) d[e] = a[e];
        return d
    } catch (f) {
        return cout("Could not convert an array to a typed array: " + f.message, 1), a
    }
};
GameBoyCore.prototype.fromTypedArray = function(a) {
    try {
        if (!a || !a.length) return [];
        for (var c = [], b = 0; b < a.length; ++b) c[b] = a[b];
        return c
    } catch (d) {
        return cout("Conversion from a typed array failed: " + d.message, 1), a
    }
};
GameBoyCore.prototype.getTypedArray = function(a, c, b) {
    try {
        if (settings[5]) throw Error("");
        if ("float32" != b && GameBoyWindow.opera && this.checkForOperaMathBug()) throw Error("");
        switch (b) {
            case "int8":
                var d = new Int8Array(a);
                break;
            case "uint8":
                d = new Uint8Array(a);
                break;
            case "int32":
                d = new Int32Array(a);
                break;
            case "float32":
                d = new Float32Array(a)
        }
        if (0 != c)
            for (b = 0; b < a;) d[b++] = c
    } catch (e) {
        for (cout("Could not convert an array to a typed array: " + e.message, 1), d = [], b = 0; b < a;) d[b++] = c
    }
    return d
};
GameBoyCore.prototype.checkForOperaMathBug = function() {
    var a = new Uint8Array(1);
    a[0] = -1;
    a[0] >>= 0;
    return 255 != a[0] ? (cout("Detected faulty math by your browser.", 2), !0) : !1
};
"use strict";
var gameboy = null,
    gbRunInterval = null,
    settings = [!0, !1, !1, [39, 37, 38, 40, 88, 90, 16, 13], !0, !1, 4, 15, 30, !1, !1, !1, !1, 16, 1];

function start(a, c) {
    clearLastEmulation();
    autoSave();
    gameboy = new GameBoyCore(a, c);
    gameboy.openMBC = openSRAM;
    gameboy.openRTC = openRTC;
    gameboy.start();
    run()
}

function run() {
    if (GameBoyEmulatorInitialized())
        if (GameBoyEmulatorPlaying()) cout("The GameBoy core is already running.", 1);
        else {
            gameboy.stopEmulator &= 1;
            cout("Starting the iterator.", 0);
            var a = new_Date();
            gameboy.firstIteration = a.getTime();
            gameboy.iterations = 0
        }
    else cout("GameBoy core cannot run while it has not been initialized.", 1)
}

function pause() {
    GameBoyEmulatorInitialized() ? GameBoyEmulatorPlaying() ? clearLastEmulation() : cout("GameBoy core has already been paused.", 1) : cout("GameBoy core cannot be paused while it has not been initialized.", 1)
}

function clearLastEmulation() {
    GameBoyEmulatorInitialized() && GameBoyEmulatorPlaying() ? (clearInterval(gbRunInterval), gameboy.stopEmulator |= 2, cout("The previous emulation has been cleared.", 0)) : cout("No previous emulation was found to be cleared.", 0)
}

function save() {
    if (GameBoyEmulatorInitialized()) try {
        for (var a = 0; null != findValue("FREEZE_" + gameboy.name + "_" + a);) a++;
        setValue("FREEZE_" + gameboy.name + "_" + a, gameboy.saveState());
        cout("Saved the current state as: FREEZE_" + gameboy.name + "_" + a, 0)
    } catch (c) {
        cout('Could not save the current emulation state("' + c.message + '").', 2)
    } else cout("GameBoy core cannot be saved while it has not been initialized.", 1)
}

function saveSRAM() {
    if (GameBoyEmulatorInitialized()) {
        if (gameboy.cBATT) try {
            var a = gameboy.saveSRAMState();
            0 < a.length ? (cout("Saving the SRAM...", 0), null != findValue("SRAM_" + gameboy.name) && (cout("Deleting the old SRAM save due to outdated format.", 0), deleteValue("SRAM_" + gameboy.name)), setValue("B64_SRAM_" + gameboy.name, arrayToBase64(a))) : cout("SRAM could not be saved because it was empty.", 1)
        } catch (c) {
            cout('Could not save the current emulation state("' + c.message + '").', 2)
        } else cout("Cannot save a game that does not have battery backed SRAM specified.",
            1);
        saveRTC()
    } else cout("GameBoy core cannot be saved while it has not been initialized.", 1)
}

function saveRTC() {
    if (GameBoyEmulatorInitialized()) {
        if (gameboy.cTIMER) try {
            cout("Saving the RTC...", 0), setValue("RTC_" + gameboy.name, gameboy.saveRTCState())
        } catch (a) {
            cout('Could not save the RTC of the current emulation state("' + a.message + '").', 2)
        }
    } else cout("GameBoy core cannot be saved while it has not been initialized.", 1)
}

function autoSave() {
    GameBoyEmulatorInitialized() && (cout("Automatically saving the SRAM.", 0), saveSRAM(), saveRTC())
}

function openSRAM(a) {
    try {
        if (null != findValue("B64_SRAM_" + a)) return cout("Found a previous SRAM state (Will attempt to load).", 0), base64ToArray(findValue("B64_SRAM_" + a));
        if (null != findValue("SRAM_" + a)) return cout("Found a previous SRAM state (Will attempt to load).", 0), findValue("SRAM_" + a);
        cout("Could not find any previous SRAM copy for the current ROM.", 0)
    } catch (c) {
        cout("Could not open the  SRAM of the saved emulation state.", 2)
    }
    return []
}

function openRTC(a) {
    try {
        if (null != findValue("RTC_" + a)) return cout("Found a previous RTC state (Will attempt to load).", 0), findValue("RTC_" + a);
        cout("Could not find any previous RTC copy for the current ROM.", 0)
    } catch (c) {
        cout("Could not open the RTC data of the saved emulation state.", 2)
    }
    return []
}

function openState(a, c) {
    try {
        if (null != findValue(a)) try {
            clearLastEmulation(), cout("Attempting to run a saved emulation state.", 0), gameboy = new GameBoyCore(c, ""), gameboy.savedStateFileName = a, gameboy.returnFromState(findValue(a)), run()
        } catch (b) {
            alert(b.message + " file: " + b.fileName + " line: " + b.lineNumber)
        } else cout("Could not find the save state " + a + '".', 2)
    } catch (b) {
        cout("Could not open the saved emulation state.", 2)
    }
}

function import_save(a) {
    if ((a = decodeBlob(a)) && a.blobs)
        if (0 < a.blobs.length)
            for (var c = 0; c < a.blobs.length; ++c) cout('Importing blob "' + a.blobs[c].blobID + '"', 0), a.blobs[c].blobContent ? "SRAM_" == a.blobs[c].blobID.substring(0, 5) ? setValue("B64_" + a.blobs[c].blobID, base64(a.blobs[c].blobContent)) : setValue(a.blobs[c].blobID, JSON.parse(a.blobs[c].blobContent)) : a.blobs[c].blobID ? cout('Save file imported had blob "' + a.blobs[c].blobID + '" with no blob data interpretable.', 2) : cout("Blob chunk information missing completely.",
                2);
        else cout("Could not decode the imported file.", 2);
    else cout("Could not decode the imported file.", 2)
}

function generateBlob(a, c) {
    var b = "EMULATOR_DATA",
        b = b + to_little_endian_dword(b.length + 4 + 8 + (1 + a.length + (4 + c.length))),
        b = b + to_byte(7),
        b = b + "GameBoy" + to_byte(a.length),
        b = b + a + to_little_endian_dword(c.length);
    return b += c
}

function generateMultiBlob(a) {
    for (var c = 25, b = to_byte(7), b = b + "GameBoy", d, e, f = 0; f < a.length; ++f) d = a[f][0], e = a[f][1], b += to_byte(d.length), b += d, b += to_little_endian_dword(e.length), b += e, c += 1 + d.length + 4 + e.length;
    return b = "EMULATOR_DATA" + to_little_endian_dword(c) + b
}

function decodeBlob(a) {
    var c = a.length,
        b = {
            consoleID: null
        },
        d = -1;
    b.blobs = [];
    if (17 < c && "EMULATOR_DATA" == a.substring(0, 13)) {
        var c = Math.min((a.charCodeAt(16) & 255) << 24 | (a.charCodeAt(15) & 255) << 16 | (a.charCodeAt(14) & 255) << 8 | a.charCodeAt(13) & 255, c),
            e = a.charCodeAt(17) & 255;
        if (c > 17 + e) {
            b.consoleID = a.substring(18, 18 + e);
            for (var f, e = 18 + e; e < c;)
                if (f = a.charCodeAt(e++) & 255, e + f < c)
                    if (b.blobs[++d] = {}, b.blobs[d].blobID = a.substring(e, e + f), e += f, e + 4 < c)
                        if (f = (a.charCodeAt(e + 3) & 255) << 24 | (a.charCodeAt(e + 2) & 255) << 16 | (a.charCodeAt(e +
                                1) & 255) << 8 | a.charCodeAt(e) & 255, e += 4, e + f <= c) b.blobs[d].blobContent = a.substring(e, e + f), e += f;
                        else {
                            cout("Blob length check failed, blob determined to be incomplete.", 2);
                            break
                        }
            else {
                cout("Blob was incomplete, bailing out.", 2);
                break
            } else {
                cout("Blob was incomplete, bailing out.", 2);
                break
            }
        }
    }
    return b
}

function matchKey(a) {
    for (var c = 0; c < settings[3].length; c++)
        if (settings[3][c] == a) return c;
    return -1
}

function GameBoyEmulatorInitialized() {
    return "object" == typeof gameboy && null != gameboy
}

function GameBoyEmulatorPlaying() {
    return 0 == (gameboy.stopEmulator & 2)
}

function GameBoyKeyDown(a) {
    if (GameBoyEmulatorInitialized() && GameBoyEmulatorPlaying()) {
        var c = matchKey(a.keyCode);
        if (0 <= c && 8 > c) {
            gameboy.JoyPadEvent(c, !0);
            try {
                a.preventDefault()
            } catch (b) {}
        }
    }
}

function GameBoyKeyUp(a) {
    if (GameBoyEmulatorInitialized() && GameBoyEmulatorPlaying()) {
        var c = matchKey(a.keyCode);
        if (0 <= c && 8 > c) {
            gameboy.JoyPadEvent(c, !1);
            try {
                a.preventDefault()
            } catch (b) {}
        }
    }
}

function GameBoyGyroSignalHandler(a) {
    if (GameBoyEmulatorInitialized() && GameBoyEmulatorPlaying()) {
        a.gamma || a.beta ? gameboy.GyroEvent(a.gamma * Math.PI / 180, a.beta * Math.PI / 180) : gameboy.GyroEvent(a.x, a.y);
        try {
            a.preventDefault()
        } catch (c) {}
    }
}

function initNewCanvas() {
    GameBoyEmulatorInitialized() && (gameboy.canvas.width = gameboy.canvas.clientWidth, gameboy.canvas.height = gameboy.canvas.clientHeight)
}

function initNewCanvasSize() {
    GameBoyEmulatorInitialized() && (settings[12] ? gameboy.onscreenWidth == gameboy.canvas.clientWidth && gameboy.onscreenHeight == gameboy.canvas.clientHeight || gameboy.initLCD() : 160 == gameboy.onscreenWidth && 144 == gameboy.onscreenHeight || gameboy.initLCD())
}
var gameboy_rom = "";
////////////////////////////////////////////////////////////////////////////////
// Runner
////////////////////////////////////////////////////////////////////////////////

var success = true;

function NotifyStart(name) {}

function NotifyError(name, error) {
    WScript.Echo(name + " : ERROR : " + error.stack);
    success = false;
}

function NotifyResult(name, score) {
    if (success) {
        WScript.Echo("### SCORE:", score);
    }
}

function NotifyScore(score) {}

BenchmarkSuite.RunSuites({
    NotifyStart: NotifyStart,
    NotifyError: NotifyError,
    NotifyResult: NotifyResult,
    NotifyScore: NotifyScore
});
