<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>arg.js</files>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
      <baseline>arg.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>linenumber1.js</files>
      <!-- TODO investigate why -ExtendedErrorStackForTestHost inserts tabs at the beginning of some frames (Microsoft/ChakraCore#3130) -->
      <compile-flags>-force:inline -ExtendedErrorStackForTestHost-</compile-flags>
      <baseline>linenumber1.baseline</baseline>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>linenumber1.js</files>
      <!-- Variant of test without -force:inline to ensure output is the same -->
      <!-- TODO investigate why -ExtendedErrorStackForTestHost inserts tabs at the beginning of some frames (Microsoft/ChakraCore#3130) -->
      <!-- <compile-flags>-force:inline -ExtendedErrorStackForTestHost-</compile-flags> -->
      <compile-flags>-ExtendedErrorStackForTestHost-</compile-flags>
      <baseline>linenumber1.baseline</baseline>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>linenumber2.js</files>
      <!-- TODO investigate why -ExtendedErrorStackForTestHost inserts tabs at the beginning of some frames (Microsoft/ChakraCore#3130) -->
      <compile-flags>-force:inline -ExtendedErrorStackForTestHost-</compile-flags>
      <baseline>linenumber2.baseline</baseline>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>linenumber2.js</files>
      <!-- Variant of test without -force:inline to ensure output is the same -->
      <!-- TODO investigate why -ExtendedErrorStackForTestHost inserts tabs at the beginning of some frames (Microsoft/ChakraCore#3130) -->
      <!-- <compile-flags>-force:inline -ExtendedErrorStackForTestHost-</compile-flags> -->
      <compile-flags>-ExtendedErrorStackForTestHost-</compile-flags>
      <baseline>linenumber2.baseline</baseline>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>linenumber3.js</files>
      <!-- TODO investigate why -ExtendedErrorStackForTestHost inserts tabs at the beginning of some frames (Microsoft/ChakraCore#3130) -->
      <compile-flags>-force:inline -ExtendedErrorStackForTestHost-</compile-flags>
      <baseline>linenumber3.baseline</baseline>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>linenumber3.js</files>
      <!-- Variant of test without -force:inline to ensure output is the same -->
      <!-- TODO investigate why -ExtendedErrorStackForTestHost inserts tabs at the beginning of some frames (Microsoft/ChakraCore#3130) -->
      <!-- <compile-flags>-force:inline -ExtendedErrorStackForTestHost-</compile-flags> -->
      <compile-flags>-ExtendedErrorStackForTestHost-</compile-flags>
      <baseline>linenumber3.baseline</baseline>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>InlineConstructors.js</files>
      <baseline>InlineConstructors.baseline</baseline>
      <compile-flags>-force:inline</compile-flags>
      <tags>exclude_arm,Slow</tags>
      <timeout>300</timeout>
    </default>
  </test>
  <test>
    <default>
      <files>InlinedConstructorBailout.js</files>
      <baseline>InlinedConstructorBailout.baseline</baseline>
      <compile-flags>-force:inline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>inliningWithArguments.js</files>
      <compile-flags>-force:inline</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>inliningApplyTarget.js</files>
      <baseline>inliningApplyTarget.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>applyBugs.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>applyBailout.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:0</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bugs.js</files>
      <compile-flags>-maxinterpretcount:1 -off:simplejit -loopinterpretcount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>linenumber4.js</files>
      <baseline>linenumber4.baseline</baseline>
      <compile-flags>-maxinterpretcount:1 -off:simpleJit -loopinterpretcount:0 -force:inline -bgjit-</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Miscellaneous_MaxInterpret.js</files>
      <baseline>Miscellaneous_MaxInterpret.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -force:inline</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>NoProf.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug515849.js</files>
      <baseline>bug515849.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -msjrc:0 -force:inline</compile-flags>
      <tags>exclude_arm64</tags>
    </default>
  </test>
  <test>
    <default>
      <files>inlineBuiltIns.js</files>
      <compile-flags> -maxInterpretCount:1 -msjrc:0 </compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spread.js</files>
      <compile-flags>-maxSimpleJitRunCount:1 -maxInterpretCount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>polyInliningFixedMethods.js</files>
      <baseline>polyInliningFixedMethods.baseline</baseline>
      <compile-flags>-maxInterpretCount:1 -maxSimpleJitRunCount:1 -ExtendedErrorStackForTestHost</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug650495.js</files>
      <baseline>bug650495.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>polyInliningBugs.js</files>
      <compile-flags>-maxInterpretCount:1 -maxSimpleJitRunCount:1 -off:aggressiveinttypespec</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>polyInliningUninitializedRetVal.js</files>
      <baseline>polyInliningUninitializedRetVal.baseline</baseline>
      <compile-flags>-bgjit- -maxinterpretcount:1 -maxsimplejitruncount:1 -force:inline -stress:BailOnNoProfile</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>callTarget.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug594138.js</files>
      <compile-flags>-maxinterpretcount:1 -force:scriptfunctionwithinlinecache</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>inlineeArgoutCount.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>markTempArgOut.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug1469518.js</files>
      <baseline>bug1469518.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug1355201.js</files>
      <baseline>bug1355201.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>recursive_inline.js</files>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>recursive_inline2.js</files>
      <compile-flags>-maxinterpretcount:2 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug2328551.js</files>
      <baseline>bug2328551.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug2269097.js</files>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_2733280.js</files>
      <compile-flags>-loopinterpretcount:1 -bgjit- -maxsimplejitruncount:1 -maxinterpretcount:1 -force:scriptfunctionwithinlinecache</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_2733280.js</files>
      <compile-flags>-loopinterpretcount:1 -bgjit- -maxsimplejitruncount:1 -maxinterpretcount:1 -force:scriptfunctionwithinlinecache -off:stackargopt</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>builtInApplyTarget.js</files>
      <baseline>builtInApplyTarget.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>stackTrace.js</files>
      <compile-flags>-ExtendedErrorStackForTestHost</compile-flags>
      <baseline>stackTrace.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>missingInlineeEnd.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>inliningInLoopBody.js</files>
      <compile-flags>-loopinterpretcount:1 -bgjit- -force:inline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug9936017.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug11265991.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug12528802.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>callToDynamicScript.js</files>
      <compile-flags>-loopinterpretcount:1 -bgjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>InlineCallbacks.js</files>
      <compile-flags>-testtrace:InlineCallbacks</compile-flags>
      <baseline>InlineCallbacks.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative,exclude_forceserialized,require_backend</tags>
    </default>
  </test>
  <test>
    <default>
      <files>recursiveCallbacks.js</files>
    </default>
  </test>
</regress-exe>
