<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
<test>
  <default>
    <files>unsigned.js</files>
    <compile-flags>-wasm -args 0 5 -endargs</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>unsigned.js</files>
    <compile-flags>-wasm -args 6 10 -endargs</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>unsigned.js</files>
    <compile-flags>-wasm -args 11 15 -endargs</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>unsigned.js</files>
    <compile-flags>-wasm -args 16 20 -endargs</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>unsigned.js</files>
    <compile-flags>-wasm -args 21 -endargs</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>regress.js</files>
    <compile-flags>-wasm -args --no-verbose -endargs</compile-flags>
    <tags>exclude_jshost,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>regress.js</files>
    <!-- Variant running without tests using wabt for jshost -->
    <compile-flags>-wasm -args --no-verbose --no-wabt -endargs</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>rot.js</files>
    <baseline>rot.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>fastarray.js</files>
    <compile-flags>-wasm -WasmFastArray-</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>fastarray.js</files>
    <compile-flags>-wasm -WasmFastArray</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>misc.js</files>
    <baseline>misc.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>controlflow.js</files>
    <baseline>controlflow.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>f32.js</files>
    <compile-flags>-wasm</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>f64.js</files>
    <compile-flags>-wasm</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>math.js</files>
    <compile-flags>-wasm -wasmi64</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>dropteelocal.js</files>
    <baseline>dropteelocal.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>i32_popcnt.js</files>
    <baseline>i32_popcnt.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>f32address.js</files>
    <compile-flags>-wasm  </compile-flags>
  </default>
</test>
<test>
  <default>
    <files>divByConstants.js</files>
    <compile-flags>-wasm  </compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>divByConstants_unsigned.js</files>
    <compile-flags>-wasm  </compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>global.js</files>
    <baseline>baselines/global.baseline</baseline>
    <compile-flags>-wasm -wasmi64</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>basic.js</files>
    <baseline>basic.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>basic.js</files>
    <baseline>basic.baseline</baseline>
    <compile-flags>-ForceStaticInterpreterThunk -wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>table.js</files>
    <baseline>table.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>table_imports.js</files>
    <baseline>baselines/table_imports.baseline</baseline>
    <compile-flags>-wasm -wasmi64</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>table_signatures.js</files>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
    <compile-flags>-wasm -args --no-verbose -endargs</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>call.js</files>
    <baseline>baselines/call.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>array.js</files>
    <baseline>array.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>trunc.js</files>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>api.js</files>
    <baseline>baselines/api.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>invalid_global_mut.js</files>
    <compile-flags>-wasm</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>bugs.js</files>
    <compile-flags>-wasm</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>params.js</files>
    <baseline>baselines/params.baseline</baseline>
    <compile-flags>-wasm -EnableFatalErrorOnOOM- -args 14000 -endargs</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7,exclude_dynapogo,exclude_sanitize_address</tags>
  </default>
</test>
<test>
  <default>
    <files>inlining.js</files>
    <baseline>inlining.baseline</baseline>
    <tags>exclude_jshost,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>params.js</files>
    <baseline>baselines/params.baseline</baseline>
    <compile-flags>-wasm -args 14000 -endargs</compile-flags>
    <tags>exclude_jshost,exclude_win7,exclude_dynapogo</tags>
  </default>
</test>
  <test>
    <default>
      <files>debugger_basic.js</files>
      <compile-flags>-wasm -dbgbaseline:debugger_basic.js.dbg.baseline</compile-flags>
      <tags>exclude_jshost,exclude_win7,exclude_drt,exclude_snap,require_debugger</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugger_basic.js</files>
      <compile-flags>-wasm -maic:1 -dbgbaseline:debugger_basic.js.dbg.baseline</compile-flags>
      <tags>exclude_jshost,exclude_win7,exclude_drt,exclude_snap,require_debugger</tags>
    </default>
  </test>
  <test>
    <default>
      <files>debugger_basic.js</files>
      <compile-flags>-wasm -debuglaunch -args debuglaunch -endargs -dbgbaseline:debugger_basic_launch.js.dbg.baseline</compile-flags>
      <tags>exclude_jshost,exclude_win7,exclude_drt,exclude_snap,require_debugger</tags>
    </default>
  </test>
  <test>
    <default>
      <files>wasmcctx.js</files>
      <compile-flags>-wasm -dbgbaseline:wasmcctx.js.dbg.baseline -InspectMaxStringLength:50</compile-flags>
      <!-- todo-xplat: Fix this! The test is flaky on XPLAT -->
      <tags>exclude_jshost,exclude_win7,exclude_drt,exclude_snap,require_debugger,exclude_xplat</tags>
    </default>
  </test>
<test>
  <default>
    <files>oom_wasm.js</files>
      <!-- These tests expect OOM, -EnableFatalErrorOnOOM- to disable fatal error for this test case. Bug will be filed to address this later -->
    <compile-flags>-EnableFatalErrorOnOOM- -wasm -args 0 16384 -endargs</compile-flags>
    <tags>exclude_x64</tags>
  </default>
</test>
<test>
  <default>
    <files>oom_wasm.js</files>
    <compile-flags>-EnableFatalErrorOnOOM- -wasm -args 3 16381 -endargs</compile-flags>
    <tags>exclude_x64</tags>
  </default>
</test>
<test>
  <default>
    <files>oom.js</files>
    <compile-flags>-EnableFatalErrorOnOOM- -wasm -args 0 16384 -endargs</compile-flags>
    <tags>exclude_x64</tags>
  </default>
</test>
<test>
  <default>
    <files>oom.js</files>
    <compile-flags>-EnableFatalErrorOnOOM- -wasm -args 3 16381 -endargs</compile-flags>
    <tags>exclude_x64</tags>
  </default>
</test>
<test>
  <default>
    <files>response.js</files>
    <baseline>baselines/response.baseline</baseline>
    <compile-flags>-wasm</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>i64.js</files>
    <compile-flags>-wasm -args --no-verbose -endargs</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>i64cf.js</files>
    <compile-flags>-wasm -maic:0</compile-flags>
    <tags>exclude_x64</tags>
  </default>
</test>
<test>
  <default>
    <files>nestedblocks.js</files>
    <compile-flags>-wasm</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7,exclude_dynapogo</tags>
  </default>
</test>
<test>
  <default>
    <files>cse.js</files>
    <baseline>baselines/cse.baseline</baseline>
    <compile-flags>-wasm -maic:0 -WasmAssignModuleID -testtrace:cse:2.0-99.999</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7,exclude_interpreted,exclude_sanitize_address</tags>
  </default>
</test>
<test>
  <default>
    <files>signextend.js</files>
    <compile-flags>-wasm -args --no-verbose -endargs</compile-flags>
    <tags>exclude_jshost,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>memory.js</files>
    <compile-flags>-wasm</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>memory.js</files>
    <compile-flags>-wasm -wasmfastarray-</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>superlongsignaturemismatch.js</files>
    <compile-flags>-wasm</compile-flags>
    <tags>exclude_jshost,exclude_drt,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>binary.js</files>
    <compile-flags>-wasm -args --no-verbose -endargs</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>binary.js</files>
    <compile-flags>-wasm -args --no-verbose -endargs</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>polyinline.js</files>
    <compile-flags>-maxinterpretcount:2 -off:simplejit</compile-flags>
    <tags>exclude_jshost,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>limits.js</files>
    <compile-flags>-wasm -args --no-verbose --end 4 -endargs</compile-flags>
    <timeout>300</timeout>
    <tags>exclude_jshost,exclude_drt,exclude_win7,exclude_debug,exclude_dynapogo,exclude_x86,Slow</tags>
  </default>
</test>
<test>
  <default>
    <files>limits.js</files>
    <compile-flags>-wasm -args --no-verbose --start 4 --end 12 -endargs</compile-flags>
    <timeout>300</timeout>
    <tags>exclude_jshost,exclude_drt,exclude_win7,exclude_debug,exclude_dynapogo,exclude_x86,Slow</tags>
  </default>
</test>
<test>
  <default>
    <files>limits.js</files>
    <compile-flags>-wasm -args --no-verbose --start 12 -endargs</compile-flags>
    <timeout>300</timeout>
    <tags>exclude_jshost,exclude_drt,exclude_win7,exclude_debug,exclude_dynapogo,exclude_x86,Slow</tags>
  </default>
</test>
<test>
  <default>
    <files>loopstslot.js</files>
    <compile-flags>-forcejitloopbody</compile-flags>
    <tags>exclude_jshost,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>loopyield.js</files>
    <compile-flags>-forcejitloopbody</compile-flags>
    <tags>exclude_jshost,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>loopyieldnested.js</files>
    <compile-flags>-lic:10 -bgjit-</compile-flags>
    <tags>exclude_jshost,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>loopyieldtypes.js</files>
    <compile-flags>-forcejitloopbody</compile-flags>
    <tags>exclude_jshost,exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>loopyieldregress.js</files>
    <compile-flags>-lic:0 -bgjit-</compile-flags>
    <tags>exclude_win7</tags>
  </default>
</test>
<test>
  <default>
    <files>atomics_test.js</files>
    <compile-flags>-wasmthreads -ESSharedArrayBuffer -args summary -endargs</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>reload.js</files>
    <compile-flags>-wasmthreads -ESSharedArrayBuffer</compile-flags>
    <tags>exclude_jshost</tags>
  </default>
</test>
</regress-exe>
